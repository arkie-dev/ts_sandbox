#loc = loc("/home/devro/workspace/ts_sandbox/load_load.py":10:0)
#loc15 = loc("a_ptr"(#loc))
#loc16 = loc("y"(#loc))
#loc17 = loc("b_ptr"(#loc))
#loc18 = loc("size0"(#loc))
#loc19 = loc("stride0"(#loc))
#loc20 = loc("num0"(#loc))
module {
  tt.func public @load_load(%a_ptr: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("a_ptr"(#loc)), %y: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("y"(#loc)), %b_ptr: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("b_ptr"(#loc)), %size0: i32 {tt.divisibility = 16 : i32} loc("size0"(#loc)), %stride0: i32 {tt.divisibility = 16 : i32} loc("stride0"(#loc)), %num0: i32 loc("num0"(#loc))) attributes {noinline = false} {
    %cst = arith.constant dense<2.000000e+00> : tensor<1024xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1024xf32> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %pid = tt.get_program_id x : i32 loc(#loc21)
    %offsets = arith.muli %pid, %c1024_i32 : i32 loc(#loc22)
    %offsets_1 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc23)
    %offsets_2 = tt.splat %offsets : i32 -> tensor<1024xi32> loc(#loc24)
    %offsets_3 = arith.addi %offsets_2, %offsets_1 : tensor<1024xi32> loc(#loc24)
    %mask = tt.splat %size0 : i32 -> tensor<1024xi32> loc(#loc25)
    %mask_4 = arith.cmpi slt, %offsets_3, %mask : tensor<1024xi32> loc(#loc25)
    %idx = tt.splat %y : !tt.ptr<i32> -> tensor<1024x!tt.ptr<i32>> loc(#loc26)
    %idx_5 = tt.addptr %idx, %offsets_3 : tensor<1024x!tt.ptr<i32>>, tensor<1024xi32> loc(#loc26)
    %idx_6 = tt.load %idx_5, %mask_4 : tensor<1024x!tt.ptr<i32>> loc(#loc27)
    %x = tt.splat %a_ptr : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc28)
    %x_7 = tt.addptr %x, %idx_6 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc28)
    %x_8 = tt.load %x_7, %mask_4, %cst_0 : tensor<1024x!tt.ptr<f32>> loc(#loc29)
    %result = arith.mulf %x_8, %cst : tensor<1024xf32> loc(#loc30)
    %0 = tt.splat %b_ptr : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc12)
    %1 = tt.addptr %0, %offsets_3 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc12)
    tt.store %1, %result, %mask_4 : tensor<1024x!tt.ptr<f32>> loc(#loc13)
    tt.return loc(#loc14)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/home/devro/workspace/ts_sandbox/load_load.py":11:24)
#loc3 = loc("/home/devro/workspace/ts_sandbox/load_load.py":12:20)
#loc4 = loc("/home/devro/workspace/ts_sandbox/load_load.py":12:46)
#loc5 = loc("/home/devro/workspace/ts_sandbox/load_load.py":12:33)
#loc6 = loc("/home/devro/workspace/ts_sandbox/load_load.py":14:21)
#loc7 = loc("/home/devro/workspace/ts_sandbox/load_load.py":16:22)
#loc8 = loc("/home/devro/workspace/ts_sandbox/load_load.py":16:18)
#loc9 = loc("/home/devro/workspace/ts_sandbox/load_load.py":18:24)
#loc10 = loc("/home/devro/workspace/ts_sandbox/load_load.py":18:16)
#loc11 = loc("/home/devro/workspace/ts_sandbox/load_load.py":20:15)
#loc12 = loc("/home/devro/workspace/ts_sandbox/load_load.py":21:21)
#loc13 = loc("/home/devro/workspace/ts_sandbox/load_load.py":21:30)
#loc14 = loc("/home/devro/workspace/ts_sandbox/load_load.py":21:4)
#loc21 = loc("pid"(#loc2))
#loc22 = loc("offsets"(#loc3))
#loc23 = loc("offsets"(#loc4))
#loc24 = loc("offsets"(#loc5))
#loc25 = loc("mask"(#loc6))
#loc26 = loc("idx"(#loc7))
#loc27 = loc("idx"(#loc8))
#loc28 = loc("x"(#loc9))
#loc29 = loc("x"(#loc10))
#loc30 = loc("result"(#loc11))
