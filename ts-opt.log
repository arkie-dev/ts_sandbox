Args: /home/devro/workspace/triton/build/cmake.linux-x86_64-cpython-3.12/third_party/triton_shared/tools/triton-shared-opt/triton-shared-opt input.mlir --triton-to-linalg-experimental --mlir-print-debuginfo -debug -o output.mlir 
Load new dialect in Context builtin
ImplicitTypeIDRegistry::lookupOrInsert(mlir::VectorElementTypeInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::FloatType)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::PtrLikeTypeInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::ShapedType)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::MemRefLayoutAttrInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpAsmAttrInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::BlobAttr)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::TypedAttr)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::ElementsAttr)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::DistinctAttr)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::BytecodeOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::SymbolOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpAsmOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::RegionKindInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::ConditionallySpeculatable)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::MemoryEffectOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::ResourceBlobManagerDialectInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpAsmDialectInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::BytecodeDialectInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::detail::AffineBinaryOpExprStorage)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::detail::AffineConstantExprStorage)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::detail::AffineDimExprStorage)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::detail::AffineMapStorage)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::detail::IntegerSetStorage)
Load new dialect in Context builtin
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::ZeroOperands<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::OneRegion<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::ZeroResults<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::ZeroSuccessors<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::NoRegionArguments<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::NoTerminator<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::SingleBlock<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::OpInvariants<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::BytecodeOpInterface::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::AffineScope<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::IsIsolatedFromAbove<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::SymbolTable<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::SymbolOpInterface::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpAsmOpInterface::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::RegionKindInterface::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::HasOnlyGraphRegion<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::AttributeTrait::IsLocation<Empty>)
Load new dialect in Context tt
Load new dialect in Context arith
ImplicitTypeIDRegistry::lookupOrInsert(mlir::arith::ArithFastMathInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::VectorUnrollOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::InferTypeOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::InferIntRangeInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::arith::ArithIntegerOverflowFlagsInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::CastOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::arith::ArithRoundingModeInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::SelectLikeOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::DialectInlinerInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::ConvertToEmitCPatternInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::ConvertToLLVMPatternInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::bufferization::BufferDeallocationOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::bufferization::BufferizableOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::ValueBoundsOpInterface)
Load new dialect in Context math
Load new dialect in Context scf
ImplicitTypeIDRegistry::lookupOrInsert(mlir::RegionBranchTerminatorOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::RegionBranchOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::LoopLikeOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::DestinationStyleOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::ParallelCombiningOpInterface)
Load new dialect in Context cf
ImplicitTypeIDRegistry::lookupOrInsert(mlir::BranchOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::WeightedBranchOpInterface)
Load new dialect in Context ub
ImplicitTypeIDRegistry::lookupOrInsert(mlir::ub::PoisonAttrInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::CallOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::SymbolUserOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::CallableOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::FunctionOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::triton::DescriptorOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::triton::DescriptorStoreLikeOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::triton::DotOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::triton::TransposeOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::HasParent<mlir::ModuleOp>::Impl<mlir::TypeID::get<mlir::OpTrait::HasParent<mlir::ModuleOp>::Impl>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::BytecodeOpInterface::Trait<mlir::TypeID::get<mlir::BytecodeOpInterface::Trait>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::AutomaticAllocationScope<mlir::TypeID::get<mlir::OpTrait::AutomaticAllocationScope>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::CallableOpInterface::Trait<mlir::TypeID::get<mlir::CallableOpInterface::Trait>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::SymbolOpInterface::Trait<mlir::TypeID::get<mlir::SymbolOpInterface::Trait>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::FunctionOpInterface::Trait<mlir::TypeID::get<mlir::FunctionOpInterface::Trait>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpAsmOpInterface::Trait<mlir::TypeID::get<mlir::OpAsmOpInterface::Trait>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::TensorSizeTrait<mlir::TypeID::get<mlir::OpTrait::TensorSizeTrait>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::VerifyTensorLayoutsTrait<mlir::TypeID::get<mlir::OpTrait::VerifyTensorLayoutsTrait>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::ZeroRegions<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::OneResult<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::OneTypedResult<mlir::Type>::Impl<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::ConstantLike<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::ConditionallySpeculatable::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::AlwaysSpeculatableImplTrait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::MemoryEffectOpInterface::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::InferIntRangeInterface::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::InferTypeOpInterface::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::arith::detail::ConstantOpGenericAdaptorBase::Properties)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::OneTypedResult<mlir::IntegerType>::Impl<mlir::TypeID::get<mlir::OpTrait::OneTypedResult<mlir::IntegerType>::Impl>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::ConditionallySpeculatable::Trait<mlir::TypeID::get<mlir::ConditionallySpeculatable::Trait>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::MemoryEffectOpInterface::Trait<mlir::TypeID::get<mlir::MemoryEffectOpInterface::Trait>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::InferTypeOpInterface::Trait<mlir::TypeID::get<mlir::InferTypeOpInterface::Trait>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::triton::detail::GetProgramIdOpGenericAdaptorBase::Properties)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::NOperands<2>::Impl<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::IsCommutative<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::arith::ArithIntegerOverflowFlagsInterface::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::SameOperandsAndResultType<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::VectorUnrollOpInterface::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::Elementwise<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::Scalarizable<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::Vectorizable<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::Tensorizable<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::OneTypedResult<mlir::RankedTensorType>::Impl<mlir::TypeID::get<mlir::OpTrait::OneTypedResult<mlir::RankedTensorType>::Impl>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::OneOperand<mlir::TypeID::get<mlir::OpTrait::OneOperand>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::SameOperandsAndResultElementType<mlir::TypeID::get<mlir::OpTrait::SameOperandsAndResultElementType>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::SameOperandsAndResultEncoding<mlir::TypeID::get<mlir::OpTrait::SameOperandsAndResultEncoding>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::SameTypeOperands<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::arith::detail::CmpIOpGenericAdaptorBase::Properties)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::ValueSemantics<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::ShapedType::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::VariadicResults<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::AtLeastNOperands<3>::Impl<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::SingleBlockImplicitTerminator<mlir::scf::YieldOp>::Impl<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::LoopLikeOpInterface::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::RegionBranchOpInterface::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::HasRecursiveMemoryEffects<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::OneTypedResult<mlir::Type>::Impl<mlir::TypeID::get<mlir::OpTrait::OneTypedResult<mlir::Type>::Impl>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::NOperands<2>::Impl<mlir::TypeID::get<mlir::OpTrait::NOperands<2>::Impl>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::SameOperandsAndResultShape<mlir::TypeID::get<mlir::OpTrait::SameOperandsAndResultShape>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::AtLeastNOperands<1>::Impl<mlir::TypeID::get<mlir::OpTrait::AtLeastNOperands<1>::Impl>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::AttrSizedOperandSegments<mlir::TypeID::get<mlir::OpTrait::AttrSizedOperandSegments>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::SameLoadStoreOperandsAndResultShape<mlir::TypeID::get<mlir::OpTrait::SameLoadStoreOperandsAndResultShape>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::SameLoadStoreOperandsAndResultEncoding<mlir::TypeID::get<mlir::OpTrait::SameLoadStoreOperandsAndResultEncoding>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::triton::detail::LoadOpGenericAdaptorBase::Properties)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::IsIdempotent<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::AtLeastNOperands<2>::Impl<mlir::TypeID::get<mlir::OpTrait::AtLeastNOperands<2>::Impl>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::SameLoadStoreOperandsShape<mlir::TypeID::get<mlir::OpTrait::SameLoadStoreOperandsShape>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::SameLoadStoreOperandsEncoding<mlir::TypeID::get<mlir::OpTrait::SameLoadStoreOperandsEncoding>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::IsTerminator<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::VariadicOperands<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::HasParent<mlir::scf::ExecuteRegionOp, mlir::scf::ForOp, mlir::scf::IfOp, mlir::scf::IndexSwitchOp, mlir::scf::WhileOp>::Impl<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::RegionBranchTerminatorOpInterface::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::ReturnLike<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::HasParent<mlir::triton::FuncOp>::Impl<mlir::TypeID::get<mlir::OpTrait::HasParent<mlir::triton::FuncOp>::Impl>()::Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::RegionBranchTerminatorOpInterface::Trait<mlir::TypeID::get<mlir::RegionBranchTerminatorOpInterface::Trait>()::Empty>)
Load new dialect in Context affine
ImplicitTypeIDRegistry::lookupOrInsert(mlir::affine::AffineDmaStartOp)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::affine::AffineMapAccessInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::affine::AffineDmaWaitOp)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::affine::AffineReadOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::affine::AffineWriteOpInterface)
Load new dialect in Context bufferization
Load new dialect in Context memref
ImplicitTypeIDRegistry::lookupOrInsert(mlir::ViewLikeOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::CopyOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::PromotableMemOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::DestructurableAccessorOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::PromotableAllocationOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::DestructurableAllocationOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::ShapedDimOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::ReifyRankedShapedTypeOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OffsetSizeAndStrideOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::bufferization::AllocationOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::RuntimeVerifiableOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::DestructurableTypeInterface)
Load new dialect in Context tensor
Load new dialect in Context complex
ImplicitTypeIDRegistry::lookupOrInsert(mlir::transform::FindPayloadReplacementOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::SubsetOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::SubsetInsertionOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::SubsetExtractionOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::TilingInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::bufferization::TensorLikeType)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::bufferization::BufferLikeType)
Load new dialect in Context func
Load new dialect in Context linalg
ImplicitTypeIDRegistry::lookupOrInsert(mlir::linalg::AggregatedOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::linalg::IndexingMapOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::linalg::LinalgOp)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::linalg::ContractionOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::linalg::ConvolutionOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::linalg::FillOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::linalg::RelayoutOpInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::mesh::ShardingInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::PartialReductionOpInterface)
Load new dialect in Context ptr
ImplicitTypeIDRegistry::lookupOrInsert(mlir::ptr::MemorySpaceAttrInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::MemRefElementTypeInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::DataLayoutTypeInterface)
Load new dialect in Context tptr
Load new dialect in Context tts
Load new dialect in Context ttx
ImplicitTypeIDRegistry::lookupOrInsert(mlir::ttx::TritonTilingExtInterface)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::detail::OpToOpPassAdaptor)

//===-------------------------------------------===//
Legalizing operation : 'builtin.module'(0x57590869a350) {
  * Fold {
ImplicitTypeIDRegistry::lookupOrInsert(mlir::DialectFoldInterface)
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.func'(0x57590869a2c0) {
  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590869be90) {
  %0 = "arith.constant"() <{value = 1024 : i32}> : () -> i32 loc(unknown)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590869c880) {
  %1 = "arith.constant"() <{value = 0 : i32}> : () -> i32 loc(unknown)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590869dba0) {
  %2 = "arith.constant"() <{value = dense<16> : tensor<1024x1xi32>}> : () -> tensor<1024x1xi32> loc(unknown)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590869e5a0) {
  %3 = "arith.constant"() <{value = dense<16> : tensor<16xi32>}> : () -> tensor<16xi32> loc(unknown)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590869f3f0) {
  %4 = "arith.constant"() <{value = dense<0> : tensor<1024xi32>}> : () -> tensor<1024xi32> loc(unknown)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590869fe20) {
  %5 = "arith.constant"() <{value = dense<1971940> : tensor<1024xi32>}> : () -> tensor<1024xi32> loc(unknown)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5759086a07f0) {
  %6 = "arith.constant"() <{value = 49299 : i32}> : () -> i32 loc(unknown)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.get_program_id'(0x57590868f620) {
  %7 = "tt.get_program_id"() <{axis = 0 : i32}> : () -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:26))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x57590867baa0) {
  %8 = "arith.muli"(%7, %6) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.make_range'(0x57590869b6d0) {
  %9 = "tt.make_range"() <{end = 1024 : i32, start = 0 : i32}> : () -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:27))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.splat'(0x57590867c370) {
  %10 = "tt.splat"(%8) : (i32) -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:42))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x57590867c4d0) {
  %11 = "arith.addi"(%9, %10) <{overflowFlags = #arith.overflow<none>}> : (tensor<1024xi32>, tensor<1024xi32>) -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:42))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.splat'(0x5759086a3590) {
  %12 = "tt.splat"(%arg1) : (!tt.ptr<i32>) -> tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.make_range'(0x5759086a3ae0) {
  %13 = "tt.make_range"() <{end = 16 : i32, start = 0 : i32}> : () -> tensor<16xi32> loc("other_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":38:37))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x5759086a4050) {
  %14 = "arith.cmpi"(%13, %3) <{predicate = 2 : i64}> : (tensor<16xi32>, tensor<16xi32>) -> tensor<16xi1> loc("other_mask"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":39:37))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.splat'(0x5759086a4140) {
  %15 = "tt.splat"(%arg0) : (!tt.ptr<f32>) -> tensor<1024x1x!tt.ptr<f32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:39))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.expand_dims'(0x5759086a4fb0) {
  %16 = "tt.expand_dims"(%13) <{axis = 0 : i32}> : (tensor<16xi32>) -> tensor<1x16xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:78))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.broadcast'(0x5759086a50a0) {
  %17 = "tt.broadcast"(%16) : (tensor<1x16xi32>) -> tensor<1024x16xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.expand_dims'(0x5759086a5190) {
  %18 = "tt.expand_dims"(%14) <{axis = 0 : i32}> : (tensor<16xi1>) -> tensor<1x16xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:115))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.broadcast'(0x5759086a5280) {
  %19 = "tt.broadcast"(%18) : (tensor<1x16xi1>) -> tensor<1024x16xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:104))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.splat'(0x5759086a5370) {
  %20 = "tt.splat"(%arg2) : (!tt.ptr<f32>) -> tensor<1024x1x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.for'(0x5759086a7d00) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.splat'(0x57590867c250) {
  %21 = "tt.splat"(%arg4) : (i32) -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x5759086a5a80) {
  %22 = "arith.addi"(%11, %21) <{overflowFlags = #arith.overflow<none>}> : (tensor<1024xi32>, tensor<1024xi32>) -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x5759086a6030) {
  %23 = "arith.cmpi"(%22, %5) <{predicate = 2 : i64}> : (tensor<1024xi32>, tensor<1024xi32>) -> tensor<1024xi1> loc("g_mask"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":35:25))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.addptr'(0x5759086a65a0) {
  %24 = "tt.addptr"(%12, %22) : (tensor<1024x!tt.ptr<i32>>, tensor<1024xi32>) -> tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.load'(0x57590867d920) {
  %25 = "tt.load"(%24, %23, %4) <{boundaryCheck = array<i32>, cache = 1 : i32, evict = 1 : i32, isVolatile = false, operandSegmentSizes = array<i32: 1, 1, 1>}> : (tensor<1024x!tt.ptr<i32>>, tensor<1024xi1>, tensor<1024xi32>) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.expand_dims'(0x5759086a7010) {
  %26 = "tt.expand_dims"(%25) <{axis = 1 : i32}> : (tensor<1024xi32>) -> tensor<1024x1xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:47))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x5759086a7100) {
  %27 = "arith.muli"(%26, %2) <{overflowFlags = #arith.overflow<none>}> : (tensor<1024x1xi32>, tensor<1024x1xi32>) -> tensor<1024x1xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:57))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.addptr'(0x5759086a7210) {
  %28 = "tt.addptr"(%15, %27) : (tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32>) -> tensor<1024x1x!tt.ptr<f32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:39))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.broadcast'(0x5759086a7320) {
  %29 = "tt.broadcast"(%28) : (tensor<1024x1x!tt.ptr<f32>>) -> tensor<1024x16x!tt.ptr<f32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.addptr'(0x5759086a7410) {
  %30 = "tt.addptr"(%29, %17) : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xi32>) -> tensor<1024x16x!tt.ptr<f32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.expand_dims'(0x5759086a7520) {
  %31 = "tt.expand_dims"(%23) <{axis = 1 : i32}> : (tensor<1024xi1>) -> tensor<1024x1xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:94))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.broadcast'(0x5759086a7610) {
  %32 = "tt.broadcast"(%31) : (tensor<1024x1xi1>) -> tensor<1024x16xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:104))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.andi'(0x57590867c100) {
  %33 = "arith.andi"(%32, %19) : (tensor<1024x16xi1>, tensor<1024x16xi1>) -> tensor<1024x16xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:104))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.load'(0x575908673eb0) {
  %34 = "tt.load"(%30, %33) <{boundaryCheck = array<i32>, cache = 1 : i32, evict = 1 : i32, isVolatile = false, operandSegmentSizes = array<i32: 1, 1, 0>}> : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xi1>) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.expand_dims'(0x5759086a7f50) {
  %35 = "tt.expand_dims"(%22) <{axis = 1 : i32}> : (tensor<1024xi32>) -> tensor<1024x1xi32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:37)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x5759086a90a0) {
  %36 = "arith.muli"(%35, %2) <{overflowFlags = #arith.overflow<none>}> : (tensor<1024x1xi32>, tensor<1024x1xi32>) -> tensor<1024x1xi32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.addptr'(0x5759086a91b0) {
  %37 = "tt.addptr"(%20, %36) : (tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32>) -> tensor<1024x1x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.broadcast'(0x5759086a92c0) {
  %38 = "tt.broadcast"(%37) : (tensor<1024x1x!tt.ptr<f32>>) -> tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.addptr'(0x5759086a93b0) {
  %39 = "tt.addptr"(%38, %17) : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xi32>) -> tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.store'(0x57590869f450) {
  "tt.store"(%39, %34, %33) <{boundaryCheck = array<i32>, cache = 1 : i32, evict = 1 : i32}> : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xf32>, tensor<1024x16xi1>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x5759086839f0) {
  "scf.yield"() : () -> () loc("input.mlir":29:5)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.return'(0x575908684a80) {
  "tt.return"() : () -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:4)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.func'(0x57590869a2c0) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869be90) {
  %0 = "arith.constant"() <{value = 1024 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869c880) {
  %1 = "arith.constant"() <{value = 0 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869dba0) {
  %2 = "arith.constant"() <{value = dense<16> : tensor<1024x1xi32>}> : () -> tensor<1024x1xi32> loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869e5a0) {
  %3 = "arith.constant"() <{value = dense<16> : tensor<16xi32>}> : () -> tensor<16xi32> loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869f3f0) {
  %4 = "arith.constant"() <{value = dense<0> : tensor<1024xi32>}> : () -> tensor<1024xi32> loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869fe20) {
  %5 = "arith.constant"() <{value = dense<1971940> : tensor<1024xi32>}> : () -> tensor<1024xi32> loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759086a07f0) {
  %6 = "arith.constant"() <{value = 49299 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.get_program_id'(0x57590868f620) {
  %7 = "tt.get_program_id"() <{axis = 0 : i32}> : () -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:26))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x57590867baa0) {
  %8 = "arith.muli"(%7, %6) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))


  * Pattern (anonymous namespace)::MulIMulIConstant : 'arith.muli -> (arith.constant, arith.muli)' {
Trying to match "(anonymous namespace)::MulIMulIConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::MulIMulIConstant" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.make_range'(0x57590869b6d0) {
  %9 = "tt.make_range"() <{end = 1024 : i32, start = 0 : i32}> : () -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:27))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.splat'(0x57590867c370) {
  %10 = "tt.splat"(%8) : (i32) -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:42))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x57590867c4d0) {
  %11 = "arith.addi"(%9, %10) <{overflowFlags = #arith.overflow<none>}> : (tensor<1024xi32>, tensor<1024xi32>) -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:42))


  * Pattern (anonymous namespace)::AddIAddConstant : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddIAddConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::AddIOp type
"(anonymous namespace)::AddIAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantRHS : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddISubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantLHS : 'arith.addi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::AddISubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneRhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneRhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneRhs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneLhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneLhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneLhs" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.splat'(0x5759086a3590) {
  %12 = "tt.splat"(%arg1) : (!tt.ptr<i32>) -> tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.make_range'(0x5759086a3ae0) {
  %13 = "tt.make_range"() <{end = 16 : i32, start = 0 : i32}> : () -> tensor<16xi32> loc("other_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":38:37))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.cmpi'(0x5759086a4050) {
  %14 = "arith.cmpi"(%13, %3) <{predicate = 2 : i64}> : (tensor<16xi32>, tensor<16xi32>) -> tensor<16xi1> loc("other_mask"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":39:37))


  * Pattern (anonymous namespace)::CmpIExtSI : 'arith.cmpi -> (arith.cmpi)' {
Trying to match "(anonymous namespace)::CmpIExtSI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtSIOp type
"(anonymous namespace)::CmpIExtSI" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::CmpIExtUI : 'arith.cmpi -> (arith.cmpi)' {
Trying to match "(anonymous namespace)::CmpIExtUI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtUIOp type
"(anonymous namespace)::CmpIExtUI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.splat'(0x5759086a4140) {
  %15 = "tt.splat"(%arg0) : (!tt.ptr<f32>) -> tensor<1024x1x!tt.ptr<f32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:39))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.expand_dims'(0x5759086a4fb0) {
  %16 = "tt.expand_dims"(%13) <{axis = 0 : i32}> : (tensor<16xi32>) -> tensor<1x16xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:78))


  * Pattern  : 'tt.expand_dims -> ()' {
Trying to match ""
"" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.broadcast'(0x5759086a50a0) {
  %17 = "tt.broadcast"(%16) : (tensor<1x16xi32>) -> tensor<1024x16xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))


  * Pattern BroadcastSplatPattern : 'tt.broadcast -> (tt.splat)' {
Trying to match "BroadcastSplatPattern"
    ** Match Failure : castedOp1 is not ::mlir::triton::SplatOp type
"BroadcastSplatPattern" result 0
  } -> failure : pattern failed to match

  * Pattern BroadcastBroadcastPattern : 'tt.broadcast -> (tt.broadcast)' {
Trying to match "BroadcastBroadcastPattern"
    ** Match Failure : castedOp1 is not ::mlir::triton::BroadcastOp type
"BroadcastBroadcastPattern" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.expand_dims'(0x5759086a5190) {
  %18 = "tt.expand_dims"(%14) <{axis = 0 : i32}> : (tensor<16xi1>) -> tensor<1x16xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:115))


  * Pattern  : 'tt.expand_dims -> ()' {
Trying to match ""
"" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.broadcast'(0x5759086a5280) {
  %19 = "tt.broadcast"(%18) : (tensor<1x16xi1>) -> tensor<1024x16xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:104))


  * Pattern BroadcastSplatPattern : 'tt.broadcast -> (tt.splat)' {
Trying to match "BroadcastSplatPattern"
    ** Match Failure : castedOp1 is not ::mlir::triton::SplatOp type
"BroadcastSplatPattern" result 0
  } -> failure : pattern failed to match

  * Pattern BroadcastBroadcastPattern : 'tt.broadcast -> (tt.broadcast)' {
Trying to match "BroadcastBroadcastPattern"
    ** Match Failure : castedOp1 is not ::mlir::triton::BroadcastOp type
"BroadcastBroadcastPattern" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.splat'(0x5759086a5370) {
  %20 = "tt.splat"(%arg2) : (!tt.ptr<f32>) -> tensor<1024x1x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759086a7d00) {
ImplicitTypeIDRegistry::lookupOrInsert(mlir::triton::GlobalMemory)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::MemoryEffects::Read)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::MemoryEffects::Allocate)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::MemoryEffects::Write)

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.splat'(0x57590867c250) {
  %21 = "tt.splat"(%arg4) : (i32) -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x5759086a5a80) {
  %22 = "arith.addi"(%11, %21) <{overflowFlags = #arith.overflow<none>}> : (tensor<1024xi32>, tensor<1024xi32>) -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))


  * Pattern (anonymous namespace)::AddIAddConstant : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddIAddConstant"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::AddIAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantRHS : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddISubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantLHS : 'arith.addi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::AddISubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneRhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneRhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneRhs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneLhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneLhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneLhs" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.cmpi'(0x5759086a6030) {
  %23 = "arith.cmpi"(%22, %5) <{predicate = 2 : i64}> : (tensor<1024xi32>, tensor<1024xi32>) -> tensor<1024xi1> loc("g_mask"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":35:25))


  * Pattern (anonymous namespace)::CmpIExtSI : 'arith.cmpi -> (arith.cmpi)' {
Trying to match "(anonymous namespace)::CmpIExtSI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtSIOp type
"(anonymous namespace)::CmpIExtSI" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::CmpIExtUI : 'arith.cmpi -> (arith.cmpi)' {
Trying to match "(anonymous namespace)::CmpIExtUI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtUIOp type
"(anonymous namespace)::CmpIExtUI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.addptr'(0x5759086a65a0) {
  %24 = "tt.addptr"(%12, %22) : (tensor<1024x!tt.ptr<i32>>, tensor<1024xi32>) -> tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.load'(0x57590867d920) {
  %25 = "tt.load"(%24, %23, %4) <{boundaryCheck = array<i32>, cache = 1 : i32, evict = 1 : i32, isVolatile = false, operandSegmentSizes = array<i32: 1, 1, 1>}> : (tensor<1024x!tt.ptr<i32>>, tensor<1024xi1>, tensor<1024xi32>) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern mlir::triton::CanonicalizeMaskedLoadPattern : 'tt.load -> ()' {
Trying to match "mlir::triton::CanonicalizeMaskedLoadPattern"
"mlir::triton::CanonicalizeMaskedLoadPattern" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.expand_dims'(0x5759086a7010) {
  %26 = "tt.expand_dims"(%25) <{axis = 1 : i32}> : (tensor<1024xi32>) -> tensor<1024x1xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:47))


  * Pattern  : 'tt.expand_dims -> ()' {
Trying to match ""
"" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x5759086a7100) {
  %27 = "arith.muli"(%26, %2) <{overflowFlags = #arith.overflow<none>}> : (tensor<1024x1xi32>, tensor<1024x1xi32>) -> tensor<1024x1xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:57))


  * Pattern (anonymous namespace)::MulIMulIConstant : 'arith.muli -> (arith.constant, arith.muli)' {
Trying to match "(anonymous namespace)::MulIMulIConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::MulIMulIConstant" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.addptr'(0x5759086a7210) {
  %28 = "tt.addptr"(%15, %27) : (tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32>) -> tensor<1024x1x!tt.ptr<f32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:39))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.broadcast'(0x5759086a7320) {
  %29 = "tt.broadcast"(%28) : (tensor<1024x1x!tt.ptr<f32>>) -> tensor<1024x16x!tt.ptr<f32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))


  * Pattern BroadcastSplatPattern : 'tt.broadcast -> (tt.splat)' {
Trying to match "BroadcastSplatPattern"
    ** Match Failure : castedOp1 is not ::mlir::triton::SplatOp type
"BroadcastSplatPattern" result 0
  } -> failure : pattern failed to match

  * Pattern BroadcastBroadcastPattern : 'tt.broadcast -> (tt.broadcast)' {
Trying to match "BroadcastBroadcastPattern"
    ** Match Failure : castedOp1 is not ::mlir::triton::BroadcastOp type
"BroadcastBroadcastPattern" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.addptr'(0x5759086a7410) {
  %30 = "tt.addptr"(%29, %17) : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xi32>) -> tensor<1024x16x!tt.ptr<f32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.expand_dims'(0x5759086a7520) {
  %31 = "tt.expand_dims"(%23) <{axis = 1 : i32}> : (tensor<1024xi1>) -> tensor<1024x1xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:94))


  * Pattern  : 'tt.expand_dims -> ()' {
Trying to match ""
"" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.broadcast'(0x5759086a7610) {
  %32 = "tt.broadcast"(%31) : (tensor<1024x1xi1>) -> tensor<1024x16xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:104))


  * Pattern BroadcastSplatPattern : 'tt.broadcast -> (tt.splat)' {
Trying to match "BroadcastSplatPattern"
    ** Match Failure : castedOp1 is not ::mlir::triton::SplatOp type
"BroadcastSplatPattern" result 0
  } -> failure : pattern failed to match

  * Pattern BroadcastBroadcastPattern : 'tt.broadcast -> (tt.broadcast)' {
Trying to match "BroadcastBroadcastPattern"
    ** Match Failure : castedOp1 is not ::mlir::triton::BroadcastOp type
"BroadcastBroadcastPattern" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.andi'(0x57590867c100) {
  %33 = "arith.andi"(%32, %19) : (tensor<1024x16xi1>, tensor<1024x16xi1>) -> tensor<1024x16xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:104))


  * Pattern (anonymous namespace)::AndOfExtUI : 'arith.andi -> (arith.andi, arith.extui)' {
Trying to match "(anonymous namespace)::AndOfExtUI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtUIOp type
"(anonymous namespace)::AndOfExtUI" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AndOfExtSI : 'arith.andi -> (arith.andi, arith.extsi)' {
Trying to match "(anonymous namespace)::AndOfExtSI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtSIOp type
"(anonymous namespace)::AndOfExtSI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.load'(0x575908673eb0) {
  %34 = "tt.load"(%30, %33) <{boundaryCheck = array<i32>, cache = 1 : i32, evict = 1 : i32, isVolatile = false, operandSegmentSizes = array<i32: 1, 1, 0>}> : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xi1>) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))


  * Pattern mlir::triton::CanonicalizeMaskedLoadPattern : 'tt.load -> ()' {
Trying to match "mlir::triton::CanonicalizeMaskedLoadPattern"
"mlir::triton::CanonicalizeMaskedLoadPattern" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.expand_dims'(0x5759086a7f50) {
  %35 = "tt.expand_dims"(%22) <{axis = 1 : i32}> : (tensor<1024xi32>) -> tensor<1024x1xi32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:37)


  * Pattern  : 'tt.expand_dims -> ()' {
Trying to match ""
"" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x5759086a90a0) {
  %36 = "arith.muli"(%35, %2) <{overflowFlags = #arith.overflow<none>}> : (tensor<1024x1xi32>, tensor<1024x1xi32>) -> tensor<1024x1xi32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)


  * Pattern (anonymous namespace)::MulIMulIConstant : 'arith.muli -> (arith.constant, arith.muli)' {
Trying to match "(anonymous namespace)::MulIMulIConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::MulIMulIConstant" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.addptr'(0x5759086a91b0) {
  %37 = "tt.addptr"(%20, %36) : (tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32>) -> tensor<1024x1x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.broadcast'(0x5759086a92c0) {
  %38 = "tt.broadcast"(%37) : (tensor<1024x1x!tt.ptr<f32>>) -> tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)


  * Pattern BroadcastSplatPattern : 'tt.broadcast -> (tt.splat)' {
Trying to match "BroadcastSplatPattern"
    ** Match Failure : castedOp1 is not ::mlir::triton::SplatOp type
"BroadcastSplatPattern" result 0
  } -> failure : pattern failed to match

  * Pattern BroadcastBroadcastPattern : 'tt.broadcast -> (tt.broadcast)' {
Trying to match "BroadcastBroadcastPattern"
    ** Match Failure : castedOp1 is not ::mlir::triton::BroadcastOp type
"BroadcastBroadcastPattern" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.addptr'(0x5759086a93b0) {
  %39 = "tt.addptr"(%38, %17) : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xi32>) -> tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.store'(0x57590869f450) {
  "tt.store"(%39, %34, %33) <{boundaryCheck = array<i32>, cache = 1 : i32, evict = 1 : i32}> : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xf32>, tensor<1024x16xi1>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)


  * Pattern mlir::triton::CanonicalizeMaskedStorePattern : 'tt.store -> ()' {
Trying to match "mlir::triton::CanonicalizeMaskedStorePattern"
"mlir::triton::CanonicalizeMaskedStorePattern" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.yield'(0x5759086839f0) {
  "scf.yield"() : () -> () loc("input.mlir":29:5)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.return'(0x575908684a80) {
  "tt.return"() : () -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:4)

} -> failure : all patterns failed to match
//===-------------------------------------------===//
ImplicitTypeIDRegistry::lookupOrInsert(mlir::detail::PreservedAnalyses::AllAnalysesType)

//===-------------------------------------------===//
Legalizing operation : 'builtin.module'(0x57590869a350) {
  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.func'(0x57590869a2c0) {
  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590869be90) {
  %0 = "arith.constant"() <{value = 1024 : i32}> : () -> i32 loc(unknown)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590869c880) {
  %1 = "arith.constant"() <{value = 0 : i32}> : () -> i32 loc(unknown)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590869dba0) {
  %2 = "arith.constant"() <{value = dense<16> : tensor<1024x1xi32>}> : () -> tensor<1024x1xi32> loc(unknown)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590869e5a0) {
  %3 = "arith.constant"() <{value = dense<16> : tensor<16xi32>}> : () -> tensor<16xi32> loc(unknown)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590869f3f0) {
  %4 = "arith.constant"() <{value = dense<0> : tensor<1024xi32>}> : () -> tensor<1024xi32> loc(unknown)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590869fe20) {
  %5 = "arith.constant"() <{value = dense<1971940> : tensor<1024xi32>}> : () -> tensor<1024xi32> loc(unknown)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5759086a07f0) {
  %6 = "arith.constant"() <{value = 49299 : i32}> : () -> i32 loc(unknown)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.get_program_id'(0x57590868f620) {
  %7 = "tt.get_program_id"() <{axis = 0 : i32}> : () -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:26))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x57590867baa0) {
  %8 = "arith.muli"(%7, %6) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.make_range'(0x57590869b6d0) {
  %9 = "tt.make_range"() <{end = 1024 : i32, start = 0 : i32}> : () -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:27))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.splat'(0x57590867c370) {
  %10 = "tt.splat"(%8) : (i32) -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:42))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x57590867c4d0) {
  %11 = "arith.addi"(%9, %10) <{overflowFlags = #arith.overflow<none>}> : (tensor<1024xi32>, tensor<1024xi32>) -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:42))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.splat'(0x5759086a3590) {
  %12 = "tt.splat"(%arg1) : (!tt.ptr<i32>) -> tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.make_range'(0x5759086a3ae0) {
  %13 = "tt.make_range"() <{end = 16 : i32, start = 0 : i32}> : () -> tensor<16xi32> loc("other_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":38:37))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x5759086a4050) {
  %14 = "arith.cmpi"(%13, %3) <{predicate = 2 : i64}> : (tensor<16xi32>, tensor<16xi32>) -> tensor<16xi1> loc("other_mask"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":39:37))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.splat'(0x5759086a4140) {
  %15 = "tt.splat"(%arg0) : (!tt.ptr<f32>) -> tensor<1024x1x!tt.ptr<f32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:39))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.expand_dims'(0x5759086a4fb0) {
  %16 = "tt.expand_dims"(%13) <{axis = 0 : i32}> : (tensor<16xi32>) -> tensor<1x16xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:78))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.broadcast'(0x5759086a50a0) {
  %17 = "tt.broadcast"(%16) : (tensor<1x16xi32>) -> tensor<1024x16xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.expand_dims'(0x5759086a5190) {
  %18 = "tt.expand_dims"(%14) <{axis = 0 : i32}> : (tensor<16xi1>) -> tensor<1x16xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:115))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.broadcast'(0x5759086a5280) {
  %19 = "tt.broadcast"(%18) : (tensor<1x16xi1>) -> tensor<1024x16xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:104))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.splat'(0x5759086a5370) {
  %20 = "tt.splat"(%arg2) : (!tt.ptr<f32>) -> tensor<1024x1x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.for'(0x5759086a7d00) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.splat'(0x57590867c250) {
  %21 = "tt.splat"(%arg4) : (i32) -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x5759086a5a80) {
  %22 = "arith.addi"(%11, %21) <{overflowFlags = #arith.overflow<none>}> : (tensor<1024xi32>, tensor<1024xi32>) -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x5759086a6030) {
  %23 = "arith.cmpi"(%22, %5) <{predicate = 2 : i64}> : (tensor<1024xi32>, tensor<1024xi32>) -> tensor<1024xi1> loc("g_mask"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":35:25))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.addptr'(0x5759086a65a0) {
  %24 = "tt.addptr"(%12, %22) : (tensor<1024x!tt.ptr<i32>>, tensor<1024xi32>) -> tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.load'(0x57590867d920) {
  %25 = "tt.load"(%24, %23, %4) <{boundaryCheck = array<i32>, cache = 1 : i32, evict = 1 : i32, isVolatile = false, operandSegmentSizes = array<i32: 1, 1, 1>}> : (tensor<1024x!tt.ptr<i32>>, tensor<1024xi1>, tensor<1024xi32>) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.expand_dims'(0x5759086a7010) {
  %26 = "tt.expand_dims"(%25) <{axis = 1 : i32}> : (tensor<1024xi32>) -> tensor<1024x1xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:47))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x5759086a7100) {
  %27 = "arith.muli"(%26, %2) <{overflowFlags = #arith.overflow<none>}> : (tensor<1024x1xi32>, tensor<1024x1xi32>) -> tensor<1024x1xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:57))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.addptr'(0x5759086a7210) {
  %28 = "tt.addptr"(%15, %27) : (tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32>) -> tensor<1024x1x!tt.ptr<f32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:39))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.broadcast'(0x5759086a7320) {
  %29 = "tt.broadcast"(%28) : (tensor<1024x1x!tt.ptr<f32>>) -> tensor<1024x16x!tt.ptr<f32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.addptr'(0x5759086a7410) {
  %30 = "tt.addptr"(%29, %17) : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xi32>) -> tensor<1024x16x!tt.ptr<f32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.expand_dims'(0x5759086a7520) {
  %31 = "tt.expand_dims"(%23) <{axis = 1 : i32}> : (tensor<1024xi1>) -> tensor<1024x1xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:94))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.broadcast'(0x5759086a7610) {
  %32 = "tt.broadcast"(%31) : (tensor<1024x1xi1>) -> tensor<1024x16xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:104))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.andi'(0x57590867c100) {
  %33 = "arith.andi"(%32, %19) : (tensor<1024x16xi1>, tensor<1024x16xi1>) -> tensor<1024x16xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:104))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.load'(0x575908673eb0) {
  %34 = "tt.load"(%30, %33) <{boundaryCheck = array<i32>, cache = 1 : i32, evict = 1 : i32, isVolatile = false, operandSegmentSizes = array<i32: 1, 1, 0>}> : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xi1>) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.expand_dims'(0x5759086a7f50) {
  %35 = "tt.expand_dims"(%22) <{axis = 1 : i32}> : (tensor<1024xi32>) -> tensor<1024x1xi32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:37)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x5759086a90a0) {
  %36 = "arith.muli"(%35, %2) <{overflowFlags = #arith.overflow<none>}> : (tensor<1024x1xi32>, tensor<1024x1xi32>) -> tensor<1024x1xi32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.addptr'(0x5759086a91b0) {
  %37 = "tt.addptr"(%20, %36) : (tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32>) -> tensor<1024x1x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.broadcast'(0x5759086a92c0) {
  %38 = "tt.broadcast"(%37) : (tensor<1024x1x!tt.ptr<f32>>) -> tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.addptr'(0x5759086a93b0) {
  %39 = "tt.addptr"(%38, %17) : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xi32>) -> tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.store'(0x57590869f450) {
  "tt.store"(%39, %34, %33) <{boundaryCheck = array<i32>, cache = 1 : i32, evict = 1 : i32}> : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xf32>, tensor<1024x16xi1>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x5759086839f0) {
  "scf.yield"() : () -> () loc("input.mlir":29:5)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.return'(0x575908684a80) {
  "tt.return"() : () -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:4)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//
rewriting rootOp
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpAsmTypeInterface)
module {
  tt.func public @origin_index_select(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 {tt.divisibility = 16 : i32} loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0))) attributes {noinline = false} {
    %c1024_i32 = arith.constant 1024 : i32 loc(unknown)
    %c0_i32 = arith.constant 0 : i32 loc(unknown)
    %cst = arith.constant dense<16> : tensor<1024x1xi32> loc(unknown)
    %cst_0 = arith.constant dense<16> : tensor<16xi32> loc(unknown)
    %cst_1 = arith.constant dense<0> : tensor<1024xi32> loc(unknown)
    %cst_2 = arith.constant dense<1971940> : tensor<1024xi32> loc(unknown)
    %c49299_i32 = arith.constant 49299 : i32 loc(unknown)
    %0 = tt.get_program_id x : i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:26))
    %1 = arith.muli %0, %c49299_i32 : i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:27))
    %3 = tt.splat %1 : i32 -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:42))
    %4 = arith.addi %2, %3 : tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:42))
    %5 = tt.splat %arg1 : !tt.ptr<i32> -> tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %6 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc("other_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":38:37))
    %7 = arith.cmpi slt, %6, %cst_0 : tensor<16xi32> loc("other_mask"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":39:37))
    %8 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x1x!tt.ptr<f32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:39))
    %9 = tt.expand_dims %6 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:78))
    %10 = tt.broadcast %9 : tensor<1x16xi32> -> tensor<1024x16xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
    %11 = tt.expand_dims %7 {axis = 0 : i32} : tensor<16xi1> -> tensor<1x16xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:115))
    %12 = tt.broadcast %11 : tensor<1x16xi1> -> tensor<1024x16xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:104))
    %13 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x1x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
    scf.for %arg4 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {
      %14 = tt.splat %arg4 : i32 -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
      %15 = arith.addi %4, %14 : tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
      %16 = arith.cmpi slt, %15, %cst_2 : tensor<1024xi32> loc("g_mask"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":35:25))
      %17 = tt.addptr %5, %15 : tensor<1024x!tt.ptr<i32>>, tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
      %18 = tt.load %17, %16, %cst_1 : tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
      %19 = tt.expand_dims %18 {axis = 1 : i32} : tensor<1024xi32> -> tensor<1024x1xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:47))
      %20 = arith.muli %19, %cst : tensor<1024x1xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:57))
      %21 = tt.addptr %8, %20 : tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:39))
      %22 = tt.broadcast %21 : tensor<1024x1x!tt.ptr<f32>> -> tensor<1024x16x!tt.ptr<f32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %23 = tt.addptr %22, %10 : tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %24 = tt.expand_dims %16 {axis = 1 : i32} : tensor<1024xi1> -> tensor<1024x1xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:94))
      %25 = tt.broadcast %24 : tensor<1024x1xi1> -> tensor<1024x16xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:104))
      %26 = arith.andi %25, %12 : tensor<1024x16xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:104))
      %27 = tt.load %23, %26 : tensor<1024x16x!tt.ptr<f32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %28 = tt.expand_dims %15 {axis = 1 : i32} : tensor<1024xi32> -> tensor<1024x1xi32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:37)
      %29 = arith.muli %28, %cst : tensor<1024x1xi32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
      %30 = tt.addptr %13, %29 : tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
      %31 = tt.broadcast %30 : tensor<1024x1x!tt.ptr<f32>> -> tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
      %32 = tt.addptr %31, %10 : tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xi32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
      tt.store %32, %27, %26 : tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
    } loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
    tt.return loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:4)
  } loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
rewriting rootOp
scf.for %arg4 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {
  %14 = tt.splat %arg4 : i32 -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
  %15 = arith.addi %4, %14 : tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
  %16 = arith.cmpi slt, %15, %cst_2 : tensor<1024xi32> loc("g_mask"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":35:25))
  %17 = tt.addptr %5, %15 : tensor<1024x!tt.ptr<i32>>, tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
  %18 = tt.load %17, %16, %cst_1 : tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %19 = tt.expand_dims %18 {axis = 1 : i32} : tensor<1024xi32> -> tensor<1024x1xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:47))
  %20 = arith.muli %19, %cst : tensor<1024x1xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:57))
  %21 = tt.addptr %8, %20 : tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:39))
  %22 = tt.broadcast %21 : tensor<1024x1x!tt.ptr<f32>> -> tensor<1024x16x!tt.ptr<f32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
  %23 = tt.addptr %22, %10 : tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
  %24 = tt.expand_dims %16 {axis = 1 : i32} : tensor<1024xi1> -> tensor<1024x1xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:94))
  %25 = tt.broadcast %24 : tensor<1024x1xi1> -> tensor<1024x16xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:104))
  %26 = arith.andi %25, %12 : tensor<1024x16xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:104))
  %27 = tt.load %23, %26 : tensor<1024x16x!tt.ptr<f32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %28 = tt.expand_dims %15 {axis = 1 : i32} : tensor<1024xi32> -> tensor<1024x1xi32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:37)
  %29 = arith.muli %28, %cst : tensor<1024x1xi32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
  %30 = tt.addptr %13, %29 : tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
  %31 = tt.broadcast %30 : tensor<1024x1x!tt.ptr<f32>> -> tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
  %32 = tt.addptr %31, %10 : tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xi32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
  tt.store %32, %27, %26 : tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::arith::detail::AddIOpGenericAdaptorBase::Properties)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::tts::detail::MakeTensorPtrOpGenericAdaptorBase::Properties)
creating tts::make_tensor_ptr:
%20 = tts.make_tptr %arg1 to sizes: [1024], strides: [1], offsets: [%19], shape: [0], order: [] : <i32> to tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
ImplicitTypeIDRegistry::lookupOrInsert(mlir::arith::detail::SubIOpGenericAdaptorBase::Properties)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::tts::detail::LoadOpGenericAdaptorBase::Properties)
creating tts::load:
%30 = "tts.load"(%20, %29, %c0_i32_4) <{operandSegmentSizes = array<i32: 1, 1, 1>, static_mask_dims = array<i64: -9223372036854775808>}> : (tensor<1024x!tt.ptr<i32>>, index, i32) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
PtrAnalysis: encountered addptr operand produced by an unsupported operation
ImplicitTypeIDRegistry::lookupOrInsert(mlir::CastOpInterface::Trait<Empty>)
%30 = "tts.load"(%20, %29, %c0_i32_4) <{operandSegmentSizes = array<i32: 1, 1, 1>, static_mask_dims = array<i64: -9223372036854775808>}> : (tensor<1024x!tt.ptr<i32>>, index, i32) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
PtrAnalysis: encountered addptr operand produced by an unsupported operation
%30 = "tts.load"(%20, %29, %c0_i32_4) <{operandSegmentSizes = array<i32: 1, 1, 1>, static_mask_dims = array<i64: -9223372036854775808>}> : (tensor<1024x!tt.ptr<i32>>, index, i32) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
ImplicitTypeIDRegistry::lookupOrInsert(mlir::tts::detail::MakeGatherScatterTensorPtrOpGenericAdaptorBase::Properties)
creating tts::make_gather_scatter_tensor_ptr:
%33 = tts.make_gather_scatter_tptr %arg0 to sizes: [1024, 1] gather_scatter_dim: 0 gather_scatter_offset: %30, strides: [%c16_5, 0], offsets: [0, 0] : tensor<1024xi32> <f32> to !tt.ptr<tensor<1024x1xf32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:39))
PtrAnalysis: encountered addptr operand produced by an unsupported operation
%30 = "tts.load"(%20, %29, %c0_i32_4) <{operandSegmentSizes = array<i32: 1, 1, 1>, static_mask_dims = array<i64: -9223372036854775808>}> : (tensor<1024x!tt.ptr<i32>>, index, i32) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
creating tts::make_gather_scatter_tensor_ptr:
%36 = tts.make_gather_scatter_tptr %arg0 to sizes: [1024, 16] gather_scatter_dim: 0 gather_scatter_offset: %30, strides: [%c16_6, 1], offsets: [0, 0] : tensor<1024xi32> <f32> to !tt.ptr<tensor<1024x16xf32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
creating tts::load:
%50 = "tts.load"(%36, %49) <{operandSegmentSizes = array<i32: 1, 1, 0>, static_mask_dims = array<i64: -9223372036854775808, 16>}> : (!tt.ptr<tensor<1024x16xf32>>, index) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
ImplicitTypeIDRegistry::lookupOrInsert(mlir::arith::detail::MulIOpGenericAdaptorBase::Properties)
creating tts::make_tensor_ptr:
%57 = tts.make_tptr %arg2 to sizes: [1024, 1], strides: [%c16_12, 0], offsets: [%56, 0], shape: [0, 0], order: [] : <f32> to tensor<1024x1x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
creating tts::make_tensor_ptr:
%60 = tts.make_tptr %arg2 to sizes: [1024, 16], strides: [%c16_12, 1], offsets: [%56, 0], shape: [0, 0], order: [] : <f32> to tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::tts::detail::StoreOpGenericAdaptorBase::Properties)
creating tts::store:
"tts.store"(%60, %51, %70) <{static_mask_dims = array<i64: -9223372036854775808, 16>}> : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xf32>, index) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::DominanceInfo)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::SideEffects::DefaultResource)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::PostDominanceInfo)

//===-------------------------------------------===//
Processing operation : 'tt.func'(0x57590869a2c0) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869be90) {
  %3 = "arith.constant"() <{value = 1024 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869c880) {
  %4 = "arith.constant"() <{value = 0 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869dba0) {
  %5 = "arith.constant"() <{value = dense<16> : tensor<1024x1xi32>}> : () -> tensor<1024x1xi32> loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869e5a0) {
  %6 = "arith.constant"() <{value = dense<16> : tensor<16xi32>}> : () -> tensor<16xi32> loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869fe20) {
  %7 = "arith.constant"() <{value = dense<1971940> : tensor<1024xi32>}> : () -> tensor<1024xi32> loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759086a07f0) {
  %8 = "arith.constant"() <{value = 49299 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.get_program_id'(0x57590868f620) {
  %9 = "tt.get_program_id"() <{axis = 0 : i32}> : () -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:26))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x57590867baa0) {
  %10 = "arith.muli"(%9, %8) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))


  * Pattern (anonymous namespace)::MulIMulIConstant : 'arith.muli -> (arith.constant, arith.muli)' {
Trying to match "(anonymous namespace)::MulIMulIConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::MulIMulIConstant" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x575908673eb0) {
  %11 = "arith.index_cast"(%10) : (i32) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)


  * Pattern (anonymous namespace)::IndexCastOfIndexCast : 'arith.index_cast -> ()' {
Trying to match "(anonymous namespace)::IndexCastOfIndexCast"
    ** Match Failure : castedOp1 is not ::mlir::arith::IndexCastOp type
"(anonymous namespace)::IndexCastOfIndexCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::IndexCastOfExtSI : 'arith.index_cast -> (arith.index_cast)' {
Trying to match "(anonymous namespace)::IndexCastOfExtSI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtSIOp type
"(anonymous namespace)::IndexCastOfExtSI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.make_range'(0x57590869b6d0) {
  %12 = "tt.make_range"() <{end = 1024 : i32, start = 0 : i32}> : () -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:27))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.splat'(0x57590867c370) {
  %13 = "tt.splat"(%10) : (i32) -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:42))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x57590867c4d0) {
  %14 = "arith.addi"(%12, %13) <{overflowFlags = #arith.overflow<none>}> : (tensor<1024xi32>, tensor<1024xi32>) -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:42))


  * Pattern (anonymous namespace)::AddIAddConstant : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddIAddConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::AddIOp type
"(anonymous namespace)::AddIAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantRHS : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddISubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantLHS : 'arith.addi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::AddISubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneRhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneRhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneRhs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneLhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneLhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneLhs" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.splat'(0x5759086a3590) {
  %15 = "tt.splat"(%arg1) : (!tt.ptr<i32>) -> tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

  ** Erase   : 'tt.splat'(0x5759086a3590)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.make_range'(0x5759086a3ae0) {
  %15 = "tt.make_range"() <{end = 16 : i32, start = 0 : i32}> : () -> tensor<16xi32> loc("other_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":38:37))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.cmpi'(0x5759086a4050) {
  %16 = "arith.cmpi"(%15, %6) <{predicate = 2 : i64}> : (tensor<16xi32>, tensor<16xi32>) -> tensor<16xi1> loc("other_mask"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":39:37))


  * Pattern (anonymous namespace)::CmpIExtSI : 'arith.cmpi -> (arith.cmpi)' {
Trying to match "(anonymous namespace)::CmpIExtSI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtSIOp type
"(anonymous namespace)::CmpIExtSI" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::CmpIExtUI : 'arith.cmpi -> (arith.cmpi)' {
Trying to match "(anonymous namespace)::CmpIExtUI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtUIOp type
"(anonymous namespace)::CmpIExtUI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.splat'(0x5759086a4140) {
  %17 = "tt.splat"(%arg0) : (!tt.ptr<f32>) -> tensor<1024x1x!tt.ptr<f32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:39))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.expand_dims'(0x5759086a4fb0) {
  %18 = "tt.expand_dims"(%15) <{axis = 0 : i32}> : (tensor<16xi32>) -> tensor<1x16xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:78))


  * Pattern  : 'tt.expand_dims -> ()' {
Trying to match ""
"" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.broadcast'(0x5759086a50a0) {
  %19 = "tt.broadcast"(%18) : (tensor<1x16xi32>) -> tensor<1024x16xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

  ** Erase   : 'tt.broadcast'(0x5759086a50a0)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.func'(0x57590869a2c0) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.expand_dims'(0x5759086a4fb0) {
  %18 = "tt.expand_dims"(%15) <{axis = 0 : i32}> : (tensor<16xi32>) -> tensor<1x16xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:78))

  ** Erase   : 'tt.expand_dims'(0x5759086a4fb0)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.func'(0x57590869a2c0) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.make_range'(0x5759086a3ae0) {
  %15 = "tt.make_range"() <{end = 16 : i32, start = 0 : i32}> : () -> tensor<16xi32> loc("other_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":38:37))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.expand_dims'(0x5759086a5190) {
  %18 = "tt.expand_dims"(%16) <{axis = 0 : i32}> : (tensor<16xi1>) -> tensor<1x16xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:115))


  * Pattern  : 'tt.expand_dims -> ()' {
Trying to match ""
"" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.broadcast'(0x5759086a5280) {
  %19 = "tt.broadcast"(%18) : (tensor<1x16xi1>) -> tensor<1024x16xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:104))

  ** Erase   : 'tt.broadcast'(0x5759086a5280)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.func'(0x57590869a2c0) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.expand_dims'(0x5759086a5190) {
  %18 = "tt.expand_dims"(%16) <{axis = 0 : i32}> : (tensor<16xi1>) -> tensor<1x16xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:115))

  ** Erase   : 'tt.expand_dims'(0x5759086a5190)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.func'(0x57590869a2c0) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.cmpi'(0x5759086a4050) {
  %16 = "arith.cmpi"(%15, %6) <{predicate = 2 : i64}> : (tensor<16xi32>, tensor<16xi32>) -> tensor<16xi1> loc("other_mask"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":39:37))

  ** Erase   : 'arith.cmpi'(0x5759086a4050)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869e5a0) {
  %6 = "arith.constant"() <{value = dense<16> : tensor<16xi32>}> : () -> tensor<16xi32> loc(unknown)

  ** Erase   : 'arith.constant'(0x57590869e5a0)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.func'(0x57590869a2c0) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.make_range'(0x5759086a3ae0) {
  %14 = "tt.make_range"() <{end = 16 : i32, start = 0 : i32}> : () -> tensor<16xi32> loc("other_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":38:37))

  ** Erase   : 'tt.make_range'(0x5759086a3ae0)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.splat'(0x5759086a5370) {
  %15 = "tt.splat"(%arg2) : (!tt.ptr<f32>) -> tensor<1024x1x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759086a7d00) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.splat'(0x57590867c250) {
  %16 = "tt.splat"(%arg4) : (i32) -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x5759086a5a80) {
  %17 = "arith.addi"(%13, %16) <{overflowFlags = #arith.overflow<none>}> : (tensor<1024xi32>, tensor<1024xi32>) -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))


  * Pattern (anonymous namespace)::AddIAddConstant : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddIAddConstant"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::AddIAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantRHS : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddISubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantLHS : 'arith.addi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::AddISubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneRhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneRhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneRhs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneLhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneLhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneLhs" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.cmpi'(0x5759086a6030) {
  %18 = "arith.cmpi"(%17, %6) <{predicate = 2 : i64}> : (tensor<1024xi32>, tensor<1024xi32>) -> tensor<1024xi1> loc("g_mask"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":35:25))


  * Pattern (anonymous namespace)::CmpIExtSI : 'arith.cmpi -> (arith.cmpi)' {
Trying to match "(anonymous namespace)::CmpIExtSI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtSIOp type
"(anonymous namespace)::CmpIExtSI" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::CmpIExtUI : 'arith.cmpi -> (arith.cmpi)' {
Trying to match "(anonymous namespace)::CmpIExtUI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtUIOp type
"(anonymous namespace)::CmpIExtUI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x575908707ba0) {
  %19 = "arith.index_cast"(%arg4) : (i32) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))


  * Pattern (anonymous namespace)::IndexCastOfIndexCast : 'arith.index_cast -> ()' {
Trying to match "(anonymous namespace)::IndexCastOfIndexCast"
    ** Match Failure : There's no operation that defines operand 0 of castedOp0
"(anonymous namespace)::IndexCastOfIndexCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::IndexCastOfExtSI : 'arith.index_cast -> (arith.index_cast)' {
Trying to match "(anonymous namespace)::IndexCastOfExtSI"
    ** Match Failure : There's no operation that defines operand 0 of castedOp0
"(anonymous namespace)::IndexCastOfExtSI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x57590869b2c0) {
  %20 = "arith.addi"(%10, %19) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))


  * Pattern (anonymous namespace)::AddIAddConstant : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddIAddConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::AddIOp type
"(anonymous namespace)::AddIAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantRHS : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddISubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantLHS : 'arith.addi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::AddISubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneRhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneRhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneRhs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneLhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneLhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneLhs" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.make_tptr'(0x5759086df2a0) {
  %21 = "tts.make_tptr"(%arg1, %20) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, order = array<i32>, sizes = array<i64: 1024>, static_offsets = array<i64: -9223372036854775808>, static_shape = array<i64: 0>, static_strides = array<i64: 1>}> : (!tt.ptr<i32>, index) -> tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759086fe990) {
  %2 = "arith.constant"() <{value = 1024 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x57590869b370) {
  %22 = "arith.addi"(%2, %10) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> success : operation was folded
//===-------------------------------------------===//
** Modified: 'arith.addi'(0x57590869b370)
// *** IR Dump After Successful Folding ***
scf.for %arg4 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {
  %8 = tt.splat %arg4 : i32 -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
  %9 = arith.addi %5, %8 : tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
  %10 = arith.cmpi slt, %9, %cst_0 : tensor<1024xi32> loc("g_mask"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":35:25))
  %11 = arith.index_cast %arg4 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
  %12 = arith.addi %2, %11 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
  %13 = tts.make_tptr %arg1 to sizes: [1024], strides: [1], offsets: [%12], shape: [0], order: [] : <i32> to tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
  %14 = arith.addi %2, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %15 = arith.addi %14, %11 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %16 = arith.minsi %15, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %17 = arith.maxsi %16, %12 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %18 = arith.subi %17, %12 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %19 = "tts.load"(%13, %18, %c0_i32) <{operandSegmentSizes = array<i32: 1, 1, 1>, static_mask_dims = array<i64: -9223372036854775808>}> : (tensor<1024x!tt.ptr<i32>>, index, i32) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %20 = tt.expand_dims %19 {axis = 1 : i32} : tensor<1024xi32> -> tensor<1024x1xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:47))
  %21 = arith.muli %20, %cst : tensor<1024x1xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:57))
  %22 = tt.addptr %6, %21 : tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:39))
  %23 = tt.broadcast %22 : tensor<1024x1x!tt.ptr<f32>> -> tensor<1024x16x!tt.ptr<f32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
  %24 = tts.make_gather_scatter_tptr %arg0 to sizes: [1024, 16] gather_scatter_dim: 0 gather_scatter_offset: %19, strides: [%c16, 1], offsets: [0, 0] : tensor<1024xi32> <f32> to !tt.ptr<tensor<1024x16xf32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
  %25 = tt.expand_dims %10 {axis = 1 : i32} : tensor<1024xi1> -> tensor<1024x1xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:94))
  %26 = tt.broadcast %25 : tensor<1024x1xi1> -> tensor<1024x16xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:104))
  %27 = arith.minsi %18, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %28 = "tts.load"(%24, %27) <{operandSegmentSizes = array<i32: 1, 1, 0>, static_mask_dims = array<i64: -9223372036854775808, 16>}> : (!tt.ptr<tensor<1024x16xf32>>, index) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %29 = tt.expand_dims %9 {axis = 1 : i32} : tensor<1024xi32> -> tensor<1024x1xi32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:37)
  %30 = arith.muli %29, %cst : tensor<1024x1xi32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
  %31 = arith.muli %12, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
  %32 = tt.addptr %7, %30 : tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
  %33 = tt.broadcast %32 : tensor<1024x1x!tt.ptr<f32>> -> tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
  %34 = tts.make_tptr %arg2 to sizes: [1024, 16], strides: [%c16, 1], offsets: [%31, 0], shape: [0, 0], order: [] : <f32> to tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
  "tts.store"(%34, %28, %27) <{static_mask_dims = array<i64: -9223372036854775808, 16>}> : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xf32>, index) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)



//===-------------------------------------------===//
Processing operation : 'tt.func'(0x57590869a2c0) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759086a7d00) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x57590869b370) {
  %22 = "arith.addi"(%10, %2) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::AddIAddConstant : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddIAddConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::AddIOp type
"(anonymous namespace)::AddIAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantRHS : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddISubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantLHS : 'arith.addi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::AddISubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneRhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneRhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneRhs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneLhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneLhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneLhs" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x57590870ff90) {
  %23 = "arith.addi"(%22, %19) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::AddIAddConstant : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddIAddConstant"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::AddIAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantRHS : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddISubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantLHS : 'arith.addi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::AddISubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneRhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneRhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneRhs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneLhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneLhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneLhs" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759087100b0) {
  %1 = "arith.constant"() <{value = 1971940 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.minsi'(0x575908710120) {
  %24 = "arith.minsi"(%23, %1) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.maxsi'(0x5759087101d0) {
  %25 = "arith.maxsi"(%24, %20) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.subi'(0x5759087076e0) {
  %26 = "arith.subi"(%25, %20) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::SubIRHSAddConstant : 'arith.subi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::SubIRHSAddConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::AddIOp type
"(anonymous namespace)::SubIRHSAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubILHSAddConstant : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubILHSAddConstant"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::SubILHSAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubIRHSSubConstantRHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubIRHSSubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::SubIRHSSubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubIRHSSubConstantLHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubIRHSSubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::SubIRHSSubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubILHSSubConstantRHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubILHSSubConstantRHS"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::SubILHSSubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubILHSSubConstantLHS : 'arith.subi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::SubILHSSubConstantLHS"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::SubILHSSubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubISubILHSRHSLHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubISubILHSRHSLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::SubISubILHSRHSLHS" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.load'(0x575908707c30) {
  %27 = "tts.load"(%21, %26, %4) <{operandSegmentSizes = array<i32: 1, 1, 1>, static_mask_dims = array<i64: -9223372036854775808>}> : (tensor<1024x!tt.ptr<i32>>, index, i32) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.expand_dims'(0x5759086a7010) {
  %28 = "tt.expand_dims"(%27) <{axis = 1 : i32}> : (tensor<1024xi32>) -> tensor<1024x1xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:47))


  * Pattern  : 'tt.expand_dims -> ()' {
Trying to match ""
"" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x5759086a7100) {
  %29 = "arith.muli"(%28, %5) <{overflowFlags = #arith.overflow<none>}> : (tensor<1024x1xi32>, tensor<1024x1xi32>) -> tensor<1024x1xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:57))


  * Pattern (anonymous namespace)::MulIMulIConstant : 'arith.muli -> (arith.constant, arith.muli)' {
Trying to match "(anonymous namespace)::MulIMulIConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::MulIMulIConstant" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x575908715750) {
  %0 = "arith.constant"() <{value = 16 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.addptr'(0x5759086a7210) {
  %30 = "tt.addptr"(%14, %29) : (tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32>) -> tensor<1024x1x!tt.ptr<f32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:39))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.broadcast'(0x5759086a7320) {
  %31 = "tt.broadcast"(%30) : (tensor<1024x1x!tt.ptr<f32>>) -> tensor<1024x16x!tt.ptr<f32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

  ** Erase   : 'tt.broadcast'(0x5759086a7320)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.func'(0x57590869a2c0) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759086a7d00) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.addptr'(0x5759086a7210) {
  %30 = "tt.addptr"(%14, %29) : (tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32>) -> tensor<1024x1x!tt.ptr<f32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:39))

  ** Erase   : 'tt.addptr'(0x5759086a7210)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759086a7d00) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x5759086a7100) {
  %29 = "arith.muli"(%28, %5) <{overflowFlags = #arith.overflow<none>}> : (tensor<1024x1xi32>, tensor<1024x1xi32>) -> tensor<1024x1xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:57))

  ** Erase   : 'arith.muli'(0x5759086a7100)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869dba0) {
  %5 = "arith.constant"() <{value = dense<16> : tensor<1024x1xi32>}> : () -> tensor<1024x1xi32> loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759086a7d00) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.expand_dims'(0x5759086a7010) {
  %28 = "tt.expand_dims"(%27) <{axis = 1 : i32}> : (tensor<1024xi32>) -> tensor<1024x1xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:47))

  ** Erase   : 'tt.expand_dims'(0x5759086a7010)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759086a7d00) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.load'(0x575908707c30) {
  %27 = "tts.load"(%21, %26, %4) <{operandSegmentSizes = array<i32: 1, 1, 1>, static_mask_dims = array<i64: -9223372036854775808>}> : (tensor<1024x!tt.ptr<i32>>, index, i32) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.func'(0x57590869a2c0) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.splat'(0x5759086a4140) {
  %14 = "tt.splat"(%arg0) : (!tt.ptr<f32>) -> tensor<1024x1x!tt.ptr<f32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:39))

  ** Erase   : 'tt.splat'(0x5759086a4140)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.make_gather_scatter_tptr'(0x575908715650) {
  %27 = "tts.make_gather_scatter_tptr"(%arg0, %26, %0) <{gather_scatter_dim = 0 : i32, operandSegmentSizes = array<i32: 1, 1, 1, 0>, sizes = array<i64: 1024, 16>, static_offsets = array<i64: 0, 0>, static_strides = array<i64: -9223372036854775808, 1>}> : (!tt.ptr<f32>, tensor<1024xi32>, index) -> !tt.ptr<tensor<1024x16xf32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.expand_dims'(0x5759086a7520) {
  %28 = "tt.expand_dims"(%17) <{axis = 1 : i32}> : (tensor<1024xi1>) -> tensor<1024x1xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:94))


  * Pattern  : 'tt.expand_dims -> ()' {
Trying to match ""
"" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.broadcast'(0x5759086a7610) {
  %29 = "tt.broadcast"(%28) : (tensor<1024x1xi1>) -> tensor<1024x16xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:104))

  ** Erase   : 'tt.broadcast'(0x5759086a7610)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.func'(0x57590869a2c0) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759086a7d00) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.expand_dims'(0x5759086a7520) {
  %28 = "tt.expand_dims"(%17) <{axis = 1 : i32}> : (tensor<1024xi1>) -> tensor<1024x1xi1> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:94))

  ** Erase   : 'tt.expand_dims'(0x5759086a7520)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.func'(0x57590869a2c0) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759086a7d00) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.cmpi'(0x5759086a6030) {
  %17 = "arith.cmpi"(%16, %6) <{predicate = 2 : i64}> : (tensor<1024xi32>, tensor<1024xi32>) -> tensor<1024xi1> loc("g_mask"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":35:25))

  ** Erase   : 'arith.cmpi'(0x5759086a6030)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869fe20) {
  %6 = "arith.constant"() <{value = dense<1971940> : tensor<1024xi32>}> : () -> tensor<1024xi32> loc(unknown)

  ** Erase   : 'arith.constant'(0x57590869fe20)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.func'(0x57590869a2c0) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759086a7d00) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x5759086a5a80) {
  %15 = "arith.addi"(%12, %14) <{overflowFlags = #arith.overflow<none>}> : (tensor<1024xi32>, tensor<1024xi32>) -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))


  * Pattern (anonymous namespace)::AddIAddConstant : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddIAddConstant"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::AddIAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantRHS : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddISubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantLHS : 'arith.addi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::AddISubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneRhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneRhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneRhs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneLhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneLhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneLhs" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.minsi'(0x57590871ba70) {
  %26 = "arith.minsi"(%23, %2) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.load'(0x575908702080) {
  %27 = "tts.load"(%25, %26) <{operandSegmentSizes = array<i32: 1, 1, 0>, static_mask_dims = array<i64: -9223372036854775808, 16>}> : (!tt.ptr<tensor<1024x16xf32>>, index) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.expand_dims'(0x5759086a7f50) {
  %28 = "tt.expand_dims"(%15) <{axis = 1 : i32}> : (tensor<1024xi32>) -> tensor<1024x1xi32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:37)


  * Pattern  : 'tt.expand_dims -> ()' {
Trying to match ""
"" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x5759086a90a0) {
  %29 = "arith.muli"(%28, %5) <{overflowFlags = #arith.overflow<none>}> : (tensor<1024x1xi32>, tensor<1024x1xi32>) -> tensor<1024x1xi32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)


  * Pattern (anonymous namespace)::MulIMulIConstant : 'arith.muli -> (arith.constant, arith.muli)' {
Trying to match "(anonymous namespace)::MulIMulIConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::MulIMulIConstant" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x5759087094f0) {
  %30 = "arith.muli"(%17, %0) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)


  * Pattern (anonymous namespace)::MulIMulIConstant : 'arith.muli -> (arith.constant, arith.muli)' {
Trying to match "(anonymous namespace)::MulIMulIConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::MulIMulIConstant" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.addptr'(0x5759086a91b0) {
  %31 = "tt.addptr"(%13, %29) : (tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32>) -> tensor<1024x1x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.broadcast'(0x5759086a92c0) {
  %32 = "tt.broadcast"(%31) : (tensor<1024x1x!tt.ptr<f32>>) -> tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)

  ** Erase   : 'tt.broadcast'(0x5759086a92c0)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.func'(0x57590869a2c0) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759086a7d00) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.addptr'(0x5759086a91b0) {
  %31 = "tt.addptr"(%13, %29) : (tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32>) -> tensor<1024x1x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)

  ** Erase   : 'tt.addptr'(0x5759086a91b0)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759086a7d00) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x5759086a90a0) {
  %29 = "arith.muli"(%28, %5) <{overflowFlags = #arith.overflow<none>}> : (tensor<1024x1xi32>, tensor<1024x1xi32>) -> tensor<1024x1xi32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)

  ** Erase   : 'arith.muli'(0x5759086a90a0)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869dba0) {
  %5 = "arith.constant"() <{value = dense<16> : tensor<1024x1xi32>}> : () -> tensor<1024x1xi32> loc(unknown)

  ** Erase   : 'arith.constant'(0x57590869dba0)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759086a7d00) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.expand_dims'(0x5759086a7f50) {
  %27 = "tt.expand_dims"(%14) <{axis = 1 : i32}> : (tensor<1024xi32>) -> tensor<1024x1xi32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:37)

  ** Erase   : 'tt.expand_dims'(0x5759086a7f50)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759086a7d00) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x5759086a5a80) {
  %14 = "arith.addi"(%11, %13) <{overflowFlags = #arith.overflow<none>}> : (tensor<1024xi32>, tensor<1024xi32>) -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))

  ** Erase   : 'arith.addi'(0x5759086a5a80)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759086a7d00) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.splat'(0x57590867c250) {
  %13 = "tt.splat"(%arg4) : (i32) -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))

  ** Erase   : 'tt.splat'(0x57590867c250)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x57590867c4d0) {
  %11 = "arith.addi"(%9, %10) <{overflowFlags = #arith.overflow<none>}> : (tensor<1024xi32>, tensor<1024xi32>) -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:42))

  ** Erase   : 'arith.addi'(0x57590867c4d0)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.splat'(0x57590867c370) {
  %10 = "tt.splat"(%7) : (i32) -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:42))

  ** Erase   : 'tt.splat'(0x57590867c370)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x57590867baa0) {
  %7 = "arith.muli"(%6, %5) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))


  * Pattern (anonymous namespace)::MulIMulIConstant : 'arith.muli -> (arith.constant, arith.muli)' {
Trying to match "(anonymous namespace)::MulIMulIConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::MulIMulIConstant" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.make_range'(0x57590869b6d0) {
  %9 = "tt.make_range"() <{end = 1024 : i32, start = 0 : i32}> : () -> tensor<1024xi32> loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:27))

  ** Erase   : 'tt.make_range'(0x57590869b6d0)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.func'(0x57590869a2c0) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.splat'(0x5759086a5370) {
  %9 = "tt.splat"(%arg2) : (!tt.ptr<f32>) -> tensor<1024x1x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)

  ** Erase   : 'tt.splat'(0x5759086a5370)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.make_tptr'(0x57590870b9a0) {
  %22 = "tts.make_tptr"(%arg2, %0, %21) <{operandSegmentSizes = array<i32: 1, 1, 1, 0>, order = array<i32>, sizes = array<i64: 1024, 16>, static_offsets = array<i64: -9223372036854775808, 0>, static_shape = array<i64: 0, 0>, static_strides = array<i64: -9223372036854775808, 1>}> : (!tt.ptr<f32>, index, index) -> tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.store'(0x57590870b840) {
  "tts.store"(%22, %20, %19) <{static_mask_dims = array<i64: -9223372036854775808, 16>}> : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xf32>, index) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.yield'(0x5759086839f0) {
  "scf.yield"() : () -> () loc("input.mlir":29:5)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.return'(0x575908684a80) {
  "tt.return"() : () -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:4)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.func'(0x57590869a2c0) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x575908715750) {
  %0 = "arith.constant"() <{value = 16 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759087100b0) {
  %1 = "arith.constant"() <{value = 1971940 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759086fe990) {
  %2 = "arith.constant"() <{value = 1024 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869be90) {
  %3 = "arith.constant"() <{value = 1024 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869c880) {
  %4 = "arith.constant"() <{value = 0 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759086a07f0) {
  %5 = "arith.constant"() <{value = 49299 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.get_program_id'(0x57590868f620) {
  %6 = "tt.get_program_id"() <{axis = 0 : i32}> : () -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:26))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x57590867baa0) {
  %7 = "arith.muli"(%6, %5) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))


  * Pattern (anonymous namespace)::MulIMulIConstant : 'arith.muli -> (arith.constant, arith.muli)' {
Trying to match "(anonymous namespace)::MulIMulIConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::MulIMulIConstant" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x575908673eb0) {
  %8 = "arith.index_cast"(%7) : (i32) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)


  * Pattern (anonymous namespace)::IndexCastOfIndexCast : 'arith.index_cast -> ()' {
Trying to match "(anonymous namespace)::IndexCastOfIndexCast"
    ** Match Failure : castedOp1 is not ::mlir::arith::IndexCastOp type
"(anonymous namespace)::IndexCastOfIndexCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::IndexCastOfExtSI : 'arith.index_cast -> (arith.index_cast)' {
Trying to match "(anonymous namespace)::IndexCastOfExtSI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtSIOp type
"(anonymous namespace)::IndexCastOfExtSI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759086a7d00) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x575908707ba0) {
  %9 = "arith.index_cast"(%arg4) : (i32) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))


  * Pattern (anonymous namespace)::IndexCastOfIndexCast : 'arith.index_cast -> ()' {
Trying to match "(anonymous namespace)::IndexCastOfIndexCast"
    ** Match Failure : There's no operation that defines operand 0 of castedOp0
"(anonymous namespace)::IndexCastOfIndexCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::IndexCastOfExtSI : 'arith.index_cast -> (arith.index_cast)' {
Trying to match "(anonymous namespace)::IndexCastOfExtSI"
    ** Match Failure : There's no operation that defines operand 0 of castedOp0
"(anonymous namespace)::IndexCastOfExtSI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x57590869b2c0) {
  %10 = "arith.addi"(%8, %9) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))


  * Pattern (anonymous namespace)::AddIAddConstant : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddIAddConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::AddIOp type
"(anonymous namespace)::AddIAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantRHS : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddISubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantLHS : 'arith.addi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::AddISubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneRhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneRhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneRhs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneLhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneLhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneLhs" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.make_tptr'(0x5759086df2a0) {
  %11 = "tts.make_tptr"(%arg1, %10) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, order = array<i32>, sizes = array<i64: 1024>, static_offsets = array<i64: -9223372036854775808>, static_shape = array<i64: 0>, static_strides = array<i64: 1>}> : (!tt.ptr<i32>, index) -> tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x57590869b370) {
  %12 = "arith.addi"(%8, %2) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::AddIAddConstant : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddIAddConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::AddIOp type
"(anonymous namespace)::AddIAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantRHS : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddISubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantLHS : 'arith.addi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::AddISubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneRhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneRhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneRhs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneLhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneLhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneLhs" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x57590870ff90) {
  %13 = "arith.addi"(%12, %9) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::AddIAddConstant : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddIAddConstant"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::AddIAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantRHS : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddISubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantLHS : 'arith.addi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::AddISubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneRhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneRhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneRhs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneLhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneLhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneLhs" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.minsi'(0x575908710120) {
  %14 = "arith.minsi"(%13, %1) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.maxsi'(0x5759087101d0) {
  %15 = "arith.maxsi"(%14, %10) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.subi'(0x5759087076e0) {
  %16 = "arith.subi"(%15, %10) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::SubIRHSAddConstant : 'arith.subi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::SubIRHSAddConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::AddIOp type
"(anonymous namespace)::SubIRHSAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubILHSAddConstant : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubILHSAddConstant"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::SubILHSAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubIRHSSubConstantRHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubIRHSSubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::SubIRHSSubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubIRHSSubConstantLHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubIRHSSubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::SubIRHSSubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubILHSSubConstantRHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubILHSSubConstantRHS"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::SubILHSSubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubILHSSubConstantLHS : 'arith.subi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::SubILHSSubConstantLHS"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::SubILHSSubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubISubILHSRHSLHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubISubILHSRHSLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::SubISubILHSRHSLHS" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.load'(0x575908707c30) {
  %17 = "tts.load"(%11, %16, %4) <{operandSegmentSizes = array<i32: 1, 1, 1>, static_mask_dims = array<i64: -9223372036854775808>}> : (tensor<1024x!tt.ptr<i32>>, index, i32) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.make_gather_scatter_tptr'(0x575908715650) {
  %18 = "tts.make_gather_scatter_tptr"(%arg0, %17, %0) <{gather_scatter_dim = 0 : i32, operandSegmentSizes = array<i32: 1, 1, 1, 0>, sizes = array<i64: 1024, 16>, static_offsets = array<i64: 0, 0>, static_strides = array<i64: -9223372036854775808, 1>}> : (!tt.ptr<f32>, tensor<1024xi32>, index) -> !tt.ptr<tensor<1024x16xf32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.minsi'(0x57590871ba70) {
  %19 = "arith.minsi"(%16, %2) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.load'(0x575908702080) {
  %20 = "tts.load"(%18, %19) <{operandSegmentSizes = array<i32: 1, 1, 0>, static_mask_dims = array<i64: -9223372036854775808, 16>}> : (!tt.ptr<tensor<1024x16xf32>>, index) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x5759087094f0) {
  %21 = "arith.muli"(%10, %0) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)


  * Pattern (anonymous namespace)::MulIMulIConstant : 'arith.muli -> (arith.constant, arith.muli)' {
Trying to match "(anonymous namespace)::MulIMulIConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::MulIMulIConstant" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.make_tptr'(0x57590870b9a0) {
  %22 = "tts.make_tptr"(%arg2, %0, %21) <{operandSegmentSizes = array<i32: 1, 1, 1, 0>, order = array<i32>, sizes = array<i64: 1024, 16>, static_offsets = array<i64: -9223372036854775808, 0>, static_shape = array<i64: 0, 0>, static_strides = array<i64: -9223372036854775808, 1>}> : (!tt.ptr<f32>, index, index) -> tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.store'(0x57590870b840) {
  "tts.store"(%22, %20, %19) <{static_mask_dims = array<i64: -9223372036854775808, 16>}> : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xf32>, index) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.yield'(0x5759086839f0) {
  "scf.yield"() : () -> () loc("input.mlir":29:5)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.return'(0x575908684a80) {
  "tt.return"() : () -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:4)

} -> failure : all patterns failed to match
//===-------------------------------------------===//
** Replace : 'arith.constant'(0x57590871b390)
** Erase   : 'arith.constant'(0x57590871b390)
** Replace : 'arith.constant'(0x57590871b6a0)
** Erase   : 'arith.constant'(0x57590871b6a0)
** Replace : 'arith.constant'(0x57590869c880)
** Modified: 'tts.load'(0x575908707c30)
** Modified: 'scf.for'(0x5759086a7d00)
** Erase   : 'arith.constant'(0x57590869c880)

//===-------------------------------------------===//
Processing operation : 'tt.func'(0x57590869a2c0) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590871be30) {
  %0 = "arith.constant"() <{value = 0 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x575908715750) {
  %1 = "arith.constant"() <{value = 16 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759087100b0) {
  %2 = "arith.constant"() <{value = 1971940 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759086fe990) {
  %3 = "arith.constant"() <{value = 1024 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869be90) {
  %4 = "arith.constant"() <{value = 1024 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.load'(0x575908707c30) {
  %17 = "tts.load"(%11, %16, %0) <{operandSegmentSizes = array<i32: 1, 1, 1>, static_mask_dims = array<i64: -9223372036854775808>}> : (tensor<1024x!tt.ptr<i32>>, index, i32) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759086a7d00) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759086a07f0) {
  %5 = "arith.constant"() <{value = 49299 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.get_program_id'(0x57590868f620) {
  %6 = "tt.get_program_id"() <{axis = 0 : i32}> : () -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:26))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x57590867baa0) {
  %7 = "arith.muli"(%6, %5) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))


  * Pattern (anonymous namespace)::MulIMulIConstant : 'arith.muli -> (arith.constant, arith.muli)' {
Trying to match "(anonymous namespace)::MulIMulIConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::MulIMulIConstant" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x575908673eb0) {
  %8 = "arith.index_cast"(%7) : (i32) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)


  * Pattern (anonymous namespace)::IndexCastOfIndexCast : 'arith.index_cast -> ()' {
Trying to match "(anonymous namespace)::IndexCastOfIndexCast"
    ** Match Failure : castedOp1 is not ::mlir::arith::IndexCastOp type
"(anonymous namespace)::IndexCastOfIndexCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::IndexCastOfExtSI : 'arith.index_cast -> (arith.index_cast)' {
Trying to match "(anonymous namespace)::IndexCastOfExtSI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtSIOp type
"(anonymous namespace)::IndexCastOfExtSI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x575908707ba0) {
  %9 = "arith.index_cast"(%arg4) : (i32) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))


  * Pattern (anonymous namespace)::IndexCastOfIndexCast : 'arith.index_cast -> ()' {
Trying to match "(anonymous namespace)::IndexCastOfIndexCast"
    ** Match Failure : There's no operation that defines operand 0 of castedOp0
"(anonymous namespace)::IndexCastOfIndexCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::IndexCastOfExtSI : 'arith.index_cast -> (arith.index_cast)' {
Trying to match "(anonymous namespace)::IndexCastOfExtSI"
    ** Match Failure : There's no operation that defines operand 0 of castedOp0
"(anonymous namespace)::IndexCastOfExtSI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x57590869b2c0) {
  %10 = "arith.addi"(%8, %9) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))


  * Pattern (anonymous namespace)::AddIAddConstant : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddIAddConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::AddIOp type
"(anonymous namespace)::AddIAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantRHS : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddISubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantLHS : 'arith.addi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::AddISubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneRhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneRhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneRhs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneLhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneLhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneLhs" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.make_tptr'(0x5759086df2a0) {
  %11 = "tts.make_tptr"(%arg1, %10) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, order = array<i32>, sizes = array<i64: 1024>, static_offsets = array<i64: -9223372036854775808>, static_shape = array<i64: 0>, static_strides = array<i64: 1>}> : (!tt.ptr<i32>, index) -> tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x57590869b370) {
  %12 = "arith.addi"(%8, %3) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::AddIAddConstant : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddIAddConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::AddIOp type
"(anonymous namespace)::AddIAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantRHS : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddISubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantLHS : 'arith.addi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::AddISubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneRhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneRhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneRhs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneLhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneLhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneLhs" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x57590870ff90) {
  %13 = "arith.addi"(%12, %9) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::AddIAddConstant : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddIAddConstant"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::AddIAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantRHS : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddISubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantLHS : 'arith.addi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::AddISubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneRhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneRhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneRhs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneLhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneLhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneLhs" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.minsi'(0x575908710120) {
  %14 = "arith.minsi"(%13, %2) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.maxsi'(0x5759087101d0) {
  %15 = "arith.maxsi"(%14, %10) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.subi'(0x5759087076e0) {
  %16 = "arith.subi"(%15, %10) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::SubIRHSAddConstant : 'arith.subi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::SubIRHSAddConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::AddIOp type
"(anonymous namespace)::SubIRHSAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubILHSAddConstant : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubILHSAddConstant"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::SubILHSAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubIRHSSubConstantRHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubIRHSSubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::SubIRHSSubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubIRHSSubConstantLHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubIRHSSubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::SubIRHSSubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubILHSSubConstantRHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubILHSSubConstantRHS"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::SubILHSSubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubILHSSubConstantLHS : 'arith.subi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::SubILHSSubConstantLHS"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::SubILHSSubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubISubILHSRHSLHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubISubILHSRHSLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::SubISubILHSRHSLHS" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.make_gather_scatter_tptr'(0x575908715650) {
  %18 = "tts.make_gather_scatter_tptr"(%arg0, %17, %1) <{gather_scatter_dim = 0 : i32, operandSegmentSizes = array<i32: 1, 1, 1, 0>, sizes = array<i64: 1024, 16>, static_offsets = array<i64: 0, 0>, static_strides = array<i64: -9223372036854775808, 1>}> : (!tt.ptr<f32>, tensor<1024xi32>, index) -> !tt.ptr<tensor<1024x16xf32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.minsi'(0x57590871ba70) {
  %19 = "arith.minsi"(%16, %3) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.load'(0x575908702080) {
  %20 = "tts.load"(%18, %19) <{operandSegmentSizes = array<i32: 1, 1, 0>, static_mask_dims = array<i64: -9223372036854775808, 16>}> : (!tt.ptr<tensor<1024x16xf32>>, index) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x5759087094f0) {
  %21 = "arith.muli"(%10, %1) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)


  * Pattern (anonymous namespace)::MulIMulIConstant : 'arith.muli -> (arith.constant, arith.muli)' {
Trying to match "(anonymous namespace)::MulIMulIConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::MulIMulIConstant" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.make_tptr'(0x57590870b9a0) {
  %22 = "tts.make_tptr"(%arg2, %1, %21) <{operandSegmentSizes = array<i32: 1, 1, 1, 0>, order = array<i32>, sizes = array<i64: 1024, 16>, static_offsets = array<i64: -9223372036854775808, 0>, static_shape = array<i64: 0, 0>, static_strides = array<i64: -9223372036854775808, 1>}> : (!tt.ptr<f32>, index, index) -> tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.store'(0x57590870b840) {
  "tts.store"(%22, %20, %19) <{static_mask_dims = array<i64: -9223372036854775808, 16>}> : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xf32>, index) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.yield'(0x5759086839f0) {
  "scf.yield"() : () -> () loc("input.mlir":29:5)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.return'(0x575908684a80) {
  "tt.return"() : () -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:4)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.return'(0x575908684a80) {
  "tt.return"() : () -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:4)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.yield'(0x5759086839f0) {
  "scf.yield"() : () -> () loc("input.mlir":29:5)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.store'(0x57590870b840) {
  "tts.store"(%22, %20, %19) <{static_mask_dims = array<i64: -9223372036854775808, 16>}> : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xf32>, index) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.make_tptr'(0x57590870b9a0) {
  %22 = "tts.make_tptr"(%arg2, %1, %21) <{operandSegmentSizes = array<i32: 1, 1, 1, 0>, order = array<i32>, sizes = array<i64: 1024, 16>, static_offsets = array<i64: -9223372036854775808, 0>, static_shape = array<i64: 0, 0>, static_strides = array<i64: -9223372036854775808, 1>}> : (!tt.ptr<f32>, index, index) -> tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x5759087094f0) {
  %21 = "arith.muli"(%10, %1) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.load'(0x575908702080) {
  %20 = "tts.load"(%18, %19) <{operandSegmentSizes = array<i32: 1, 1, 0>, static_mask_dims = array<i64: -9223372036854775808, 16>}> : (!tt.ptr<tensor<1024x16xf32>>, index) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.minsi'(0x57590871ba70) {
  %19 = "arith.minsi"(%16, %3) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.make_gather_scatter_tptr'(0x575908715650) {
  %18 = "tts.make_gather_scatter_tptr"(%arg0, %17, %1) <{gather_scatter_dim = 0 : i32, operandSegmentSizes = array<i32: 1, 1, 1, 0>, sizes = array<i64: 1024, 16>, static_offsets = array<i64: 0, 0>, static_strides = array<i64: -9223372036854775808, 1>}> : (!tt.ptr<f32>, tensor<1024xi32>, index) -> !tt.ptr<tensor<1024x16xf32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.load'(0x575908707c30) {
  %17 = "tts.load"(%11, %16, %0) <{operandSegmentSizes = array<i32: 1, 1, 1>, static_mask_dims = array<i64: -9223372036854775808>}> : (tensor<1024x!tt.ptr<i32>>, index, i32) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.subi'(0x5759087076e0) {
  %16 = "arith.subi"(%15, %10) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.maxsi'(0x5759087101d0) {
  %15 = "arith.maxsi"(%14, %10) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.minsi'(0x575908710120) {
  %14 = "arith.minsi"(%13, %2) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x57590870ff90) {
  %13 = "arith.addi"(%12, %9) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x57590869b370) {
  %12 = "arith.addi"(%8, %3) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.make_tptr'(0x5759086df2a0) {
  %11 = "tts.make_tptr"(%arg1, %10) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, order = array<i32>, sizes = array<i64: 1024>, static_offsets = array<i64: -9223372036854775808>, static_shape = array<i64: 0>, static_strides = array<i64: 1>}> : (!tt.ptr<i32>, index) -> tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x57590869b2c0) {
  %10 = "arith.addi"(%8, %9) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759086a7d00) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x575908707ba0) {
  %9 = "arith.index_cast"(%arg4) : (i32) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x575908673eb0) {
  %8 = "arith.index_cast"(%7) : (i32) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x57590867baa0) {
  %7 = "arith.muli"(%6, %5) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.get_program_id'(0x57590868f620) {
  %6 = "tt.get_program_id"() <{axis = 0 : i32}> : () -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:26))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759086a07f0) {
  %5 = "arith.constant"() <{value = 49299 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869be90) {
  %4 = "arith.constant"() <{value = 1024 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759086fe990) {
  %3 = "arith.constant"() <{value = 1024 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759087100b0) {
  %2 = "arith.constant"() <{value = 1971940 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x575908715750) {
  %1 = "arith.constant"() <{value = 16 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.func'(0x57590869a2c0) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590871be30) {
  %0 = "arith.constant"() <{value = 0 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'builtin.module'(0x57590869a350) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.func'(0x57590869a2c0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590871be30) {
  %0 = "arith.constant"() <{value = 0 : i32}> : () -> i32 loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x575908715750) {
  %1 = "arith.constant"() <{value = 16 : index}> : () -> index loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5759087100b0) {
  %2 = "arith.constant"() <{value = 1971940 : index}> : () -> index loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5759086fe990) {
  %3 = "arith.constant"() <{value = 1024 : index}> : () -> index loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590869be90) {
  %4 = "arith.constant"() <{value = 1024 : i32}> : () -> i32 loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5759086a07f0) {
  %5 = "arith.constant"() <{value = 49299 : i32}> : () -> i32 loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.get_program_id'(0x57590868f620) {
  %6 = "tt.get_program_id"() <{axis = 0 : i32}> : () -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:26))

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'tt.get_program_id -> ()' {
Trying to match "{anonymous}::GetProgramIDConverter"
    ** Replace : 'tt.get_program_id'(0x57590868f620)
"{anonymous}::GetProgramIDConverter" result 1
  } -> SUCCESS : pattern applied successfully
// *** IR Dump After Pattern Application ***
tt.func public @origin_index_select(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 {tt.divisibility = 16 : i32} loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg4: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg5: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg6: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg7: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg8: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg9: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)) attributes {noinline = false} {
  %c0_i32 = arith.constant 0 : i32 loc(unknown)
  %c16 = arith.constant 16 : index loc(unknown)
  %c1971940 = arith.constant 1971940 : index loc(unknown)
  %c1024 = arith.constant 1024 : index loc(unknown)
  %c1024_i32 = arith.constant 1024 : i32 loc(unknown)
  %c49299_i32 = arith.constant 49299 : i32 loc(unknown)
  %0 = tt.get_program_id x : i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:26))
  %1 = arith.muli %0, %c49299_i32 : i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))
  %2 = arith.index_cast %1 : i32 to index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
  scf.for %arg10 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {
    %3 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %4 = arith.addi %2, %3 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
    %5 = tts.make_tptr %arg1 to sizes: [1024], strides: [1], offsets: [%4], shape: [0], order: [] : <i32> to tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %6 = arith.addi %2, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %7 = arith.addi %6, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %8 = arith.minsi %7, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %9 = arith.maxsi %8, %4 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %10 = arith.subi %9, %4 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %11 = "tts.load"(%5, %10, %c0_i32) <{operandSegmentSizes = array<i32: 1, 1, 1>, static_mask_dims = array<i64: -9223372036854775808>}> : (tensor<1024x!tt.ptr<i32>>, index, i32) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %12 = tts.make_gather_scatter_tptr %arg0 to sizes: [1024, 16] gather_scatter_dim: 0 gather_scatter_offset: %11, strides: [%c16, 1], offsets: [0, 0] : tensor<1024xi32> <f32> to !tt.ptr<tensor<1024x16xf32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
    %13 = arith.minsi %10, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %14 = "tts.load"(%12, %13) <{operandSegmentSizes = array<i32: 1, 1, 0>, static_mask_dims = array<i64: -9223372036854775808, 16>}> : (!tt.ptr<tensor<1024x16xf32>>, index) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %15 = arith.muli %4, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
    %16 = tts.make_tptr %arg2 to sizes: [1024, 16], strides: [%c16, 1], offsets: [%15, 0], shape: [0, 0], order: [] : <f32> to tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
    "tts.store"(%16, %14, %13) <{static_mask_dims = array<i64: -9223372036854775808, 16>}> : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xf32>, index) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  } loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
  tt.return loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:4)
} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)


} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x57590867baa0) {
  %7 = "arith.muli"(%6, %5) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x575908673eb0) {
  %8 = "arith.index_cast"(%7) : (i32) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.for'(0x5759086a7d00) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x575908707ba0) {
  %9 = "arith.index_cast"(%arg10) : (i32) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x57590869b2c0) {
  %10 = "arith.addi"(%8, %9) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tts.make_tptr'(0x5759086df2a0) {
  %11 = "tts.make_tptr"(%arg1, %10) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, order = array<i32>, sizes = array<i64: 1024>, static_offsets = array<i64: -9223372036854775808>, static_shape = array<i64: 0>, static_strides = array<i64: 1>}> : (!tt.ptr<i32>, index) -> tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x57590869b370) {
  %12 = "arith.addi"(%8, %3) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x57590870ff90) {
  %13 = "arith.addi"(%12, %9) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.minsi'(0x575908710120) {
  %14 = "arith.minsi"(%13, %2) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.maxsi'(0x5759087101d0) {
  %15 = "arith.maxsi"(%14, %10) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.subi'(0x5759087076e0) {
  %16 = "arith.subi"(%15, %10) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tts.load'(0x575908707c30) {
  %17 = "tts.load"(%11, %16, %0) <{operandSegmentSizes = array<i32: 1, 1, 1>, static_mask_dims = array<i64: -9223372036854775808>}> : (tensor<1024x!tt.ptr<i32>>, index, i32) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tts.make_gather_scatter_tptr'(0x575908715650) {
  %18 = "tts.make_gather_scatter_tptr"(%arg0, %17, %1) <{gather_scatter_dim = 0 : i32, operandSegmentSizes = array<i32: 1, 1, 1, 0>, sizes = array<i64: 1024, 16>, static_offsets = array<i64: 0, 0>, static_strides = array<i64: -9223372036854775808, 1>}> : (!tt.ptr<f32>, tensor<1024xi32>, index) -> !tt.ptr<tensor<1024x16xf32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.minsi'(0x57590871ba70) {
  %19 = "arith.minsi"(%16, %3) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tts.load'(0x575908702080) {
  %20 = "tts.load"(%18, %19) <{operandSegmentSizes = array<i32: 1, 1, 0>, static_mask_dims = array<i64: -9223372036854775808, 16>}> : (!tt.ptr<tensor<1024x16xf32>>, index) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x5759087094f0) {
  %21 = "arith.muli"(%10, %1) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tts.make_tptr'(0x57590870b9a0) {
  %22 = "tts.make_tptr"(%arg2, %1, %21) <{operandSegmentSizes = array<i32: 1, 1, 1, 0>, order = array<i32>, sizes = array<i64: 1024, 16>, static_offsets = array<i64: -9223372036854775808, 0>, static_shape = array<i64: 0, 0>, static_strides = array<i64: -9223372036854775808, 1>}> : (!tt.ptr<f32>, index, index) -> tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tts.store'(0x57590870b840) {
  "tts.store"(%22, %20, %19) <{static_mask_dims = array<i64: -9223372036854775808, 16>}> : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xf32>, index) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x5759086839f0) {
  "scf.yield"() : () -> () loc("input.mlir":29:5)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tt.return'(0x575908684a80) {
  "tt.return"() : () -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:4)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.return'(0x575908684a80) {
  "tt.return"() : () -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:4)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.yield'(0x5759086839f0) {
  "scf.yield"() : () -> () loc("input.mlir":29:5)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.store'(0x57590870b840) {
  "tts.store"(%21, %19, %18) <{static_mask_dims = array<i64: -9223372036854775808, 16>}> : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xf32>, index) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.make_tptr'(0x57590870b9a0) {
  %21 = "tts.make_tptr"(%arg2, %1, %20) <{operandSegmentSizes = array<i32: 1, 1, 1, 0>, order = array<i32>, sizes = array<i64: 1024, 16>, static_offsets = array<i64: -9223372036854775808, 0>, static_shape = array<i64: 0, 0>, static_strides = array<i64: -9223372036854775808, 1>}> : (!tt.ptr<f32>, index, index) -> tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x5759087094f0) {
  %20 = "arith.muli"(%9, %1) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.load'(0x575908702080) {
  %19 = "tts.load"(%17, %18) <{operandSegmentSizes = array<i32: 1, 1, 0>, static_mask_dims = array<i64: -9223372036854775808, 16>}> : (!tt.ptr<tensor<1024x16xf32>>, index) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.minsi'(0x57590871ba70) {
  %18 = "arith.minsi"(%15, %3) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.make_gather_scatter_tptr'(0x575908715650) {
  %17 = "tts.make_gather_scatter_tptr"(%arg0, %16, %1) <{gather_scatter_dim = 0 : i32, operandSegmentSizes = array<i32: 1, 1, 1, 0>, sizes = array<i64: 1024, 16>, static_offsets = array<i64: 0, 0>, static_strides = array<i64: -9223372036854775808, 1>}> : (!tt.ptr<f32>, tensor<1024xi32>, index) -> !tt.ptr<tensor<1024x16xf32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.load'(0x575908707c30) {
  %16 = "tts.load"(%10, %15, %0) <{operandSegmentSizes = array<i32: 1, 1, 1>, static_mask_dims = array<i64: -9223372036854775808>}> : (tensor<1024x!tt.ptr<i32>>, index, i32) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.subi'(0x5759087076e0) {
  %15 = "arith.subi"(%14, %9) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.maxsi'(0x5759087101d0) {
  %14 = "arith.maxsi"(%13, %9) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.minsi'(0x575908710120) {
  %13 = "arith.minsi"(%12, %2) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x57590870ff90) {
  %12 = "arith.addi"(%11, %8) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x57590869b370) {
  %11 = "arith.addi"(%7, %3) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tts.make_tptr'(0x5759086df2a0) {
  %10 = "tts.make_tptr"(%arg1, %9) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, order = array<i32>, sizes = array<i64: 1024>, static_offsets = array<i64: -9223372036854775808>, static_shape = array<i64: 0>, static_strides = array<i64: 1>}> : (!tt.ptr<i32>, index) -> tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x57590869b2c0) {
  %9 = "arith.addi"(%7, %8) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759086a7d00) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x575908707ba0) {
  %8 = "arith.index_cast"(%arg10) : (i32) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x575908673eb0) {
  %7 = "arith.index_cast"(%6) : (i32) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x57590867baa0) {
  %6 = "arith.muli"(%arg7, %5) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759086a07f0) {
  %5 = "arith.constant"() <{value = 49299 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869be90) {
  %4 = "arith.constant"() <{value = 1024 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759086fe990) {
  %3 = "arith.constant"() <{value = 1024 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759087100b0) {
  %2 = "arith.constant"() <{value = 1971940 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x575908715750) {
  %1 = "arith.constant"() <{value = 16 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tt.func'(0x57590869a2c0) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590871be30) {
  %0 = "arith.constant"() <{value = 0 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//
ImplicitTypeIDRegistry::lookupOrInsert(mlir::CallableOpInterface::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::FunctionOpInterface::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::HasParent<mlir::func::FuncOp>::Impl<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::MemRefsNormalizable<Empty>)

//===-------------------------------------------===//
Legalizing operation : 'builtin.module'(0x57590869a350) {
  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.func'(0x575908715540) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590869c880) {
  %0 = "arith.constant"() <{value = 0 : i32}> : () -> i32 loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590869f3f0) {
  %1 = "arith.constant"() <{value = 16 : index}> : () -> index loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x575908710040) {
  %2 = "arith.constant"() <{value = 1971940 : index}> : () -> index loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x575908707790) {
  %3 = "arith.constant"() <{value = 1024 : index}> : () -> index loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5759086a4fb0) {
  %4 = "arith.constant"() <{value = 1024 : i32}> : () -> i32 loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5759086a90a0) {
  %5 = "arith.constant"() <{value = 49299 : i32}> : () -> i32 loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x5759086a93b0) {
  %6 = "arith.muli"(%arg7, %5) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x57590869b6d0) {
  %7 = "arith.index_cast"(%6) : (i32) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.for'(0x57590869db90) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x5759086a92c0) {
  %8 = "arith.index_cast"(%arg10) : (i32) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x5759086a7f50) {
  %9 = "arith.addi"(%7, %8) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tts.make_tptr'(0x5759086e50b0) {
  %10 = "tts.make_tptr"(%arg1, %9) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, order = array<i32>, sizes = array<i64: 1024>, static_offsets = array<i64: -9223372036854775808>, static_shape = array<i64: 0>, static_strides = array<i64: 1>}> : (!tt.ptr<i32>, index) -> tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'tts.make_tptr -> ()' {
Trying to match "{anonymous}::MakeTensorPtrConverter"
ImplicitTypeIDRegistry::lookupOrInsert(mlir::memref::detail::ReinterpretCastOpGenericAdaptorBase::Properties)
    ** Insert  : 'memref.reinterpret_cast'(0x5759086a7d10)
    ** Replace : 'tts.make_tptr'(0x5759086e50b0)
"{anonymous}::MakeTensorPtrConverter" result 1

    //===-------------------------------------------===//
    Legalizing operation : 'memref.reinterpret_cast'(0x5759086a7d10) {
      %11 = "memref.reinterpret_cast"(%0, %10) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1024>, static_strides = array<i64: 1>}> : (memref<*xi32>, index) -> memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
// *** IR Dump After Pattern Application ***
func.func @origin_index_select(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 {tt.divisibility = 16 : i32} loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg4: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg5: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg6: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg7: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg8: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg9: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)) {
  %0 = builtin.unrealized_conversion_cast %arg1 : !tt.ptr<i32> to memref<*xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
  %c0_i32 = arith.constant 0 : i32 loc(unknown)
  %c16 = arith.constant 16 : index loc(unknown)
  %c1971940 = arith.constant 1971940 : index loc(unknown)
  %c1024 = arith.constant 1024 : index loc(unknown)
  %c1024_i32 = arith.constant 1024 : i32 loc(unknown)
  %c49299_i32 = arith.constant 49299 : i32 loc(unknown)
  %1 = arith.muli %arg7, %c49299_i32 : i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))
  %2 = arith.index_cast %1 : i32 to index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
  scf.for %arg10 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {
    %3 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %4 = arith.addi %2, %3 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
    %reinterpret_cast = memref.reinterpret_cast %0 to offset: [%4], sizes: [1024], strides: [1] : memref<*xi32> to memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %5 = tts.make_tptr %arg1 to sizes: [1024], strides: [1], offsets: [%4], shape: [0], order: [] : <i32> to tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %6 = arith.addi %2, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %7 = arith.addi %6, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %8 = arith.minsi %7, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %9 = arith.maxsi %8, %4 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %10 = arith.subi %9, %4 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %11 = "tts.load"(%5, %10, %c0_i32) <{operandSegmentSizes = array<i32: 1, 1, 1>, static_mask_dims = array<i64: -9223372036854775808>}> : (tensor<1024x!tt.ptr<i32>>, index, i32) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %12 = tts.make_gather_scatter_tptr %arg0 to sizes: [1024, 16] gather_scatter_dim: 0 gather_scatter_offset: %11, strides: [%c16, 1], offsets: [0, 0] : tensor<1024xi32> <f32> to !tt.ptr<tensor<1024x16xf32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
    %13 = arith.minsi %10, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %14 = "tts.load"(%12, %13) <{operandSegmentSizes = array<i32: 1, 1, 0>, static_mask_dims = array<i64: -9223372036854775808, 16>}> : (!tt.ptr<tensor<1024x16xf32>>, index) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %15 = arith.muli %4, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
    %16 = tts.make_tptr %arg2 to sizes: [1024, 16], strides: [%c16, 1], offsets: [%15, 0], shape: [0, 0], order: [] : <f32> to tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
    "tts.store"(%16, %14, %13) <{static_mask_dims = array<i64: -9223372036854775808, 16>}> : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xf32>, index) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  } loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
  return loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)


} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x57590869e5a0) {
  %13 = "arith.addi"(%8, %4) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x575908717a70) {
  %14 = "arith.addi"(%13, %9) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.minsi'(0x5759086a5280) {
  %15 = "arith.minsi"(%14, %3) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.maxsi'(0x57590869fe20) {
  %16 = "arith.maxsi"(%15, %10) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.subi'(0x57590871b390) {
  %17 = "arith.subi"(%16, %10) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tts.load'(0x57590870fcd0) {
  %18 = "tts.load"(%12, %17, %1) <{operandSegmentSizes = array<i32: 1, 1, 1>, static_mask_dims = array<i64: -9223372036854775808>}> : (tensor<1024x!tt.ptr<i32>>, index, i32) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'tts.load -> ()' {
Trying to match "{anonymous}::LoadConverter"
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::OneTypedResult<mlir::MemRefType>::Impl<Empty>)
    ** Insert  : 'memref.alloc'(0x575908709470)
    ** Insert  : 'arith.constant'(0x575908707c30)
    ** Insert  : 'arith.constant'(0x575908707cd0)
    ** Insert  : 'arith.cmpi'(0x57590871b5f0)
    ** Insert  : 'arith.ori'(0x57590871b540)
    ** Insert Block into detached Region (nullptr parent op)'
    ** Insert Block into detached Region (nullptr parent op)'
    ** Insert  : 'linalg.yield'(0x575908713b00)
    ** Insert  : 'linalg.fill'(0x57590870bb80)
    ** Insert  : 'scf.yield'(0x5759086839f0)
    ** Insert  : 'scf.if'(0x57590871b3f0)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::memref::detail::SubViewOpGenericAdaptorBase::Properties)
    ** Insert  : 'memref.subview'(0x57590869f460)
    ** Insert  : 'memref.subview'(0x57590869b2c0)
    ** Insert  : 'memref.copy'(0x57590870b840)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::bufferization::detail::ToTensorOpGenericAdaptorBase::Properties)
    ** Insert  : 'bufferization.to_tensor'(0x5759087101c0)
    ** Replace : 'tts.load'(0x57590870fcd0)
"{anonymous}::LoadConverter" result 1

    //===-------------------------------------------===//
    Legalizing operation : 'memref.alloc'(0x575908709470) {
      %18 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x575908707c30) {
      %19 = "arith.constant"() <{value = false}> : () -> i1 loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x575908707cd0) {
      %20 = "arith.constant"() <{value = 1024 : index}> : () -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.cmpi'(0x57590871b5f0) {
      %21 = "arith.cmpi"(%17, %20) <{predicate = 2 : i64}> : (index, index) -> i1 loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.ori'(0x57590871b540) {
      %22 = "arith.ori"(%19, %21) : (i1, i1) -> i1 loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'linalg.yield'(0x575908713b00) {
      "linalg.yield"(%arg11) : (i32) -> () loc(unknown)

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'linalg.fill'(0x57590870bb80) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'scf.yield'(0x5759086839f0) {
      "scf.yield"() : () -> () loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'scf.if'(0x57590871b3f0) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'memref.subview'(0x57590869f460) {
      %23 = "memref.subview"(%11, %17) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0>, static_sizes = array<i64: -9223372036854775808>, static_strides = array<i64: 1>}> : (memref<1024xi32, strided<[1], offset: ?>>, index) -> memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'memref.subview'(0x57590869b2c0) {
      %24 = "memref.subview"(%18, %17) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0>, static_sizes = array<i64: -9223372036854775808>, static_strides = array<i64: 1>}> : (memref<1024xi32>, index) -> memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'memref.copy'(0x57590870b840) {
      "memref.copy"(%23, %24) : (memref<?xi32, strided<[1], offset: ?>>, memref<?xi32, strided<[1]>>) -> () loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'bufferization.to_tensor'(0x5759087101c0) {
      %25 = "bufferization.to_tensor"(%18) <{restrict, writable}> : (memref<1024xi32>) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
// *** IR Dump After Pattern Application ***
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::NRegions<2>::Impl<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::InferTypeOpAdaptor<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::RecursivelySpeculatableImplTrait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::SingleBlockImplicitTerminator<mlir::linalg::YieldOp>::Impl<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::DestinationStyleOpInterface::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::linalg::IndexingMapOpInterface::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::linalg::LinalgOp::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::ReifyRankedShapedTypeOpInterface::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::linalg::FillOpInterface::Trait<Empty>)
func.func @origin_index_select(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 {tt.divisibility = 16 : i32} loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg4: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg5: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg6: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg7: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg8: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg9: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)) {
  %0 = builtin.unrealized_conversion_cast %arg1 : !tt.ptr<i32> to memref<*xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
  %c0_i32 = arith.constant 0 : i32 loc(unknown)
  %c16 = arith.constant 16 : index loc(unknown)
  %c1971940 = arith.constant 1971940 : index loc(unknown)
  %c1024 = arith.constant 1024 : index loc(unknown)
  %c1024_i32 = arith.constant 1024 : i32 loc(unknown)
  %c49299_i32 = arith.constant 49299 : i32 loc(unknown)
  %1 = arith.muli %arg7, %c49299_i32 : i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))
  %2 = arith.index_cast %1 : i32 to index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
  scf.for %arg10 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {
    %3 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %4 = arith.addi %2, %3 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
    %reinterpret_cast = memref.reinterpret_cast %0 to offset: [%4], sizes: [1024], strides: [1] : memref<*xi32> to memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %5 = tts.make_tptr %arg1 to sizes: [1024], strides: [1], offsets: [%4], shape: [0], order: [] : <i32> to tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %6 = arith.addi %2, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %7 = arith.addi %6, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %8 = arith.minsi %7, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %9 = arith.maxsi %8, %4 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %10 = arith.subi %9, %4 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %alloc = memref.alloc() : memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %false = arith.constant false loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %c1024_0 = arith.constant 1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %11 = arith.cmpi slt, %10, %c1024_0 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %12 = arith.ori %false, %11 : i1 loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    scf.if %12 {
      linalg.fill ins(%c0_i32 : i32) outs(%alloc : memref<1024xi32>) loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    } loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview = memref.subview %reinterpret_cast[0] [%10] [1] : memref<1024xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview_1 = memref.subview %alloc[0] [%10] [1] : memref<1024xi32> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    memref.copy %subview, %subview_1 : memref<?xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %13 = bufferization.to_tensor %alloc restrict writable : memref<1024xi32> to tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %14 = "tts.load"(%5, %10, %c0_i32) <{operandSegmentSizes = array<i32: 1, 1, 1>, static_mask_dims = array<i64: -9223372036854775808>}> : (tensor<1024x!tt.ptr<i32>>, index, i32) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %15 = tts.make_gather_scatter_tptr %arg0 to sizes: [1024, 16] gather_scatter_dim: 0 gather_scatter_offset: %14, strides: [%c16, 1], offsets: [0, 0] : tensor<1024xi32> <f32> to !tt.ptr<tensor<1024x16xf32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
    %16 = arith.minsi %10, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %17 = "tts.load"(%15, %16) <{operandSegmentSizes = array<i32: 1, 1, 0>, static_mask_dims = array<i64: -9223372036854775808, 16>}> : (!tt.ptr<tensor<1024x16xf32>>, index) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %18 = arith.muli %4, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
    %19 = tts.make_tptr %arg2 to sizes: [1024, 16], strides: [%c16, 1], offsets: [%18, 0], shape: [0, 0], order: [] : <f32> to tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
    "tts.store"(%19, %17, %16) <{static_mask_dims = array<i64: -9223372036854775808, 16>}> : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xf32>, index) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  } loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
  return loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)


} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tts.make_gather_scatter_tptr'(0x5759086a4050) {
  %27 = "tts.make_gather_scatter_tptr"(%arg0, %26, %2) <{gather_scatter_dim = 0 : i32, operandSegmentSizes = array<i32: 1, 1, 1, 0>, sizes = array<i64: 1024, 16>, static_offsets = array<i64: 0, 0>, static_strides = array<i64: -9223372036854775808, 1>}> : (!tt.ptr<f32>, tensor<1024xi32>, index) -> !tt.ptr<tensor<1024x16xf32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'tts.make_gather_scatter_tptr -> ()' {
Trying to match "{anonymous}::MakeGatherScatterTensorPtrConverter"
    ** Replace : 'tts.make_gather_scatter_tptr'(0x5759086a4050)
"{anonymous}::MakeGatherScatterTensorPtrConverter" result 1
  } -> SUCCESS : pattern applied successfully
// *** IR Dump After Pattern Application ***
func.func @origin_index_select(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 {tt.divisibility = 16 : i32} loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg4: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg5: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg6: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg7: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg8: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg9: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)) {
  %0 = builtin.unrealized_conversion_cast %arg0 : !tt.ptr<f32> to memref<*xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
  %1 = builtin.unrealized_conversion_cast %arg1 : !tt.ptr<i32> to memref<*xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
  %c0_i32 = arith.constant 0 : i32 loc(unknown)
  %c16 = arith.constant 16 : index loc(unknown)
  %c1971940 = arith.constant 1971940 : index loc(unknown)
  %c1024 = arith.constant 1024 : index loc(unknown)
  %c1024_i32 = arith.constant 1024 : i32 loc(unknown)
  %c49299_i32 = arith.constant 49299 : i32 loc(unknown)
  %2 = arith.muli %arg7, %c49299_i32 : i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))
  %3 = arith.index_cast %2 : i32 to index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
  scf.for %arg10 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {
    %4 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %5 = arith.addi %3, %4 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
    %reinterpret_cast = memref.reinterpret_cast %1 to offset: [%5], sizes: [1024], strides: [1] : memref<*xi32> to memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %6 = tts.make_tptr %arg1 to sizes: [1024], strides: [1], offsets: [%5], shape: [0], order: [] : <i32> to tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %7 = arith.addi %3, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %8 = arith.addi %7, %4 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %9 = arith.minsi %8, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %10 = arith.maxsi %9, %5 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %11 = arith.subi %10, %5 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %alloc = memref.alloc() : memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %false = arith.constant false loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %c1024_0 = arith.constant 1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %12 = arith.cmpi slt, %11, %c1024_0 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %13 = arith.ori %false, %12 : i1 loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    scf.if %13 {
      linalg.fill ins(%c0_i32 : i32) outs(%alloc : memref<1024xi32>) loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    } loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview = memref.subview %reinterpret_cast[0] [%11] [1] : memref<1024xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview_1 = memref.subview %alloc[0] [%11] [1] : memref<1024xi32> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    memref.copy %subview, %subview_1 : memref<?xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %14 = bufferization.to_tensor %alloc restrict writable : memref<1024xi32> to tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %15 = "tts.load"(%6, %11, %c0_i32) <{operandSegmentSizes = array<i32: 1, 1, 1>, static_mask_dims = array<i64: -9223372036854775808>}> : (tensor<1024x!tt.ptr<i32>>, index, i32) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %16 = tts.make_gather_scatter_tptr %arg0 to sizes: [1024, 16] gather_scatter_dim: 0 gather_scatter_offset: %15, strides: [%c16, 1], offsets: [0, 0] : tensor<1024xi32> <f32> to !tt.ptr<tensor<1024x16xf32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
    %17 = arith.minsi %11, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %18 = "tts.load"(%16, %17) <{operandSegmentSizes = array<i32: 1, 1, 0>, static_mask_dims = array<i64: -9223372036854775808, 16>}> : (!tt.ptr<tensor<1024x16xf32>>, index) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %19 = arith.muli %5, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
    %20 = tts.make_tptr %arg2 to sizes: [1024, 16], strides: [%c16, 1], offsets: [%19, 0], shape: [0, 0], order: [] : <f32> to tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
    "tts.store"(%20, %18, %17) <{static_mask_dims = array<i64: -9223372036854775808, 16>}> : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xf32>, index) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  } loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
  return loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)


} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.minsi'(0x5759086a3ae0) {
  %29 = "arith.minsi"(%18, %5) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tts.load'(0x5759086a6030) {
  %30 = "tts.load"(%28, %29) <{operandSegmentSizes = array<i32: 1, 1, 0>, static_mask_dims = array<i64: -9223372036854775808, 16>}> : (!tt.ptr<tensor<1024x16xf32>>, index) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'tts.load -> ()' {
Trying to match "{anonymous}::LoadConverter"
    ** Insert  : 'arith.index_cast'(0x575908673eb0)
    ** Insert  : 'memref.alloc'(0x5759087212b0)
    ** Insert  : 'arith.constant'(0x575908721000)
    ** Insert  : 'arith.constant'(0x575908721070)
    ** Insert  : 'arith.constant'(0x5759087210e0)
    ** Insert  : 'arith.minsi'(0x57590867c100)
    ** Insert  : 'arith.constant'(0x57590871ba70)
    ** Insert Block into detached Region (nullptr parent op)'
    ** Insert  : 'scf.yield'(0x575908684a80)
    ** Insert  : 'scf.for'(0x5759087077f0)
    ** Insert  : 'bufferization.to_tensor'(0x57590871ade0)
    ** Replace : 'tts.load'(0x5759086a6030)
    ** Insert  : 'tensor.extract'(0x5759086a7410)
    ** Insert  : 'arith.constant'(0x57590871bb20)
    ** Insert  : 'arith.muli'(0x57590870fee0)
    ** Insert  : 'memref.reinterpret_cast'(0x57590870b3d0)
    ** Insert  : 'memref.subview'(0x575908716db0)
    ** Insert  : 'memref.subview'(0x575908716f10)
    ** Insert  : 'memref.copy'(0x575908717060)
"{anonymous}::LoadConverter" result 1

    //===-------------------------------------------===//
    Legalizing operation : 'arith.index_cast'(0x575908673eb0) {
      %30 = "arith.index_cast"(%27) : (tensor<1024xi32>) -> tensor<1024xindex> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'memref.alloc'(0x5759087212b0) {
      %31 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x575908721000) {
      %32 = "arith.constant"() <{value = 0 : index}> : () -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x575908721070) {
      %33 = "arith.constant"() <{value = 1024 : index}> : () -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x5759087210e0) {
      %34 = "arith.constant"() <{value = 1024 : index}> : () -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.minsi'(0x57590867c100) {
      %35 = "arith.minsi"(%29, %34) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x57590871ba70) {
      %36 = "arith.constant"() <{value = 1 : index}> : () -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'scf.yield'(0x575908684a80) {
      "scf.yield"() : () -> () loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'scf.for'(0x5759087077f0) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'bufferization.to_tensor'(0x57590871ade0) {
      %37 = "bufferization.to_tensor"(%31) <{restrict, writable}> : (memref<1024x16xf32>) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'tensor.extract'(0x5759086a7410) {
      %41 = "tensor.extract"(%30, %arg11) : (tensor<1024xindex>, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x57590871bb20) {
      %42 = "arith.constant"() <{value = 16 : index}> : () -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.muli'(0x57590870fee0) {
      %43 = "arith.muli"(%41, %42) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'memref.reinterpret_cast'(0x57590870b3d0) {
      %44 = "memref.reinterpret_cast"(%0, %43) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: 16, 1>}> : (memref<*xf32>, index) -> memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'memref.subview'(0x575908716db0) {
      %45 = "memref.subview"(%44, %32, %32, %36, %36) <{operandSegmentSizes = array<i32: 1, 2, 0, 2>, static_offsets = array<i64: -9223372036854775808, -9223372036854775808>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: -9223372036854775808, -9223372036854775808>}> : (memref<1x16xf32, strided<[16, 1], offset: ?>>, index, index, index, index) -> memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'memref.subview'(0x575908716f10) {
      %46 = "memref.subview"(%31, %arg11, %32, %36, %36) <{operandSegmentSizes = array<i32: 1, 2, 0, 2>, static_offsets = array<i64: -9223372036854775808, -9223372036854775808>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: -9223372036854775808, -9223372036854775808>}> : (memref<1024x16xf32>, index, index, index, index) -> memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'memref.copy'(0x575908717060) {
      "memref.copy"(%45, %46) : (memref<1x16xf32, strided<[?, ?], offset: ?>>, memref<1x16xf32, strided<[?, ?], offset: ?>>) -> () loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
// *** IR Dump After Pattern Application ***
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::AtLeastNOperands<1>::Impl<Empty>)
func.func @origin_index_select(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 {tt.divisibility = 16 : i32} loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg4: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg5: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg6: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg7: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg8: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg9: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)) {
  %0 = builtin.unrealized_conversion_cast %arg0 : !tt.ptr<f32> to memref<*xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
  %1 = builtin.unrealized_conversion_cast %arg1 : !tt.ptr<i32> to memref<*xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
  %c0_i32 = arith.constant 0 : i32 loc(unknown)
  %c16 = arith.constant 16 : index loc(unknown)
  %c1971940 = arith.constant 1971940 : index loc(unknown)
  %c1024 = arith.constant 1024 : index loc(unknown)
  %c1024_i32 = arith.constant 1024 : i32 loc(unknown)
  %c49299_i32 = arith.constant 49299 : i32 loc(unknown)
  %2 = arith.muli %arg7, %c49299_i32 : i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))
  %3 = arith.index_cast %2 : i32 to index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
  scf.for %arg10 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {
    %4 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %5 = arith.addi %3, %4 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
    %reinterpret_cast = memref.reinterpret_cast %1 to offset: [%5], sizes: [1024], strides: [1] : memref<*xi32> to memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %6 = tts.make_tptr %arg1 to sizes: [1024], strides: [1], offsets: [%5], shape: [0], order: [] : <i32> to tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %7 = arith.addi %3, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %8 = arith.addi %7, %4 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %9 = arith.minsi %8, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %10 = arith.maxsi %9, %5 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %11 = arith.subi %10, %5 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %alloc = memref.alloc() : memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %false = arith.constant false loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %c1024_0 = arith.constant 1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %12 = arith.cmpi slt, %11, %c1024_0 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %13 = arith.ori %false, %12 : i1 loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    scf.if %13 {
      linalg.fill ins(%c0_i32 : i32) outs(%alloc : memref<1024xi32>) loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    } loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview = memref.subview %reinterpret_cast[0] [%11] [1] : memref<1024xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview_1 = memref.subview %alloc[0] [%11] [1] : memref<1024xi32> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    memref.copy %subview, %subview_1 : memref<?xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %14 = bufferization.to_tensor %alloc restrict writable : memref<1024xi32> to tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %15 = "tts.load"(%6, %11, %c0_i32) <{operandSegmentSizes = array<i32: 1, 1, 1>, static_mask_dims = array<i64: -9223372036854775808>}> : (tensor<1024x!tt.ptr<i32>>, index, i32) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %16 = tts.make_gather_scatter_tptr %arg0 to sizes: [1024, 16] gather_scatter_dim: 0 gather_scatter_offset: %15, strides: [%c16, 1], offsets: [0, 0] : tensor<1024xi32> <f32> to !tt.ptr<tensor<1024x16xf32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
    %17 = arith.minsi %11, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %18 = arith.index_cast %15 : tensor<1024xi32> to tensor<1024xindex> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %alloc_2 = memref.alloc() : memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %c0 = arith.constant 0 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %c1024_3 = arith.constant 1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %c1024_4 = arith.constant 1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %19 = arith.minsi %17, %c1024_4 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %c1 = arith.constant 1 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    scf.for %arg11 = %c0 to %19 step %c1 {
      %extracted = tensor.extract %18[%arg11] : tensor<1024xindex> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %c16_5 = arith.constant 16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %24 = arith.muli %extracted, %c16_5 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %reinterpret_cast_6 = memref.reinterpret_cast %0 to offset: [%24], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %subview_7 = memref.subview %reinterpret_cast_6[%c0, %c0] [1, 16] [%c1, %c1] : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %subview_8 = memref.subview %alloc_2[%arg11, %c0] [1, 16] [%c1, %c1] : memref<1024x16xf32> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      memref.copy %subview_7, %subview_8 : memref<1x16xf32, strided<[?, ?], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    } loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %20 = bufferization.to_tensor %alloc_2 restrict writable : memref<1024x16xf32> to tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %21 = "tts.load"(%16, %17) <{operandSegmentSizes = array<i32: 1, 1, 0>, static_mask_dims = array<i64: -9223372036854775808, 16>}> : (!tt.ptr<tensor<1024x16xf32>>, index) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %22 = arith.muli %5, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
    %23 = tts.make_tptr %arg2 to sizes: [1024, 16], strides: [%c16, 1], offsets: [%22, 0], shape: [0, 0], order: [] : <f32> to tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
    "tts.store"(%23, %21, %17) <{static_mask_dims = array<i64: -9223372036854775808, 16>}> : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xf32>, index) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  } loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
  return loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)


} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x5759086a5190) {
  %39 = "arith.muli"(%11, %3) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tts.make_tptr'(0x5759086a7210) {
  %40 = "tts.make_tptr"(%arg2, %3, %39) <{operandSegmentSizes = array<i32: 1, 1, 1, 0>, order = array<i32>, sizes = array<i64: 1024, 16>, static_offsets = array<i64: -9223372036854775808, 0>, static_shape = array<i64: 0, 0>, static_strides = array<i64: -9223372036854775808, 1>}> : (!tt.ptr<f32>, index, index) -> tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'tts.make_tptr -> ()' {
Trying to match "{anonymous}::MakeTensorPtrConverter"
    ** Insert  : 'memref.reinterpret_cast'(0x575908715ea0)
    ** Replace : 'tts.make_tptr'(0x5759086a7210)
"{anonymous}::MakeTensorPtrConverter" result 1

    //===-------------------------------------------===//
    Legalizing operation : 'memref.reinterpret_cast'(0x575908715ea0) {
      %41 = "memref.reinterpret_cast"(%0, %40) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1024, 16>, static_strides = array<i64: 16, 1>}> : (memref<*xf32>, index) -> memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
// *** IR Dump After Pattern Application ***
func.func @origin_index_select(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 {tt.divisibility = 16 : i32} loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg4: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg5: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg6: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg7: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg8: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg9: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)) {
  %0 = builtin.unrealized_conversion_cast %arg2 : !tt.ptr<f32> to memref<*xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
  %1 = builtin.unrealized_conversion_cast %arg0 : !tt.ptr<f32> to memref<*xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
  %2 = builtin.unrealized_conversion_cast %arg1 : !tt.ptr<i32> to memref<*xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
  %c0_i32 = arith.constant 0 : i32 loc(unknown)
  %c16 = arith.constant 16 : index loc(unknown)
  %c1971940 = arith.constant 1971940 : index loc(unknown)
  %c1024 = arith.constant 1024 : index loc(unknown)
  %c1024_i32 = arith.constant 1024 : i32 loc(unknown)
  %c49299_i32 = arith.constant 49299 : i32 loc(unknown)
  %3 = arith.muli %arg7, %c49299_i32 : i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))
  %4 = arith.index_cast %3 : i32 to index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
  scf.for %arg10 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {
    %5 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %6 = arith.addi %4, %5 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
    %reinterpret_cast = memref.reinterpret_cast %2 to offset: [%6], sizes: [1024], strides: [1] : memref<*xi32> to memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %7 = tts.make_tptr %arg1 to sizes: [1024], strides: [1], offsets: [%6], shape: [0], order: [] : <i32> to tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %8 = arith.addi %4, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %9 = arith.addi %8, %5 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %10 = arith.minsi %9, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %11 = arith.maxsi %10, %6 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %12 = arith.subi %11, %6 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %alloc = memref.alloc() : memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %false = arith.constant false loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %c1024_0 = arith.constant 1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %13 = arith.cmpi slt, %12, %c1024_0 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %14 = arith.ori %false, %13 : i1 loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    scf.if %14 {
      linalg.fill ins(%c0_i32 : i32) outs(%alloc : memref<1024xi32>) loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    } loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview = memref.subview %reinterpret_cast[0] [%12] [1] : memref<1024xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview_1 = memref.subview %alloc[0] [%12] [1] : memref<1024xi32> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    memref.copy %subview, %subview_1 : memref<?xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %15 = bufferization.to_tensor %alloc restrict writable : memref<1024xi32> to tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %16 = "tts.load"(%7, %12, %c0_i32) <{operandSegmentSizes = array<i32: 1, 1, 1>, static_mask_dims = array<i64: -9223372036854775808>}> : (tensor<1024x!tt.ptr<i32>>, index, i32) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %17 = tts.make_gather_scatter_tptr %arg0 to sizes: [1024, 16] gather_scatter_dim: 0 gather_scatter_offset: %16, strides: [%c16, 1], offsets: [0, 0] : tensor<1024xi32> <f32> to !tt.ptr<tensor<1024x16xf32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
    %18 = arith.minsi %12, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %19 = arith.index_cast %16 : tensor<1024xi32> to tensor<1024xindex> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %alloc_2 = memref.alloc() : memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %c0 = arith.constant 0 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %c1024_3 = arith.constant 1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %c1024_4 = arith.constant 1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %20 = arith.minsi %18, %c1024_4 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %c1 = arith.constant 1 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    scf.for %arg11 = %c0 to %20 step %c1 {
      %extracted = tensor.extract %19[%arg11] : tensor<1024xindex> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %c16_6 = arith.constant 16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %25 = arith.muli %extracted, %c16_6 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %reinterpret_cast_7 = memref.reinterpret_cast %1 to offset: [%25], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %subview_8 = memref.subview %reinterpret_cast_7[%c0, %c0] [1, 16] [%c1, %c1] : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %subview_9 = memref.subview %alloc_2[%arg11, %c0] [1, 16] [%c1, %c1] : memref<1024x16xf32> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      memref.copy %subview_8, %subview_9 : memref<1x16xf32, strided<[?, ?], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    } loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %21 = bufferization.to_tensor %alloc_2 restrict writable : memref<1024x16xf32> to tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %22 = "tts.load"(%17, %18) <{operandSegmentSizes = array<i32: 1, 1, 0>, static_mask_dims = array<i64: -9223372036854775808, 16>}> : (!tt.ptr<tensor<1024x16xf32>>, index) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %23 = arith.muli %6, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
    %reinterpret_cast_5 = memref.reinterpret_cast %0 to offset: [%23], sizes: [1024, 16], strides: [16, 1] : memref<*xf32> to memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
    %24 = tts.make_tptr %arg2 to sizes: [1024, 16], strides: [%c16, 1], offsets: [%23, 0], shape: [0, 0], order: [] : <f32> to tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
    "tts.store"(%24, %22, %18) <{static_mask_dims = array<i64: -9223372036854775808, 16>}> : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xf32>, index) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  } loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
  return loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)


} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tts.store'(0x57590870f800) {
  "tts.store"(%42, %39, %30) <{static_mask_dims = array<i64: -9223372036854775808, 16>}> : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xf32>, index) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'tts.store -> ()' {
Trying to match "{anonymous}::StoreConverter"
ImplicitTypeIDRegistry::lookupOrInsert(mlir::tensor::detail::ExtractSliceOpGenericAdaptorBase::Properties)
    ** Insert  : 'tensor.extract_slice'(0x575908715f70)
    ** Insert  : 'memref.subview'(0x575908716040)
    ** Insert  : 'bufferization.materialize_in_destination'(0x575908711c30)
    ** Erase   : 'tts.store'(0x57590870f800)
"{anonymous}::StoreConverter" result 1

    //===-------------------------------------------===//
    Legalizing operation : 'tensor.extract_slice'(0x575908715f70) {
      %43 = "tensor.extract_slice"(%39, %30) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0, 0>, static_sizes = array<i64: -9223372036854775808, 16>, static_strides = array<i64: 1, 1>}> : (tensor<1024x16xf32>, index) -> tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'memref.subview'(0x575908716040) {
      %44 = "memref.subview"(%41, %30) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0, 0>, static_sizes = array<i64: -9223372036854775808, 16>, static_strides = array<i64: 1, 1>}> : (memref<1024x16xf32, strided<[16, 1], offset: ?>>, index) -> memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'bufferization.materialize_in_destination'(0x575908711c30) {
      "bufferization.materialize_in_destination"(%43, %44) <{writable}> : (tensor<?x16xf32>, memref<?x16xf32, strided<[16, 1], offset: ?>>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
// *** IR Dump After Pattern Application ***
func.func @origin_index_select(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 {tt.divisibility = 16 : i32} loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg4: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg5: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg6: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg7: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg8: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg9: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)) {
  %0 = builtin.unrealized_conversion_cast %arg2 : !tt.ptr<f32> to memref<*xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
  %1 = builtin.unrealized_conversion_cast %arg0 : !tt.ptr<f32> to memref<*xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
  %2 = builtin.unrealized_conversion_cast %arg1 : !tt.ptr<i32> to memref<*xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
  %c0_i32 = arith.constant 0 : i32 loc(unknown)
  %c16 = arith.constant 16 : index loc(unknown)
  %c1971940 = arith.constant 1971940 : index loc(unknown)
  %c1024 = arith.constant 1024 : index loc(unknown)
  %c1024_i32 = arith.constant 1024 : i32 loc(unknown)
  %c49299_i32 = arith.constant 49299 : i32 loc(unknown)
  %3 = arith.muli %arg7, %c49299_i32 : i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))
  %4 = arith.index_cast %3 : i32 to index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
  scf.for %arg10 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {
    %5 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %6 = arith.addi %4, %5 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
    %reinterpret_cast = memref.reinterpret_cast %2 to offset: [%6], sizes: [1024], strides: [1] : memref<*xi32> to memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %7 = tts.make_tptr %arg1 to sizes: [1024], strides: [1], offsets: [%6], shape: [0], order: [] : <i32> to tensor<1024x!tt.ptr<i32>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %8 = arith.addi %4, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %9 = arith.addi %8, %5 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %10 = arith.minsi %9, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %11 = arith.maxsi %10, %6 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %12 = arith.subi %11, %6 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %alloc = memref.alloc() : memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %false = arith.constant false loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %c1024_0 = arith.constant 1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %13 = arith.cmpi slt, %12, %c1024_0 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %14 = arith.ori %false, %13 : i1 loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    scf.if %14 {
      linalg.fill ins(%c0_i32 : i32) outs(%alloc : memref<1024xi32>) loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    } loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview = memref.subview %reinterpret_cast[0] [%12] [1] : memref<1024xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview_1 = memref.subview %alloc[0] [%12] [1] : memref<1024xi32> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    memref.copy %subview, %subview_1 : memref<?xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %15 = bufferization.to_tensor %alloc restrict writable : memref<1024xi32> to tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %16 = "tts.load"(%7, %12, %c0_i32) <{operandSegmentSizes = array<i32: 1, 1, 1>, static_mask_dims = array<i64: -9223372036854775808>}> : (tensor<1024x!tt.ptr<i32>>, index, i32) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %17 = tts.make_gather_scatter_tptr %arg0 to sizes: [1024, 16] gather_scatter_dim: 0 gather_scatter_offset: %16, strides: [%c16, 1], offsets: [0, 0] : tensor<1024xi32> <f32> to !tt.ptr<tensor<1024x16xf32>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
    %18 = arith.minsi %12, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %19 = arith.index_cast %16 : tensor<1024xi32> to tensor<1024xindex> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %alloc_2 = memref.alloc() : memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %c0 = arith.constant 0 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %c1024_3 = arith.constant 1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %c1024_4 = arith.constant 1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %20 = arith.minsi %18, %c1024_4 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %c1 = arith.constant 1 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    scf.for %arg11 = %c0 to %20 step %c1 {
      %extracted = tensor.extract %19[%arg11] : tensor<1024xindex> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %c16_7 = arith.constant 16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %25 = arith.muli %extracted, %c16_7 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %reinterpret_cast_8 = memref.reinterpret_cast %1 to offset: [%25], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %subview_9 = memref.subview %reinterpret_cast_8[%c0, %c0] [1, 16] [%c1, %c1] : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %subview_10 = memref.subview %alloc_2[%arg11, %c0] [1, 16] [%c1, %c1] : memref<1024x16xf32> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      memref.copy %subview_9, %subview_10 : memref<1x16xf32, strided<[?, ?], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    } loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %21 = bufferization.to_tensor %alloc_2 restrict writable : memref<1024x16xf32> to tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %22 = "tts.load"(%17, %18) <{operandSegmentSizes = array<i32: 1, 1, 0>, static_mask_dims = array<i64: -9223372036854775808, 16>}> : (!tt.ptr<tensor<1024x16xf32>>, index) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %23 = arith.muli %6, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
    %reinterpret_cast_5 = memref.reinterpret_cast %0 to offset: [%23], sizes: [1024, 16], strides: [16, 1] : memref<*xf32> to memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
    %24 = tts.make_tptr %arg2 to sizes: [1024, 16], strides: [%c16, 1], offsets: [%23, 0], shape: [0, 0], order: [] : <f32> to tensor<1024x16x!tt.ptr<f32>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
    %extracted_slice = tensor.extract_slice %22[0, 0] [%18, 16] [1, 1] : tensor<1024x16xf32> to tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
    %subview_6 = memref.subview %reinterpret_cast_5[0, 0] [%18, 16] [1, 1] : memref<1024x16xf32, strided<[16, 1], offset: ?>> to memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
    bufferization.materialize_in_destination %extracted_slice in writable %subview_6 : (tensor<?x16xf32>, memref<?x16xf32, strided<[16, 1], offset: ?>>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
    "tts.store"(%24, %22, %18) <{static_mask_dims = array<i64: -9223372036854775808, 16>}> : (tensor<1024x16x!tt.ptr<f32>>, tensor<1024x16xf32>, index) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  } loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
  return loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)


} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x5759086ad740) {
  "scf.yield"() : () -> () loc("input.mlir":29:5)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.return'(0x5759086ab810) {
  "func.return"() : () -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OffsetSizeAndStrideOpInterface::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::ViewLikeOpInterface::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::CopyOpInterface::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::SameOperandsElementType<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::SameOperandsShape<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::OneTypedResult<mlir::bufferization::TensorLikeType>::Impl<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::bufferization::BufferizableOpInterface::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::OneTypedResult<mlir::RankedTensorType>::Impl<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::SubsetOpInterface::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::SubsetInsertionOpInterface::Trait<Empty>)

//===-------------------------------------------===//
Legalizing operation : 'builtin.module'(0x57590869a350) {
  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.func'(0x575908715540) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'builtin.unrealized_conversion_cast'(0x57590871b4b0) {
  %0 = "builtin.unrealized_conversion_cast"(%arg2) : (!tt.ptr<f32>) -> memref<*xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'builtin.unrealized_conversion_cast'(0x5759086a50a0) {
  %1 = "builtin.unrealized_conversion_cast"(%arg0) : (!tt.ptr<f32>) -> memref<*xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'builtin.unrealized_conversion_cast'(0x575908707ba0) {
  %2 = "builtin.unrealized_conversion_cast"(%arg1) : (!tt.ptr<i32>) -> memref<*xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590869c880) {
  %3 = "arith.constant"() <{value = 0 : i32}> : () -> i32 loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590869f3f0) {
  %4 = "arith.constant"() <{value = 16 : index}> : () -> index loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x575908710040) {
  %5 = "arith.constant"() <{value = 1971940 : index}> : () -> index loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x575908707790) {
  %6 = "arith.constant"() <{value = 1024 : index}> : () -> index loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5759086a4fb0) {
  %7 = "arith.constant"() <{value = 1024 : i32}> : () -> i32 loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5759086a90a0) {
  %8 = "arith.constant"() <{value = 49299 : i32}> : () -> i32 loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x5759086a93b0) {
  %9 = "arith.muli"(%arg7, %8) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x57590869b6d0) {
  %10 = "arith.index_cast"(%9) : (i32) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.for'(0x57590869db90) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x5759086a92c0) {
  %11 = "arith.index_cast"(%arg10) : (i32) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x5759086a7f50) {
  %12 = "arith.addi"(%10, %11) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.reinterpret_cast'(0x5759086a7d10) {
  %13 = "memref.reinterpret_cast"(%2, %12) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1024>, static_strides = array<i64: 1>}> : (memref<*xi32>, index) -> memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x57590869e5a0) {
  %14 = "arith.addi"(%10, %6) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x575908717a70) {
  %15 = "arith.addi"(%14, %11) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.minsi'(0x5759086a5280) {
  %16 = "arith.minsi"(%15, %5) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.maxsi'(0x57590869fe20) {
  %17 = "arith.maxsi"(%16, %12) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.subi'(0x57590871b390) {
  %18 = "arith.subi"(%17, %12) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.alloc'(0x575908709470) {
  %19 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x575908707c30) {
  %20 = "arith.constant"() <{value = false}> : () -> i1 loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x575908707cd0) {
  %21 = "arith.constant"() <{value = 1024 : index}> : () -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x57590871b5f0) {
  %22 = "arith.cmpi"(%18, %21) <{predicate = 2 : i64}> : (index, index) -> i1 loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.ori'(0x57590871b540) {
  %23 = "arith.ori"(%20, %22) : (i1, i1) -> i1 loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x57590871b3f0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'linalg.fill'(0x57590870bb80) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'linalg.yield'(0x575908713b00) {
  "linalg.yield"(%arg12) : (i32) -> () loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x5759086839f0) {
  "scf.yield"() : () -> () loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.subview'(0x57590869f460) {
  %24 = "memref.subview"(%13, %18) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0>, static_sizes = array<i64: -9223372036854775808>, static_strides = array<i64: 1>}> : (memref<1024xi32, strided<[1], offset: ?>>, index) -> memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.subview'(0x57590869b2c0) {
  %25 = "memref.subview"(%19, %18) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0>, static_sizes = array<i64: -9223372036854775808>, static_strides = array<i64: 1>}> : (memref<1024xi32>, index) -> memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.copy'(0x57590870b840) {
  "memref.copy"(%24, %25) : (memref<?xi32, strided<[1], offset: ?>>, memref<?xi32, strided<[1]>>) -> () loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'bufferization.to_tensor'(0x5759087101c0) {
  %26 = "bufferization.to_tensor"(%19) <{restrict, writable}> : (memref<1024xi32>) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.minsi'(0x5759086a3ae0) {
  %27 = "arith.minsi"(%18, %6) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x575908673eb0) {
  %28 = "arith.index_cast"(%26) : (tensor<1024xi32>) -> tensor<1024xindex> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.alloc'(0x5759087212b0) {
  %29 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x575908721000) {
  %30 = "arith.constant"() <{value = 0 : index}> : () -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x575908721070) {
  %31 = "arith.constant"() <{value = 1024 : index}> : () -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5759087210e0) {
  %32 = "arith.constant"() <{value = 1024 : index}> : () -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.minsi'(0x57590867c100) {
  %33 = "arith.minsi"(%27, %32) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590871ba70) {
  %34 = "arith.constant"() <{value = 1 : index}> : () -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.for'(0x5759087077f0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tensor.extract'(0x5759086a7410) {
  %40 = "tensor.extract"(%28, %arg11) : (tensor<1024xindex>, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590871bb20) {
  %41 = "arith.constant"() <{value = 16 : index}> : () -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x57590870fee0) {
  %42 = "arith.muli"(%40, %41) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.reinterpret_cast'(0x57590870b3d0) {
  %43 = "memref.reinterpret_cast"(%1, %42) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: 16, 1>}> : (memref<*xf32>, index) -> memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.subview'(0x575908716db0) {
  %44 = "memref.subview"(%43, %30, %30, %34, %34) <{operandSegmentSizes = array<i32: 1, 2, 0, 2>, static_offsets = array<i64: -9223372036854775808, -9223372036854775808>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: -9223372036854775808, -9223372036854775808>}> : (memref<1x16xf32, strided<[16, 1], offset: ?>>, index, index, index, index) -> memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.subview'(0x575908716f10) {
  %45 = "memref.subview"(%29, %arg11, %30, %34, %34) <{operandSegmentSizes = array<i32: 1, 2, 0, 2>, static_offsets = array<i64: -9223372036854775808, -9223372036854775808>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: -9223372036854775808, -9223372036854775808>}> : (memref<1024x16xf32>, index, index, index, index) -> memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.copy'(0x575908717060) {
  "memref.copy"(%44, %45) : (memref<1x16xf32, strided<[?, ?], offset: ?>>, memref<1x16xf32, strided<[?, ?], offset: ?>>) -> () loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x575908684a80) {
  "scf.yield"() : () -> () loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'bufferization.to_tensor'(0x57590871ade0) {
  %35 = "bufferization.to_tensor"(%29) <{restrict, writable}> : (memref<1024x16xf32>) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x5759086a5190) {
  %36 = "arith.muli"(%12, %4) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.reinterpret_cast'(0x575908715ea0) {
  %37 = "memref.reinterpret_cast"(%0, %36) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1024, 16>, static_strides = array<i64: 16, 1>}> : (memref<*xf32>, index) -> memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tensor.extract_slice'(0x575908715f70) {
  %38 = "tensor.extract_slice"(%35, %27) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0, 0>, static_sizes = array<i64: -9223372036854775808, 16>, static_strides = array<i64: 1, 1>}> : (tensor<1024x16xf32>, index) -> tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.subview'(0x575908716040) {
  %39 = "memref.subview"(%37, %27) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0, 0>, static_sizes = array<i64: -9223372036854775808, 16>, static_strides = array<i64: 1, 1>}> : (memref<1024x16xf32, strided<[16, 1], offset: ?>>, index) -> memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'bufferization.materialize_in_destination'(0x575908711c30) {
  "bufferization.materialize_in_destination"(%38, %39) <{writable}> : (tensor<?x16xf32>, memref<?x16xf32, strided<[16, 1], offset: ?>>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x5759086ad740) {
  "scf.yield"() : () -> () loc("input.mlir":29:5)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.return'(0x5759086ab810) {
  "func.return"() : () -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'builtin.module'(0x57590869a350) {
  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.func'(0x575908715540) {
  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'func.func -> ()' {
Trying to match "(anonymous namespace)::FunctionOpInterfaceSignatureConversion"
    ** Insert Block into : 'func.func'(0x575908715540)
"(anonymous namespace)::FunctionOpInterfaceSignatureConversion" result 1

    //===-------------------------------------------===//
    Legalizing operation : 'func.func'(0x575908715540) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
// *** IR Dump After Pattern Application ***
operation's operand is unlinked
mlir-asm-printer: 'builtin.module' failed to verify and will be printed in generic form
"builtin.module"() ({
  "func.func"() <{arg_attrs = [{tt.divisibility = 16 : i32}, {tt.divisibility = 16 : i32}, {tt.divisibility = 16 : i32}, {tt.divisibility = 16 : i32}, {}, {}, {}, {}, {}, {}], function_type = (memref<*xf32>, memref<*xi32>, memref<*xf32>, i32, i32, i32, i32, i32, i32, i32) -> (), sym_name = "origin_index_select"}> ({
  ^bb0(%arg0: memref<*xf32> loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: memref<*xi32> loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: memref<*xf32> loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg4: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg5: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg6: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg7: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg8: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg9: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)):
    %0 = "builtin.unrealized_conversion_cast"(<<UNKNOWN SSA VALUE>>) : (!tt.ptr<f32>) -> memref<*xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
    %1 = "builtin.unrealized_conversion_cast"(<<UNKNOWN SSA VALUE>>) : (!tt.ptr<f32>) -> memref<*xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
    %2 = "builtin.unrealized_conversion_cast"(<<UNKNOWN SSA VALUE>>) : (!tt.ptr<i32>) -> memref<*xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %3 = "arith.constant"() <{value = 0 : i32}> : () -> i32 loc(unknown)
    %4 = "arith.constant"() <{value = 16 : index}> : () -> index loc(unknown)
    %5 = "arith.constant"() <{value = 1971940 : index}> : () -> index loc(unknown)
    %6 = "arith.constant"() <{value = 1024 : index}> : () -> index loc(unknown)
    %7 = "arith.constant"() <{value = 1024 : i32}> : () -> i32 loc(unknown)
    %8 = "arith.constant"() <{value = 49299 : i32}> : () -> i32 loc(unknown)
    %9 = "arith.muli"(<<UNKNOWN SSA VALUE>>, %8) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))
    %10 = "arith.index_cast"(%9) : (i32) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
    "scf.for"(%3, %8, %7) ({
    ^bb0(%arg10: i32 loc("input.mlir":29:13)):
      %11 = "arith.index_cast"(%arg10) : (i32) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
      %12 = "arith.addi"(%10, %11) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
      %13 = "memref.reinterpret_cast"(%2, %12) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1024>, static_strides = array<i64: 1>}> : (memref<*xi32>, index) -> memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
      %14 = "arith.addi"(%10, %6) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
      %15 = "arith.addi"(%14, %11) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
      %16 = "arith.minsi"(%15, %5) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
      %17 = "arith.maxsi"(%16, %12) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
      %18 = "arith.subi"(%17, %12) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
      %19 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
      %20 = "arith.constant"() <{value = false}> : () -> i1 loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
      %21 = "arith.constant"() <{value = 1024 : index}> : () -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
      %22 = "arith.cmpi"(%18, %21) <{predicate = 2 : i64}> : (index, index) -> i1 loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
      %23 = "arith.ori"(%20, %22) : (i1, i1) -> i1 loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
      "scf.if"(%23) ({
        "linalg.fill"(%3, %19) <{operandSegmentSizes = array<i32: 1, 1>}> ({
        ^bb0(%arg12: i32 loc(unknown), %arg13: i32 loc(unknown)):
          "linalg.yield"(%arg12) : (i32) -> () loc(unknown)
        }) : (i32, memref<1024xi32>) -> () loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
        "scf.yield"() : () -> () loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
      }, {
      }) : (i1) -> () loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
      %24 = "memref.subview"(%13, %18) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0>, static_sizes = array<i64: -9223372036854775808>, static_strides = array<i64: 1>}> : (memref<1024xi32, strided<[1], offset: ?>>, index) -> memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
      %25 = "memref.subview"(%19, %18) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0>, static_sizes = array<i64: -9223372036854775808>, static_strides = array<i64: 1>}> : (memref<1024xi32>, index) -> memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
      "memref.copy"(%24, %25) : (memref<?xi32, strided<[1], offset: ?>>, memref<?xi32, strided<[1]>>) -> () loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
      %26 = "bufferization.to_tensor"(%19) <{restrict, writable}> : (memref<1024xi32>) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
      %27 = "arith.minsi"(%18, %6) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %28 = "arith.index_cast"(%26) : (tensor<1024xi32>) -> tensor<1024xindex> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %29 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %30 = "arith.constant"() <{value = 0 : index}> : () -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %31 = "arith.constant"() <{value = 1024 : index}> : () -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %32 = "arith.constant"() <{value = 1024 : index}> : () -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %33 = "arith.minsi"(%27, %32) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %34 = "arith.constant"() <{value = 1 : index}> : () -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      "scf.for"(%30, %33, %34) ({
      ^bb0(%arg11: index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))):
        %40 = "tensor.extract"(%28, %arg11) : (tensor<1024xindex>, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
        %41 = "arith.constant"() <{value = 16 : index}> : () -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
        %42 = "arith.muli"(%40, %41) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
        %43 = "memref.reinterpret_cast"(%1, %42) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: 16, 1>}> : (memref<*xf32>, index) -> memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
        %44 = "memref.subview"(%43, %30, %30, %34, %34) <{operandSegmentSizes = array<i32: 1, 2, 0, 2>, static_offsets = array<i64: -9223372036854775808, -9223372036854775808>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: -9223372036854775808, -9223372036854775808>}> : (memref<1x16xf32, strided<[16, 1], offset: ?>>, index, index, index, index) -> memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
        %45 = "memref.subview"(%29, %arg11, %30, %34, %34) <{operandSegmentSizes = array<i32: 1, 2, 0, 2>, static_offsets = array<i64: -9223372036854775808, -9223372036854775808>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: -9223372036854775808, -9223372036854775808>}> : (memref<1024x16xf32>, index, index, index, index) -> memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
        "memref.copy"(%44, %45) : (memref<1x16xf32, strided<[?, ?], offset: ?>>, memref<1x16xf32, strided<[?, ?], offset: ?>>) -> () loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
        "scf.yield"() : () -> () loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      }) : (index, index, index) -> () loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %35 = "bufferization.to_tensor"(%29) <{restrict, writable}> : (memref<1024x16xf32>) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %36 = "arith.muli"(%12, %4) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
      %37 = "memref.reinterpret_cast"(%0, %36) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1024, 16>, static_strides = array<i64: 16, 1>}> : (memref<*xf32>, index) -> memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
      %38 = "tensor.extract_slice"(%35, %27) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0, 0>, static_sizes = array<i64: -9223372036854775808, 16>, static_strides = array<i64: 1, 1>}> : (tensor<1024x16xf32>, index) -> tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
      %39 = "memref.subview"(%37, %27) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0, 0>, static_sizes = array<i64: -9223372036854775808, 16>, static_strides = array<i64: 1, 1>}> : (memref<1024x16xf32, strided<[16, 1], offset: ?>>, index) -> memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
      "bufferization.materialize_in_destination"(%38, %39) <{writable}> : (tensor<?x16xf32>, memref<?x16xf32, strided<[16, 1], offset: ?>>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
      "scf.yield"() : () -> () loc("input.mlir":29:5)
    }) : (i32, i32, i32) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
    "func.return"() : () -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
  }) : () -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
}) : () -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)


} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'builtin.unrealized_conversion_cast'(0x57590871b4b0) {
  %0 = "builtin.unrealized_conversion_cast"(<<UNKNOWN SSA VALUE>>) : (!tt.ptr<f32>) -> memref<*xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'builtin.unrealized_conversion_cast'(0x5759086a50a0) {
  %1 = "builtin.unrealized_conversion_cast"(<<UNKNOWN SSA VALUE>>) : (!tt.ptr<f32>) -> memref<*xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'builtin.unrealized_conversion_cast'(0x575908707ba0) {
  %2 = "builtin.unrealized_conversion_cast"(<<UNKNOWN SSA VALUE>>) : (!tt.ptr<i32>) -> memref<*xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590869c880) {
  %3 = "arith.constant"() <{value = 0 : i32}> : () -> i32 loc(unknown)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590869f3f0) {
  %4 = "arith.constant"() <{value = 16 : index}> : () -> index loc(unknown)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x575908710040) {
  %5 = "arith.constant"() <{value = 1971940 : index}> : () -> index loc(unknown)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x575908707790) {
  %6 = "arith.constant"() <{value = 1024 : index}> : () -> index loc(unknown)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5759086a4fb0) {
  %7 = "arith.constant"() <{value = 1024 : i32}> : () -> i32 loc(unknown)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5759086a90a0) {
  %8 = "arith.constant"() <{value = 49299 : i32}> : () -> i32 loc(unknown)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x5759086a93b0) {
  %9 = "arith.muli"(<<UNKNOWN SSA VALUE>>, %8) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x57590869b6d0) {
  %10 = "arith.index_cast"(%9) : (i32) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.for'(0x57590869db90) {
  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x5759086a92c0) {
  %11 = "arith.index_cast"(%arg10) : (i32) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x5759086a7f50) {
  %12 = "arith.addi"(%10, %11) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.reinterpret_cast'(0x5759086a7d10) {
  %13 = "memref.reinterpret_cast"(%2, %12) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1024>, static_strides = array<i64: 1>}> : (memref<*xi32>, index) -> memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x57590869e5a0) {
  %14 = "arith.addi"(%10, %6) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x575908717a70) {
  %15 = "arith.addi"(%14, %11) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.minsi'(0x5759086a5280) {
  %16 = "arith.minsi"(%15, %5) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.maxsi'(0x57590869fe20) {
  %17 = "arith.maxsi"(%16, %12) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.subi'(0x57590871b390) {
  %18 = "arith.subi"(%17, %12) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.alloc'(0x575908709470) {
  %19 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x575908707c30) {
  %20 = "arith.constant"() <{value = false}> : () -> i1 loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x575908707cd0) {
  %21 = "arith.constant"() <{value = 1024 : index}> : () -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x57590871b5f0) {
  %22 = "arith.cmpi"(%18, %21) <{predicate = 2 : i64}> : (index, index) -> i1 loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.ori'(0x57590871b540) {
  %23 = "arith.ori"(%20, %22) : (i1, i1) -> i1 loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

  * Fold {

    //===-------------------------------------------===//
    Legalizing operation : 'arith.ori'(0x57590871b540) {
      %23 = "arith.ori"(%22, %20) : (i1, i1) -> i1 loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

      * Fold {
        ** Replace : 'arith.ori'(0x57590871b540)
      } -> SUCCESS
    } -> SUCCESS : operation was folded
    //===-------------------------------------------===//
  } -> SUCCESS : operation was folded
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'scf.if'(0x57590871b3f0) {
    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'linalg.fill'(0x57590870bb80) {
    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'linalg.yield'(0x575908713b00) {
    "linalg.yield"(%arg12) : (i32) -> () loc(unknown)

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'scf.yield'(0x5759086839f0) {
    "scf.yield"() : () -> () loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'memref.subview'(0x57590869f460) {
    %24 = "memref.subview"(%13, %18) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0>, static_sizes = array<i64: -9223372036854775808>, static_strides = array<i64: 1>}> : (memref<1024xi32, strided<[1], offset: ?>>, index) -> memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'memref.subview'(0x57590869b2c0) {
    %25 = "memref.subview"(%19, %18) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0>, static_sizes = array<i64: -9223372036854775808>, static_strides = array<i64: 1>}> : (memref<1024xi32>, index) -> memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'memref.copy'(0x57590870b840) {
    "memref.copy"(%24, %25) : (memref<?xi32, strided<[1], offset: ?>>, memref<?xi32, strided<[1]>>) -> () loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'bufferization.to_tensor'(0x5759087101c0) {
    %26 = "bufferization.to_tensor"(%19) <{restrict, writable}> : (memref<1024xi32>) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'arith.minsi'(0x5759086a3ae0) {
    %27 = "arith.minsi"(%18, %6) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'arith.index_cast'(0x575908673eb0) {
    %28 = "arith.index_cast"(%26) : (tensor<1024xi32>) -> tensor<1024xindex> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'memref.alloc'(0x5759087212b0) {
    %29 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'arith.constant'(0x575908721000) {
    %30 = "arith.constant"() <{value = 0 : index}> : () -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'arith.constant'(0x575908721070) {
    %31 = "arith.constant"() <{value = 1024 : index}> : () -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'arith.constant'(0x5759087210e0) {
    %32 = "arith.constant"() <{value = 1024 : index}> : () -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'arith.minsi'(0x57590867c100) {
    %33 = "arith.minsi"(%27, %32) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'arith.constant'(0x57590871ba70) {
    %34 = "arith.constant"() <{value = 1 : index}> : () -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'scf.for'(0x5759087077f0) {
    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'tensor.extract'(0x5759086a7410) {
    %40 = "tensor.extract"(%28, %arg11) : (tensor<1024xindex>, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'arith.constant'(0x57590871bb20) {
    %41 = "arith.constant"() <{value = 16 : index}> : () -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'arith.muli'(0x57590870fee0) {
    %42 = "arith.muli"(%40, %41) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'memref.reinterpret_cast'(0x57590870b3d0) {
    %43 = "memref.reinterpret_cast"(%1, %42) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: 16, 1>}> : (memref<*xf32>, index) -> memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'memref.subview'(0x575908716db0) {
    %44 = "memref.subview"(%43, %30, %30, %34, %34) <{operandSegmentSizes = array<i32: 1, 2, 0, 2>, static_offsets = array<i64: -9223372036854775808, -9223372036854775808>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: -9223372036854775808, -9223372036854775808>}> : (memref<1x16xf32, strided<[16, 1], offset: ?>>, index, index, index, index) -> memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'memref.subview'(0x575908716f10) {
    %45 = "memref.subview"(%29, %arg11, %30, %34, %34) <{operandSegmentSizes = array<i32: 1, 2, 0, 2>, static_offsets = array<i64: -9223372036854775808, -9223372036854775808>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: -9223372036854775808, -9223372036854775808>}> : (memref<1024x16xf32>, index, index, index, index) -> memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'memref.copy'(0x575908717060) {
    "memref.copy"(%44, %45) : (memref<1x16xf32, strided<[?, ?], offset: ?>>, memref<1x16xf32, strided<[?, ?], offset: ?>>) -> () loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'scf.yield'(0x575908684a80) {
    "scf.yield"() : () -> () loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'bufferization.to_tensor'(0x57590871ade0) {
    %35 = "bufferization.to_tensor"(%29) <{restrict, writable}> : (memref<1024x16xf32>) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'arith.muli'(0x5759086a5190) {
    %36 = "arith.muli"(%12, %4) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'memref.reinterpret_cast'(0x575908715ea0) {
    %37 = "memref.reinterpret_cast"(%0, %36) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1024, 16>, static_strides = array<i64: 16, 1>}> : (memref<*xf32>, index) -> memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'tensor.extract_slice'(0x575908715f70) {
    %38 = "tensor.extract_slice"(%35, %27) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0, 0>, static_sizes = array<i64: -9223372036854775808, 16>, static_strides = array<i64: 1, 1>}> : (tensor<1024x16xf32>, index) -> tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'memref.subview'(0x575908716040) {
    %39 = "memref.subview"(%37, %27) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0, 0>, static_sizes = array<i64: -9223372036854775808, 16>, static_strides = array<i64: 1, 1>}> : (memref<1024x16xf32, strided<[16, 1], offset: ?>>, index) -> memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'bufferization.materialize_in_destination'(0x575908711c30) {
    "bufferization.materialize_in_destination"(%38, %39) <{writable}> : (tensor<?x16xf32>, memref<?x16xf32, strided<[16, 1], offset: ?>>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'scf.yield'(0x5759086ad740) {
    "scf.yield"() : () -> () loc("input.mlir":29:5)

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//

  //===-------------------------------------------===//
  Legalizing operation : 'func.return'(0x5759086ab810) {
    "func.return"() : () -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)

    * Fold {
    } -> FAILURE : unable to fold
  } -> FAILURE : no matched legalization pattern
  //===-------------------------------------------===//
** Replace : 'arith.constant'(0x575908707cd0)
** Modified: 'arith.cmpi'(0x57590871b5f0)
** Erase   : 'arith.constant'(0x575908707cd0)
** Replace : 'arith.constant'(0x575908721070)
** Erase   : 'arith.constant'(0x575908721070)
** Replace : 'arith.constant'(0x5759087210e0)
** Modified: 'arith.minsi'(0x57590867c100)
** Erase   : 'arith.constant'(0x5759087210e0)
** Replace : 'arith.constant'(0x57590871bb20)
** Modified: 'arith.muli'(0x57590870fee0)
** Erase   : 'arith.constant'(0x57590871bb20)

//===-------------------------------------------===//
Processing operation : 'func.func'(0x575908715540) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'builtin.unrealized_conversion_cast'(0x5759087021d0) {
  %9 = "builtin.unrealized_conversion_cast"(%arg2) : (memref<*xf32>) -> !tt.ptr<f32> loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'builtin.unrealized_conversion_cast'(0x5759086a3590) {
  %10 = "builtin.unrealized_conversion_cast"(%arg1) : (memref<*xi32>) -> !tt.ptr<i32> loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'builtin.unrealized_conversion_cast'(0x5759087176e0) {
  %11 = "builtin.unrealized_conversion_cast"(%arg0) : (memref<*xf32>) -> !tt.ptr<f32> loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'builtin.unrealized_conversion_cast'(0x57590871b4b0) {
  %12 = "builtin.unrealized_conversion_cast"(%9) : (!tt.ptr<f32>) -> memref<*xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)

} -> success : operation was folded
//===-------------------------------------------===//
** Replace : 'builtin.unrealized_conversion_cast'(0x57590871b4b0)
** Modified: 'memref.reinterpret_cast'(0x575908715ea0)
** Erase   : 'builtin.unrealized_conversion_cast'(0x57590871b4b0)
// *** IR Dump After Successful Folding ***
func.func @origin_index_select(%arg0: memref<*xf32> {tt.divisibility = 16 : i32} loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: memref<*xi32> {tt.divisibility = 16 : i32} loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: memref<*xf32> {tt.divisibility = 16 : i32} loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 {tt.divisibility = 16 : i32} loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg4: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg5: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg6: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg7: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg8: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg9: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)) {
  %c1 = arith.constant 1 : index loc(unknown)
  %c0 = arith.constant 0 : index loc(unknown)
  %false = arith.constant false loc(unknown)
  %c49299_i32 = arith.constant 49299 : i32 loc(unknown)
  %c1024_i32 = arith.constant 1024 : i32 loc(unknown)
  %c1024 = arith.constant 1024 : index loc(unknown)
  %c1971940 = arith.constant 1971940 : index loc(unknown)
  %c16 = arith.constant 16 : index loc(unknown)
  %c0_i32 = arith.constant 0 : i32 loc(unknown)
  %0 = builtin.unrealized_conversion_cast %arg2 : memref<*xf32> to !tt.ptr<f32> loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0))
  %1 = builtin.unrealized_conversion_cast %arg1 : memref<*xi32> to !tt.ptr<i32> loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0))
  %2 = builtin.unrealized_conversion_cast %arg0 : memref<*xf32> to !tt.ptr<f32> loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0))
  %3 = builtin.unrealized_conversion_cast %2 : !tt.ptr<f32> to memref<*xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
  %4 = builtin.unrealized_conversion_cast %1 : !tt.ptr<i32> to memref<*xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
  %5 = arith.muli %arg7, %c49299_i32 : i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))
  %6 = arith.index_cast %5 : i32 to index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
  scf.for %arg10 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {
    %7 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %8 = arith.addi %6, %7 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
    %reinterpret_cast = memref.reinterpret_cast %4 to offset: [%8], sizes: [1024], strides: [1] : memref<*xi32> to memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %9 = arith.addi %6, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %10 = arith.addi %9, %7 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %11 = arith.minsi %10, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %12 = arith.maxsi %11, %8 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %13 = arith.subi %12, %8 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %alloc = memref.alloc() : memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %14 = arith.cmpi slt, %13, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    scf.if %14 {
      linalg.fill ins(%c0_i32 : i32) outs(%alloc : memref<1024xi32>) loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    } loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview = memref.subview %reinterpret_cast[0] [%13] [1] : memref<1024xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview_0 = memref.subview %alloc[0] [%13] [1] : memref<1024xi32> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    memref.copy %subview, %subview_0 : memref<?xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %15 = bufferization.to_tensor %alloc restrict writable : memref<1024xi32> to tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %16 = arith.minsi %13, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %17 = arith.index_cast %15 : tensor<1024xi32> to tensor<1024xindex> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %alloc_1 = memref.alloc() : memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %18 = arith.minsi %16, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    scf.for %arg11 = %c0 to %18 step %c1 {
      %extracted = tensor.extract %17[%arg11] : tensor<1024xindex> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %21 = arith.muli %extracted, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %reinterpret_cast_4 = memref.reinterpret_cast %3 to offset: [%21], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %subview_5 = memref.subview %reinterpret_cast_4[%c0, %c0] [1, 16] [%c1, %c1] : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %subview_6 = memref.subview %alloc_1[%arg11, %c0] [1, 16] [%c1, %c1] : memref<1024x16xf32> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      memref.copy %subview_5, %subview_6 : memref<1x16xf32, strided<[?, ?], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    } loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %19 = bufferization.to_tensor %alloc_1 restrict writable : memref<1024x16xf32> to tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %20 = arith.muli %8, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
    %reinterpret_cast_2 = memref.reinterpret_cast %arg2 to offset: [%20], sizes: [1024, 16], strides: [16, 1] : memref<*xf32> to memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
    %extracted_slice = tensor.extract_slice %19[0, 0] [%16, 16] [1, 1] : tensor<1024x16xf32> to tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
    %subview_3 = memref.subview %reinterpret_cast_2[0, 0] [%16, 16] [1, 1] : memref<1024x16xf32, strided<[16, 1], offset: ?>> to memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
    bufferization.materialize_in_destination %extracted_slice in writable %subview_3 : (tensor<?x16xf32>, memref<?x16xf32, strided<[16, 1], offset: ?>>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  } loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
  return loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)



//===-------------------------------------------===//
Processing operation : 'builtin.unrealized_conversion_cast'(0x5759087021d0) {
  %9 = "builtin.unrealized_conversion_cast"(%arg2) : (memref<*xf32>) -> !tt.ptr<f32> loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0))

  ** Erase   : 'builtin.unrealized_conversion_cast'(0x5759087021d0)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'func.func'(0x575908715540) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'builtin.unrealized_conversion_cast'(0x5759086a50a0) {
  %11 = "builtin.unrealized_conversion_cast"(%10) : (!tt.ptr<f32>) -> memref<*xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

} -> success : operation was folded
//===-------------------------------------------===//
** Replace : 'builtin.unrealized_conversion_cast'(0x5759086a50a0)
** Modified: 'memref.reinterpret_cast'(0x57590870b3d0)
** Erase   : 'builtin.unrealized_conversion_cast'(0x5759086a50a0)
// *** IR Dump After Successful Folding ***
func.func @origin_index_select(%arg0: memref<*xf32> {tt.divisibility = 16 : i32} loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: memref<*xi32> {tt.divisibility = 16 : i32} loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: memref<*xf32> {tt.divisibility = 16 : i32} loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 {tt.divisibility = 16 : i32} loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg4: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg5: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg6: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg7: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg8: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg9: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)) {
  %c1 = arith.constant 1 : index loc(unknown)
  %c0 = arith.constant 0 : index loc(unknown)
  %false = arith.constant false loc(unknown)
  %c49299_i32 = arith.constant 49299 : i32 loc(unknown)
  %c1024_i32 = arith.constant 1024 : i32 loc(unknown)
  %c1024 = arith.constant 1024 : index loc(unknown)
  %c1971940 = arith.constant 1971940 : index loc(unknown)
  %c16 = arith.constant 16 : index loc(unknown)
  %c0_i32 = arith.constant 0 : i32 loc(unknown)
  %0 = builtin.unrealized_conversion_cast %arg1 : memref<*xi32> to !tt.ptr<i32> loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0))
  %1 = builtin.unrealized_conversion_cast %arg0 : memref<*xf32> to !tt.ptr<f32> loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0))
  %2 = builtin.unrealized_conversion_cast %0 : !tt.ptr<i32> to memref<*xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
  %3 = arith.muli %arg7, %c49299_i32 : i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))
  %4 = arith.index_cast %3 : i32 to index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
  scf.for %arg10 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {
    %5 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %6 = arith.addi %4, %5 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
    %reinterpret_cast = memref.reinterpret_cast %2 to offset: [%6], sizes: [1024], strides: [1] : memref<*xi32> to memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %7 = arith.addi %4, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %8 = arith.addi %7, %5 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %9 = arith.minsi %8, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %10 = arith.maxsi %9, %6 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %11 = arith.subi %10, %6 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %alloc = memref.alloc() : memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %12 = arith.cmpi slt, %11, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    scf.if %12 {
      linalg.fill ins(%c0_i32 : i32) outs(%alloc : memref<1024xi32>) loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    } loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview = memref.subview %reinterpret_cast[0] [%11] [1] : memref<1024xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview_0 = memref.subview %alloc[0] [%11] [1] : memref<1024xi32> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    memref.copy %subview, %subview_0 : memref<?xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %13 = bufferization.to_tensor %alloc restrict writable : memref<1024xi32> to tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %14 = arith.minsi %11, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %15 = arith.index_cast %13 : tensor<1024xi32> to tensor<1024xindex> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %alloc_1 = memref.alloc() : memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %16 = arith.minsi %14, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    scf.for %arg11 = %c0 to %16 step %c1 {
      %extracted = tensor.extract %15[%arg11] : tensor<1024xindex> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %19 = arith.muli %extracted, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %reinterpret_cast_4 = memref.reinterpret_cast %arg0 to offset: [%19], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %subview_5 = memref.subview %reinterpret_cast_4[%c0, %c0] [1, 16] [%c1, %c1] : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %subview_6 = memref.subview %alloc_1[%arg11, %c0] [1, 16] [%c1, %c1] : memref<1024x16xf32> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      memref.copy %subview_5, %subview_6 : memref<1x16xf32, strided<[?, ?], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    } loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %17 = bufferization.to_tensor %alloc_1 restrict writable : memref<1024x16xf32> to tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %18 = arith.muli %6, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
    %reinterpret_cast_2 = memref.reinterpret_cast %arg2 to offset: [%18], sizes: [1024, 16], strides: [16, 1] : memref<*xf32> to memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
    %extracted_slice = tensor.extract_slice %17[0, 0] [%14, 16] [1, 1] : tensor<1024x16xf32> to tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
    %subview_3 = memref.subview %reinterpret_cast_2[0, 0] [%14, 16] [1, 1] : memref<1024x16xf32, strided<[16, 1], offset: ?>> to memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
    bufferization.materialize_in_destination %extracted_slice in writable %subview_3 : (tensor<?x16xf32>, memref<?x16xf32, strided<[16, 1], offset: ?>>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  } loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
  return loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)



//===-------------------------------------------===//
Processing operation : 'builtin.unrealized_conversion_cast'(0x5759087176e0) {
  %10 = "builtin.unrealized_conversion_cast"(%arg0) : (memref<*xf32>) -> !tt.ptr<f32> loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0))

  ** Erase   : 'builtin.unrealized_conversion_cast'(0x5759087176e0)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'func.func'(0x575908715540) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'builtin.unrealized_conversion_cast'(0x575908707ba0) {
  %10 = "builtin.unrealized_conversion_cast"(%9) : (!tt.ptr<i32>) -> memref<*xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

} -> success : operation was folded
//===-------------------------------------------===//
** Replace : 'builtin.unrealized_conversion_cast'(0x575908707ba0)
** Modified: 'memref.reinterpret_cast'(0x5759086a7d10)
** Erase   : 'builtin.unrealized_conversion_cast'(0x575908707ba0)
// *** IR Dump After Successful Folding ***
func.func @origin_index_select(%arg0: memref<*xf32> {tt.divisibility = 16 : i32} loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: memref<*xi32> {tt.divisibility = 16 : i32} loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: memref<*xf32> {tt.divisibility = 16 : i32} loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 {tt.divisibility = 16 : i32} loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg4: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg5: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg6: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg7: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg8: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg9: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)) {
  %c1 = arith.constant 1 : index loc(unknown)
  %c0 = arith.constant 0 : index loc(unknown)
  %false = arith.constant false loc(unknown)
  %c49299_i32 = arith.constant 49299 : i32 loc(unknown)
  %c1024_i32 = arith.constant 1024 : i32 loc(unknown)
  %c1024 = arith.constant 1024 : index loc(unknown)
  %c1971940 = arith.constant 1971940 : index loc(unknown)
  %c16 = arith.constant 16 : index loc(unknown)
  %c0_i32 = arith.constant 0 : i32 loc(unknown)
  %0 = builtin.unrealized_conversion_cast %arg1 : memref<*xi32> to !tt.ptr<i32> loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0))
  %1 = arith.muli %arg7, %c49299_i32 : i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))
  %2 = arith.index_cast %1 : i32 to index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
  scf.for %arg10 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {
    %3 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %4 = arith.addi %2, %3 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
    %reinterpret_cast = memref.reinterpret_cast %arg1 to offset: [%4], sizes: [1024], strides: [1] : memref<*xi32> to memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %5 = arith.addi %2, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %6 = arith.addi %5, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %7 = arith.minsi %6, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %8 = arith.maxsi %7, %4 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %9 = arith.subi %8, %4 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %alloc = memref.alloc() : memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %10 = arith.cmpi slt, %9, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    scf.if %10 {
      linalg.fill ins(%c0_i32 : i32) outs(%alloc : memref<1024xi32>) loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    } loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview = memref.subview %reinterpret_cast[0] [%9] [1] : memref<1024xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview_0 = memref.subview %alloc[0] [%9] [1] : memref<1024xi32> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    memref.copy %subview, %subview_0 : memref<?xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %11 = bufferization.to_tensor %alloc restrict writable : memref<1024xi32> to tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %12 = arith.minsi %9, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %13 = arith.index_cast %11 : tensor<1024xi32> to tensor<1024xindex> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %alloc_1 = memref.alloc() : memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %14 = arith.minsi %12, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    scf.for %arg11 = %c0 to %14 step %c1 {
      %extracted = tensor.extract %13[%arg11] : tensor<1024xindex> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %17 = arith.muli %extracted, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %reinterpret_cast_4 = memref.reinterpret_cast %arg0 to offset: [%17], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %subview_5 = memref.subview %reinterpret_cast_4[%c0, %c0] [1, 16] [%c1, %c1] : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %subview_6 = memref.subview %alloc_1[%arg11, %c0] [1, 16] [%c1, %c1] : memref<1024x16xf32> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      memref.copy %subview_5, %subview_6 : memref<1x16xf32, strided<[?, ?], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    } loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %15 = bufferization.to_tensor %alloc_1 restrict writable : memref<1024x16xf32> to tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %16 = arith.muli %4, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
    %reinterpret_cast_2 = memref.reinterpret_cast %arg2 to offset: [%16], sizes: [1024, 16], strides: [16, 1] : memref<*xf32> to memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
    %extracted_slice = tensor.extract_slice %15[0, 0] [%12, 16] [1, 1] : tensor<1024x16xf32> to tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
    %subview_3 = memref.subview %reinterpret_cast_2[0, 0] [%12, 16] [1, 1] : memref<1024x16xf32, strided<[16, 1], offset: ?>> to memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
    bufferization.materialize_in_destination %extracted_slice in writable %subview_3 : (tensor<?x16xf32>, memref<?x16xf32, strided<[16, 1], offset: ?>>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  } loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
  return loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)



//===-------------------------------------------===//
Processing operation : 'builtin.unrealized_conversion_cast'(0x5759086a3590) {
  %9 = "builtin.unrealized_conversion_cast"(%arg1) : (memref<*xi32>) -> !tt.ptr<i32> loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0))

  ** Erase   : 'builtin.unrealized_conversion_cast'(0x5759086a3590)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'func.func'(0x575908715540) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869c880) {
  %8 = "arith.constant"() <{value = 0 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869f3f0) {
  %7 = "arith.constant"() <{value = 16 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x575908710040) {
  %6 = "arith.constant"() <{value = 1971940 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x575908707790) {
  %5 = "arith.constant"() <{value = 1024 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759086a4fb0) {
  %4 = "arith.constant"() <{value = 1024 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759086a90a0) {
  %3 = "arith.constant"() <{value = 49299 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x5759086a93b0) {
  %9 = "arith.muli"(%arg7, %3) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))


  * Pattern (anonymous namespace)::MulIMulIConstant : 'arith.muli -> (arith.constant, arith.muli)' {
Trying to match "(anonymous namespace)::MulIMulIConstant"
    ** Match Failure : There's no operation that defines operand 0 of castedOp0
"(anonymous namespace)::MulIMulIConstant" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x57590869b6d0) {
  %10 = "arith.index_cast"(%9) : (i32) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)


  * Pattern (anonymous namespace)::IndexCastOfIndexCast : 'arith.index_cast -> ()' {
Trying to match "(anonymous namespace)::IndexCastOfIndexCast"
    ** Match Failure : castedOp1 is not ::mlir::arith::IndexCastOp type
"(anonymous namespace)::IndexCastOfIndexCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::IndexCastOfExtSI : 'arith.index_cast -> (arith.index_cast)' {
Trying to match "(anonymous namespace)::IndexCastOfExtSI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtSIOp type
"(anonymous namespace)::IndexCastOfExtSI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x57590869db90) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x5759086a92c0) {
  %11 = "arith.index_cast"(%arg10) : (i32) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))


  * Pattern (anonymous namespace)::IndexCastOfIndexCast : 'arith.index_cast -> ()' {
Trying to match "(anonymous namespace)::IndexCastOfIndexCast"
    ** Match Failure : There's no operation that defines operand 0 of castedOp0
"(anonymous namespace)::IndexCastOfIndexCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::IndexCastOfExtSI : 'arith.index_cast -> (arith.index_cast)' {
Trying to match "(anonymous namespace)::IndexCastOfExtSI"
    ** Match Failure : There's no operation that defines operand 0 of castedOp0
"(anonymous namespace)::IndexCastOfExtSI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x5759086a7f50) {
  %12 = "arith.addi"(%10, %11) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))


  * Pattern (anonymous namespace)::AddIAddConstant : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddIAddConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::AddIOp type
"(anonymous namespace)::AddIAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantRHS : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddISubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantLHS : 'arith.addi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::AddISubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneRhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneRhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneRhs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneLhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneLhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneLhs" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.reinterpret_cast'(0x5759086a7d10) {
  %13 = "memref.reinterpret_cast"(%arg1, %12) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1024>, static_strides = array<i64: 1>}> : (memref<*xi32>, index) -> memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))


  * Pattern (anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder : 'memref.reinterpret_cast -> ()' {
Trying to match "(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder"
"(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x57590869e5a0) {
  %14 = "arith.addi"(%10, %5) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::AddIAddConstant : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddIAddConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::AddIOp type
"(anonymous namespace)::AddIAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantRHS : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddISubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantLHS : 'arith.addi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::AddISubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneRhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneRhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneRhs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneLhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneLhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneLhs" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x575908717a70) {
  %15 = "arith.addi"(%14, %11) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::AddIAddConstant : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddIAddConstant"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::AddIAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantRHS : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddISubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantLHS : 'arith.addi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::AddISubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneRhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneRhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneRhs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneLhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneLhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneLhs" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.minsi'(0x5759086a5280) {
  %16 = "arith.minsi"(%15, %6) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.maxsi'(0x57590869fe20) {
  %17 = "arith.maxsi"(%16, %12) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.subi'(0x57590871b390) {
  %18 = "arith.subi"(%17, %12) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::SubIRHSAddConstant : 'arith.subi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::SubIRHSAddConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::AddIOp type
"(anonymous namespace)::SubIRHSAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubILHSAddConstant : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubILHSAddConstant"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::SubILHSAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubIRHSSubConstantRHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubIRHSSubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::SubIRHSSubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubIRHSSubConstantLHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubIRHSSubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::SubIRHSSubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubILHSSubConstantRHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubILHSSubConstantRHS"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::SubILHSSubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubILHSSubConstantLHS : 'arith.subi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::SubILHSSubConstantLHS"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::SubILHSSubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubISubILHSRHSLHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubISubILHSRHSLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::SubISubILHSRHSLHS" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.alloc'(0x575908709470) {
  %19 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::SimplifyAllocConst<mlir::memref::AllocOp> : 'memref.alloc -> ()' {
Trying to match "(anonymous namespace)::SimplifyAllocConst<mlir::memref::AllocOp>"
"(anonymous namespace)::SimplifyAllocConst<mlir::memref::AllocOp>" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyDeadAlloc<mlir::memref::AllocOp> : 'memref.alloc -> ()' {
Trying to match "(anonymous namespace)::SimplifyDeadAlloc<mlir::memref::AllocOp>"
"(anonymous namespace)::SimplifyDeadAlloc<mlir::memref::AllocOp>" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x575908707c30) {
  %2 = "arith.constant"() <{value = false}> : () -> i1 loc(unknown)

  ** Erase   : 'arith.constant'(0x575908707c30)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.cmpi'(0x57590871b5f0) {
  %19 = "arith.cmpi"(%17, %4) <{predicate = 2 : i64}> : (index, index) -> i1 loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::CmpIExtSI : 'arith.cmpi -> (arith.cmpi)' {
Trying to match "(anonymous namespace)::CmpIExtSI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtSIOp type
"(anonymous namespace)::CmpIExtSI" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::CmpIExtUI : 'arith.cmpi -> (arith.cmpi)' {
Trying to match "(anonymous namespace)::CmpIExtUI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtUIOp type
"(anonymous namespace)::CmpIExtUI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.if'(0x57590871b3f0) {

  * Pattern (anonymous namespace)::CombineIfs : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::CombineIfs"
"(anonymous namespace)::CombineIfs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::CombineNestedIfs : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::CombineNestedIfs"
"(anonymous namespace)::CombineNestedIfs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ConditionPropagation : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::ConditionPropagation"
"(anonymous namespace)::ConditionPropagation" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ConvertTrivialIfToSelect : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::ConvertTrivialIfToSelect"
"(anonymous namespace)::ConvertTrivialIfToSelect" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::RemoveEmptyElseBranch : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::RemoveEmptyElseBranch"
"(anonymous namespace)::RemoveEmptyElseBranch" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::RemoveStaticCondition : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::RemoveStaticCondition"
"(anonymous namespace)::RemoveStaticCondition" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::RemoveUnusedResults : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::RemoveUnusedResults"
"(anonymous namespace)::RemoveUnusedResults" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ReplaceIfYieldWithConditionOrValue : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::ReplaceIfYieldWithConditionOrValue"
"(anonymous namespace)::ReplaceIfYieldWithConditionOrValue" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'linalg.fill'(0x57590870bb80) {

  * Pattern FoldTensorCastProducerOp : 'linalg.fill -> ()' {
Trying to match "FoldTensorCastProducerOp"
"FoldTensorCastProducerOp" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::EraseDeadLinalgOp : 'linalg.fill -> ()' {
Trying to match "(anonymous namespace)::EraseDeadLinalgOp"
"(anonymous namespace)::EraseDeadLinalgOp" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::InferStaticShapeOfOperands : 'linalg.fill -> ()' {
Trying to match "(anonymous namespace)::InferStaticShapeOfOperands"
"(anonymous namespace)::InferStaticShapeOfOperands" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'linalg.yield'(0x575908713b00) {
  "linalg.yield"(%arg12) : (i32) -> () loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.yield'(0x5759086839f0) {
  "scf.yield"() : () -> () loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.subview'(0x57590869f460) {
  %20 = "memref.subview"(%12, %17) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0>, static_sizes = array<i64: -9223372036854775808>, static_strides = array<i64: 1>}> : (memref<1024xi32, strided<[1], offset: ?>>, index) -> memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer> : 'memref.subview -> ()' {
Trying to match "mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>"
"mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubViewOpMemRefCastFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::SubViewOpMemRefCastFolder"
"(anonymous namespace)::SubViewOpMemRefCastFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::TrivialSubViewOpFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::TrivialSubViewOpFolder"
"(anonymous namespace)::TrivialSubViewOpFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.subview'(0x57590869b2c0) {
  %21 = "memref.subview"(%18, %17) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0>, static_sizes = array<i64: -9223372036854775808>, static_strides = array<i64: 1>}> : (memref<1024xi32>, index) -> memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer> : 'memref.subview -> ()' {
Trying to match "mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>"
"mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubViewOpMemRefCastFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::SubViewOpMemRefCastFolder"
"(anonymous namespace)::SubViewOpMemRefCastFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::TrivialSubViewOpFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::TrivialSubViewOpFolder"
"(anonymous namespace)::TrivialSubViewOpFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.copy'(0x57590870b840) {
  "memref.copy"(%20, %21) : (memref<?xi32, strided<[1], offset: ?>>, memref<?xi32, strided<[1]>>) -> () loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::FoldCopyOfCast : 'memref.copy -> ()' {
Trying to match "(anonymous namespace)::FoldCopyOfCast"
"(anonymous namespace)::FoldCopyOfCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::FoldEmptyCopy : 'memref.copy -> ()' {
Trying to match "(anonymous namespace)::FoldEmptyCopy"
"(anonymous namespace)::FoldEmptyCopy" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::FoldSelfCopy : 'memref.copy -> ()' {
Trying to match "(anonymous namespace)::FoldSelfCopy"
"(anonymous namespace)::FoldSelfCopy" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'bufferization.to_tensor'(0x5759087101c0) {
  %22 = "bufferization.to_tensor"(%18) <{restrict, writable}> : (memref<1024xi32>) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.minsi'(0x5759086a3ae0) {
  %23 = "arith.minsi"(%17, %4) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x575908673eb0) {
  %24 = "arith.index_cast"(%22) : (tensor<1024xi32>) -> tensor<1024xindex> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))


  * Pattern (anonymous namespace)::IndexCastOfIndexCast : 'arith.index_cast -> ()' {
Trying to match "(anonymous namespace)::IndexCastOfIndexCast"
    ** Match Failure : castedOp1 is not ::mlir::arith::IndexCastOp type
"(anonymous namespace)::IndexCastOfIndexCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::IndexCastOfExtSI : 'arith.index_cast -> (arith.index_cast)' {
Trying to match "(anonymous namespace)::IndexCastOfExtSI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtSIOp type
"(anonymous namespace)::IndexCastOfExtSI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.alloc'(0x5759087212b0) {
  %25 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))


  * Pattern (anonymous namespace)::SimplifyAllocConst<mlir::memref::AllocOp> : 'memref.alloc -> ()' {
Trying to match "(anonymous namespace)::SimplifyAllocConst<mlir::memref::AllocOp>"
"(anonymous namespace)::SimplifyAllocConst<mlir::memref::AllocOp>" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyDeadAlloc<mlir::memref::AllocOp> : 'memref.alloc -> ()' {
Trying to match "(anonymous namespace)::SimplifyDeadAlloc<mlir::memref::AllocOp>"
"(anonymous namespace)::SimplifyDeadAlloc<mlir::memref::AllocOp>" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x575908721000) {
  %1 = "arith.constant"() <{value = 0 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.minsi'(0x57590867c100) {
  %26 = "arith.minsi"(%23, %4) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590871ba70) {
  %0 = "arith.constant"() <{value = 1 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759087077f0) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tensor.extract'(0x5759086a7410) {
  %32 = "tensor.extract"(%24, %arg11) : (tensor<1024xindex>, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))


  * Pattern (anonymous namespace)::FoldFillWithTensorExtract : 'tensor.extract -> ()' {
Trying to match "(anonymous namespace)::FoldFillWithTensorExtract"
"(anonymous namespace)::FoldFillWithTensorExtract" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ExtractFromTensorGenerate : 'tensor.extract -> ()' {
Trying to match "(anonymous namespace)::ExtractFromTensorGenerate"
"(anonymous namespace)::ExtractFromTensorGenerate" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ExtractElementFromIndexCast : 'tensor.extract -> ()' {
Trying to match "(anonymous namespace)::ExtractElementFromIndexCast"
    ** Insert  : 'tensor.extract'(0x57590871b540)
    ** Insert  : 'arith.index_cast'(0x5759087021d0)
    ** Replace : 'tensor.extract'(0x5759086a7410)
    ** Modified: 'arith.muli'(0x57590870fee0)
    ** Erase   : 'tensor.extract'(0x5759086a7410)
"(anonymous namespace)::ExtractElementFromIndexCast" result 1
  } -> success : pattern applied successfully
// *** IR Dump After Pattern Application ***
func.func @origin_index_select(%arg0: memref<*xf32> {tt.divisibility = 16 : i32} loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: memref<*xi32> {tt.divisibility = 16 : i32} loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: memref<*xf32> {tt.divisibility = 16 : i32} loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 {tt.divisibility = 16 : i32} loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg4: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg5: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg6: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg7: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg8: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg9: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)) {
  %c1 = arith.constant 1 : index loc(unknown)
  %c0 = arith.constant 0 : index loc(unknown)
  %c49299_i32 = arith.constant 49299 : i32 loc(unknown)
  %c1024_i32 = arith.constant 1024 : i32 loc(unknown)
  %c1024 = arith.constant 1024 : index loc(unknown)
  %c1971940 = arith.constant 1971940 : index loc(unknown)
  %c16 = arith.constant 16 : index loc(unknown)
  %c0_i32 = arith.constant 0 : i32 loc(unknown)
  %0 = arith.muli %arg7, %c49299_i32 : i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))
  %1 = arith.index_cast %0 : i32 to index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
  scf.for %arg10 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {
    %2 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %3 = arith.addi %1, %2 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
    %reinterpret_cast = memref.reinterpret_cast %arg1 to offset: [%3], sizes: [1024], strides: [1] : memref<*xi32> to memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %4 = arith.addi %1, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %5 = arith.addi %4, %2 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %6 = arith.minsi %5, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %7 = arith.maxsi %6, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %8 = arith.subi %7, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %alloc = memref.alloc() : memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %9 = arith.cmpi slt, %8, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    scf.if %9 {
      linalg.fill ins(%c0_i32 : i32) outs(%alloc : memref<1024xi32>) loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    } loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview = memref.subview %reinterpret_cast[0] [%8] [1] : memref<1024xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview_0 = memref.subview %alloc[0] [%8] [1] : memref<1024xi32> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    memref.copy %subview, %subview_0 : memref<?xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %10 = bufferization.to_tensor %alloc restrict writable : memref<1024xi32> to tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %11 = arith.minsi %8, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %12 = arith.index_cast %10 : tensor<1024xi32> to tensor<1024xindex> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %alloc_1 = memref.alloc() : memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %13 = arith.minsi %11, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    scf.for %arg11 = %c0 to %13 step %c1 {
      %extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %16 = arith.index_cast %extracted : i32 to index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %17 = arith.muli %16, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %reinterpret_cast_4 = memref.reinterpret_cast %arg0 to offset: [%17], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %subview_5 = memref.subview %reinterpret_cast_4[%c0, %c0] [1, 16] [%c1, %c1] : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %subview_6 = memref.subview %alloc_1[%arg11, %c0] [1, 16] [%c1, %c1] : memref<1024x16xf32> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      memref.copy %subview_5, %subview_6 : memref<1x16xf32, strided<[?, ?], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    } loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %14 = bufferization.to_tensor %alloc_1 restrict writable : memref<1024x16xf32> to tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %15 = arith.muli %3, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
    %reinterpret_cast_2 = memref.reinterpret_cast %arg2 to offset: [%15], sizes: [1024, 16], strides: [16, 1] : memref<*xf32> to memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
    %extracted_slice = tensor.extract_slice %14[0, 0] [%11, 16] [1, 1] : tensor<1024x16xf32> to tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
    %subview_3 = memref.subview %reinterpret_cast_2[0, 0] [%11, 16] [1, 1] : memref<1024x16xf32, strided<[16, 1], offset: ?>> to memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
    bufferization.materialize_in_destination %extracted_slice in writable %subview_3 : (tensor<?x16xf32>, memref<?x16xf32, strided<[16, 1], offset: ?>>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  } loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
  return loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)


} -> success : at least one pattern matched
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x575908673eb0) {
  %24 = "arith.index_cast"(%22) : (tensor<1024xi32>) -> tensor<1024xindex> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

  ** Erase   : 'arith.index_cast'(0x575908673eb0)
} -> success : operation is trivially dead
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'bufferization.to_tensor'(0x5759087101c0) {
  %22 = "bufferization.to_tensor"(%18) <{restrict, writable}> : (memref<1024xi32>) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x5759087021d0) {
  %32 = "arith.index_cast"(%31) : (i32) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))


  * Pattern (anonymous namespace)::IndexCastOfIndexCast : 'arith.index_cast -> ()' {
Trying to match "(anonymous namespace)::IndexCastOfIndexCast"
    ** Match Failure : castedOp1 is not ::mlir::arith::IndexCastOp type
"(anonymous namespace)::IndexCastOfIndexCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::IndexCastOfExtSI : 'arith.index_cast -> (arith.index_cast)' {
Trying to match "(anonymous namespace)::IndexCastOfExtSI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtSIOp type
"(anonymous namespace)::IndexCastOfExtSI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'func.func'(0x575908715540) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x57590869db90) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759087077f0) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tensor.extract'(0x57590871b540) {
  %31 = "tensor.extract"(%22, %arg11) : (tensor<1024xi32>, index) -> i32 loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))


  * Pattern (anonymous namespace)::FoldFillWithTensorExtract : 'tensor.extract -> ()' {
Trying to match "(anonymous namespace)::FoldFillWithTensorExtract"
"(anonymous namespace)::FoldFillWithTensorExtract" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ExtractFromTensorGenerate : 'tensor.extract -> ()' {
Trying to match "(anonymous namespace)::ExtractFromTensorGenerate"
"(anonymous namespace)::ExtractFromTensorGenerate" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ExtractElementFromIndexCast : 'tensor.extract -> ()' {
Trying to match "(anonymous namespace)::ExtractElementFromIndexCast"
"(anonymous namespace)::ExtractElementFromIndexCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ExtractFromTensorCast : 'tensor.extract -> ()' {
Trying to match "(anonymous namespace)::ExtractFromTensorCast"
"(anonymous namespace)::ExtractFromTensorCast" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x57590870fee0) {
  %33 = "arith.muli"(%32, %6) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))


  * Pattern (anonymous namespace)::MulIMulIConstant : 'arith.muli -> (arith.constant, arith.muli)' {
Trying to match "(anonymous namespace)::MulIMulIConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::MulIMulIConstant" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.reinterpret_cast'(0x57590870b3d0) {
  %34 = "memref.reinterpret_cast"(%arg0, %33) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: 16, 1>}> : (memref<*xf32>, index) -> memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))


  * Pattern (anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder : 'memref.reinterpret_cast -> ()' {
Trying to match "(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder"
"(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.subview'(0x575908716db0) {
  %35 = "memref.subview"(%34, %1, %1, %0, %0) <{operandSegmentSizes = array<i32: 1, 2, 0, 2>, static_offsets = array<i64: -9223372036854775808, -9223372036854775808>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: -9223372036854775808, -9223372036854775808>}> : (memref<1x16xf32, strided<[16, 1], offset: ?>>, index, index, index, index) -> memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))


  * Pattern mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer> : 'memref.subview -> ()' {
Trying to match "mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>"
    ** Insert  : 'memref.subview'(0x57590868f680)
    ** Insert  : 'memref.cast'(0x575908673eb0)
    ** Replace : 'memref.subview'(0x575908716db0)
    ** Modified: 'memref.copy'(0x575908717060)
    ** Erase   : 'memref.subview'(0x575908716db0)
"mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>" result 1
  } -> success : pattern applied successfully
// *** IR Dump After Pattern Application ***
func.func @origin_index_select(%arg0: memref<*xf32> {tt.divisibility = 16 : i32} loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: memref<*xi32> {tt.divisibility = 16 : i32} loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: memref<*xf32> {tt.divisibility = 16 : i32} loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 {tt.divisibility = 16 : i32} loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg4: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg5: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg6: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg7: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg8: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg9: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)) {
  %c1 = arith.constant 1 : index loc(unknown)
  %c0 = arith.constant 0 : index loc(unknown)
  %c49299_i32 = arith.constant 49299 : i32 loc(unknown)
  %c1024_i32 = arith.constant 1024 : i32 loc(unknown)
  %c1024 = arith.constant 1024 : index loc(unknown)
  %c1971940 = arith.constant 1971940 : index loc(unknown)
  %c16 = arith.constant 16 : index loc(unknown)
  %c0_i32 = arith.constant 0 : i32 loc(unknown)
  %0 = arith.muli %arg7, %c49299_i32 : i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))
  %1 = arith.index_cast %0 : i32 to index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
  scf.for %arg10 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {
    %2 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %3 = arith.addi %1, %2 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
    %reinterpret_cast = memref.reinterpret_cast %arg1 to offset: [%3], sizes: [1024], strides: [1] : memref<*xi32> to memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %4 = arith.addi %1, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %5 = arith.addi %4, %2 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %6 = arith.minsi %5, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %7 = arith.maxsi %6, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %8 = arith.subi %7, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %alloc = memref.alloc() : memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %9 = arith.cmpi slt, %8, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    scf.if %9 {
      linalg.fill ins(%c0_i32 : i32) outs(%alloc : memref<1024xi32>) loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    } loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview = memref.subview %reinterpret_cast[0] [%8] [1] : memref<1024xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview_0 = memref.subview %alloc[0] [%8] [1] : memref<1024xi32> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    memref.copy %subview, %subview_0 : memref<?xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %10 = bufferization.to_tensor %alloc restrict writable : memref<1024xi32> to tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %11 = arith.minsi %8, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %alloc_1 = memref.alloc() : memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %12 = arith.minsi %11, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    scf.for %arg11 = %c0 to %12 step %c1 {
      %extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %15 = arith.index_cast %extracted : i32 to index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %16 = arith.muli %15, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %reinterpret_cast_4 = memref.reinterpret_cast %arg0 to offset: [%16], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %subview_5 = memref.subview %reinterpret_cast_4[0, 0] [1, 16] [%c1, %c1] : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %cast = memref.cast %subview_5 : memref<1x16xf32, strided<[?, ?], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %subview_6 = memref.subview %alloc_1[%arg11, %c0] [1, 16] [%c1, %c1] : memref<1024x16xf32> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      memref.copy %cast, %subview_6 : memref<1x16xf32, strided<[?, ?], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    } loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %13 = bufferization.to_tensor %alloc_1 restrict writable : memref<1024x16xf32> to tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %14 = arith.muli %3, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
    %reinterpret_cast_2 = memref.reinterpret_cast %arg2 to offset: [%14], sizes: [1024, 16], strides: [16, 1] : memref<*xf32> to memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
    %extracted_slice = tensor.extract_slice %13[0, 0] [%11, 16] [1, 1] : tensor<1024x16xf32> to tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
    %subview_3 = memref.subview %reinterpret_cast_2[0, 0] [%11, 16] [1, 1] : memref<1024x16xf32, strided<[16, 1], offset: ?>> to memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
    bufferization.materialize_in_destination %extracted_slice in writable %subview_3 : (tensor<?x16xf32>, memref<?x16xf32, strided<[16, 1], offset: ?>>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  } loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
  return loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)


} -> success : at least one pattern matched
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.reinterpret_cast'(0x57590870b3d0) {
  %34 = "memref.reinterpret_cast"(%arg0, %33) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: 16, 1>}> : (memref<*xf32>, index) -> memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))


  * Pattern (anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder : 'memref.reinterpret_cast -> ()' {
Trying to match "(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder"
"(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.cast'(0x575908673eb0) {
  %36 = "memref.cast"(%35) : (memref<1x16xf32, strided<[?, ?], offset: ?>>) -> memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

ImplicitTypeIDRegistry::lookupOrInsert(mlir::OpTrait::OneTypedResult<mlir::BaseMemRefType>::Impl<Empty>)
} -> success : operation was folded
//===-------------------------------------------===//
** Replace : 'memref.cast'(0x575908673eb0)
** Modified: 'memref.copy'(0x575908717060)
** Erase   : 'memref.cast'(0x575908673eb0)
// *** IR Dump After Successful Folding ***
scf.for %arg11 = %c0 to %12 step %c1 {
  %extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %15 = arith.index_cast %extracted : i32 to index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %16 = arith.muli %15, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
  %reinterpret_cast_4 = memref.reinterpret_cast %arg0 to offset: [%16], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
  %subview_5 = memref.subview %reinterpret_cast_4[0, 0] [1, 16] [%c1, %c1] : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %subview_6 = memref.subview %alloc_1[%arg11, %c0] [1, 16] [%c1, %c1] : memref<1024x16xf32> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  memref.copy %subview_5, %subview_6 : memref<1x16xf32, strided<[?, ?], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
} loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))



//===-------------------------------------------===//
Processing operation : 'func.func'(0x575908715540) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x57590869db90) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759087077f0) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.subview'(0x57590868f680) {
  %35 = "memref.subview"(%34, %0, %0) <{operandSegmentSizes = array<i32: 1, 0, 0, 2>, static_offsets = array<i64: 0, 0>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: -9223372036854775808, -9223372036854775808>}> : (memref<1x16xf32, strided<[16, 1], offset: ?>>, index, index) -> memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))


  * Pattern mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer> : 'memref.subview -> ()' {
Trying to match "mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>"
    ** Insert  : 'memref.subview'(0x5759086a7410)
    ** Insert  : 'memref.cast'(0x575908673eb0)
    ** Replace : 'memref.subview'(0x57590868f680)
    ** Modified: 'memref.copy'(0x575908717060)
    ** Erase   : 'memref.subview'(0x57590868f680)
"mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>" result 1
  } -> success : pattern applied successfully
// *** IR Dump After Pattern Application ***
func.func @origin_index_select(%arg0: memref<*xf32> {tt.divisibility = 16 : i32} loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: memref<*xi32> {tt.divisibility = 16 : i32} loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: memref<*xf32> {tt.divisibility = 16 : i32} loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 {tt.divisibility = 16 : i32} loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg4: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg5: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg6: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg7: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg8: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg9: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)) {
  %c1 = arith.constant 1 : index loc(unknown)
  %c0 = arith.constant 0 : index loc(unknown)
  %c49299_i32 = arith.constant 49299 : i32 loc(unknown)
  %c1024_i32 = arith.constant 1024 : i32 loc(unknown)
  %c1024 = arith.constant 1024 : index loc(unknown)
  %c1971940 = arith.constant 1971940 : index loc(unknown)
  %c16 = arith.constant 16 : index loc(unknown)
  %c0_i32 = arith.constant 0 : i32 loc(unknown)
  %0 = arith.muli %arg7, %c49299_i32 : i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))
  %1 = arith.index_cast %0 : i32 to index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
  scf.for %arg10 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {
    %2 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %3 = arith.addi %1, %2 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
    %reinterpret_cast = memref.reinterpret_cast %arg1 to offset: [%3], sizes: [1024], strides: [1] : memref<*xi32> to memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %4 = arith.addi %1, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %5 = arith.addi %4, %2 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %6 = arith.minsi %5, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %7 = arith.maxsi %6, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %8 = arith.subi %7, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %alloc = memref.alloc() : memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %9 = arith.cmpi slt, %8, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    scf.if %9 {
      linalg.fill ins(%c0_i32 : i32) outs(%alloc : memref<1024xi32>) loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    } loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview = memref.subview %reinterpret_cast[0] [%8] [1] : memref<1024xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview_0 = memref.subview %alloc[0] [%8] [1] : memref<1024xi32> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    memref.copy %subview, %subview_0 : memref<?xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %10 = bufferization.to_tensor %alloc restrict writable : memref<1024xi32> to tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %11 = arith.minsi %8, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %alloc_1 = memref.alloc() : memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %12 = arith.minsi %11, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    scf.for %arg11 = %c0 to %12 step %c1 {
      %extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %15 = arith.index_cast %extracted : i32 to index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %16 = arith.muli %15, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %reinterpret_cast_4 = memref.reinterpret_cast %arg0 to offset: [%16], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %subview_5 = memref.subview %reinterpret_cast_4[0, 0] [1, 16] [1, 1] : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %cast = memref.cast %subview_5 : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %subview_6 = memref.subview %alloc_1[%arg11, %c0] [1, 16] [%c1, %c1] : memref<1024x16xf32> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      memref.copy %cast, %subview_6 : memref<1x16xf32, strided<[?, ?], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    } loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %13 = bufferization.to_tensor %alloc_1 restrict writable : memref<1024x16xf32> to tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %14 = arith.muli %3, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
    %reinterpret_cast_2 = memref.reinterpret_cast %arg2 to offset: [%14], sizes: [1024, 16], strides: [16, 1] : memref<*xf32> to memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
    %extracted_slice = tensor.extract_slice %13[0, 0] [%11, 16] [1, 1] : tensor<1024x16xf32> to tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
    %subview_3 = memref.subview %reinterpret_cast_2[0, 0] [%11, 16] [1, 1] : memref<1024x16xf32, strided<[16, 1], offset: ?>> to memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
    bufferization.materialize_in_destination %extracted_slice in writable %subview_3 : (tensor<?x16xf32>, memref<?x16xf32, strided<[16, 1], offset: ?>>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  } loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
  return loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)


} -> success : at least one pattern matched
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.reinterpret_cast'(0x57590870b3d0) {
  %34 = "memref.reinterpret_cast"(%arg0, %33) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: 16, 1>}> : (memref<*xf32>, index) -> memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))


  * Pattern (anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder : 'memref.reinterpret_cast -> ()' {
Trying to match "(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder"
"(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.cast'(0x575908673eb0) {
  %36 = "memref.cast"(%35) : (memref<1x16xf32, strided<[16, 1], offset: ?>>) -> memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'func.func'(0x575908715540) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x57590869db90) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759087077f0) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.subview'(0x5759086a7410) {
  %35 = "memref.subview"(%34) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: 1, 1>}> : (memref<1x16xf32, strided<[16, 1], offset: ?>>) -> memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))


  * Pattern mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer> : 'memref.subview -> ()' {
Trying to match "mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>"
"mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubViewOpMemRefCastFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::SubViewOpMemRefCastFolder"
"(anonymous namespace)::SubViewOpMemRefCastFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::TrivialSubViewOpFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::TrivialSubViewOpFolder"
    ** Replace : 'memref.subview'(0x5759086a7410)
    ** Modified: 'memref.cast'(0x575908673eb0)
    ** Erase   : 'memref.subview'(0x5759086a7410)
"(anonymous namespace)::TrivialSubViewOpFolder" result 1
  } -> success : pattern applied successfully
// *** IR Dump After Pattern Application ***
func.func @origin_index_select(%arg0: memref<*xf32> {tt.divisibility = 16 : i32} loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: memref<*xi32> {tt.divisibility = 16 : i32} loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: memref<*xf32> {tt.divisibility = 16 : i32} loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 {tt.divisibility = 16 : i32} loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg4: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg5: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg6: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg7: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg8: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg9: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)) {
  %c1 = arith.constant 1 : index loc(unknown)
  %c0 = arith.constant 0 : index loc(unknown)
  %c49299_i32 = arith.constant 49299 : i32 loc(unknown)
  %c1024_i32 = arith.constant 1024 : i32 loc(unknown)
  %c1024 = arith.constant 1024 : index loc(unknown)
  %c1971940 = arith.constant 1971940 : index loc(unknown)
  %c16 = arith.constant 16 : index loc(unknown)
  %c0_i32 = arith.constant 0 : i32 loc(unknown)
  %0 = arith.muli %arg7, %c49299_i32 : i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))
  %1 = arith.index_cast %0 : i32 to index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
  scf.for %arg10 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {
    %2 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %3 = arith.addi %1, %2 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
    %reinterpret_cast = memref.reinterpret_cast %arg1 to offset: [%3], sizes: [1024], strides: [1] : memref<*xi32> to memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %4 = arith.addi %1, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %5 = arith.addi %4, %2 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %6 = arith.minsi %5, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %7 = arith.maxsi %6, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %8 = arith.subi %7, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %alloc = memref.alloc() : memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %9 = arith.cmpi slt, %8, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    scf.if %9 {
      linalg.fill ins(%c0_i32 : i32) outs(%alloc : memref<1024xi32>) loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    } loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview = memref.subview %reinterpret_cast[0] [%8] [1] : memref<1024xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview_0 = memref.subview %alloc[0] [%8] [1] : memref<1024xi32> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    memref.copy %subview, %subview_0 : memref<?xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %10 = bufferization.to_tensor %alloc restrict writable : memref<1024xi32> to tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %11 = arith.minsi %8, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %alloc_1 = memref.alloc() : memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %12 = arith.minsi %11, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    scf.for %arg11 = %c0 to %12 step %c1 {
      %extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %15 = arith.index_cast %extracted : i32 to index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %16 = arith.muli %15, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %reinterpret_cast_4 = memref.reinterpret_cast %arg0 to offset: [%16], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %cast = memref.cast %reinterpret_cast_4 : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %subview_5 = memref.subview %alloc_1[%arg11, %c0] [1, 16] [%c1, %c1] : memref<1024x16xf32> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      memref.copy %cast, %subview_5 : memref<1x16xf32, strided<[?, ?], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    } loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %13 = bufferization.to_tensor %alloc_1 restrict writable : memref<1024x16xf32> to tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %14 = arith.muli %3, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
    %reinterpret_cast_2 = memref.reinterpret_cast %arg2 to offset: [%14], sizes: [1024, 16], strides: [16, 1] : memref<*xf32> to memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
    %extracted_slice = tensor.extract_slice %13[0, 0] [%11, 16] [1, 1] : tensor<1024x16xf32> to tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
    %subview_3 = memref.subview %reinterpret_cast_2[0, 0] [%11, 16] [1, 1] : memref<1024x16xf32, strided<[16, 1], offset: ?>> to memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
    bufferization.materialize_in_destination %extracted_slice in writable %subview_3 : (tensor<?x16xf32>, memref<?x16xf32, strided<[16, 1], offset: ?>>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  } loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
  return loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)


} -> success : at least one pattern matched
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.reinterpret_cast'(0x57590870b3d0) {
  %34 = "memref.reinterpret_cast"(%arg0, %33) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: 16, 1>}> : (memref<*xf32>, index) -> memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))


  * Pattern (anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder : 'memref.reinterpret_cast -> ()' {
Trying to match "(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder"
"(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'func.func'(0x575908715540) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x57590869db90) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759087077f0) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.cast'(0x575908673eb0) {
  %35 = "memref.cast"(%34) : (memref<1x16xf32, strided<[16, 1], offset: ?>>) -> memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.subview'(0x575908716f10) {
  %36 = "memref.subview"(%24, %arg11, %1, %0, %0) <{operandSegmentSizes = array<i32: 1, 2, 0, 2>, static_offsets = array<i64: -9223372036854775808, -9223372036854775808>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: -9223372036854775808, -9223372036854775808>}> : (memref<1024x16xf32>, index, index, index, index) -> memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))


  * Pattern mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer> : 'memref.subview -> ()' {
Trying to match "mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>"
    ** Insert  : 'memref.subview'(0x57590867ae70)
    ** Insert  : 'memref.cast'(0x5759087176e0)
    ** Replace : 'memref.subview'(0x575908716f10)
    ** Modified: 'memref.copy'(0x575908717060)
    ** Erase   : 'memref.subview'(0x575908716f10)
"mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>" result 1
  } -> success : pattern applied successfully
// *** IR Dump After Pattern Application ***
func.func @origin_index_select(%arg0: memref<*xf32> {tt.divisibility = 16 : i32} loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: memref<*xi32> {tt.divisibility = 16 : i32} loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: memref<*xf32> {tt.divisibility = 16 : i32} loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 {tt.divisibility = 16 : i32} loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg4: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg5: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg6: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg7: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg8: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg9: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)) {
  %c1 = arith.constant 1 : index loc(unknown)
  %c0 = arith.constant 0 : index loc(unknown)
  %c49299_i32 = arith.constant 49299 : i32 loc(unknown)
  %c1024_i32 = arith.constant 1024 : i32 loc(unknown)
  %c1024 = arith.constant 1024 : index loc(unknown)
  %c1971940 = arith.constant 1971940 : index loc(unknown)
  %c16 = arith.constant 16 : index loc(unknown)
  %c0_i32 = arith.constant 0 : i32 loc(unknown)
  %0 = arith.muli %arg7, %c49299_i32 : i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))
  %1 = arith.index_cast %0 : i32 to index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
  scf.for %arg10 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {
    %2 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %3 = arith.addi %1, %2 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
    %reinterpret_cast = memref.reinterpret_cast %arg1 to offset: [%3], sizes: [1024], strides: [1] : memref<*xi32> to memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %4 = arith.addi %1, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %5 = arith.addi %4, %2 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %6 = arith.minsi %5, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %7 = arith.maxsi %6, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %8 = arith.subi %7, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %alloc = memref.alloc() : memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %9 = arith.cmpi slt, %8, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    scf.if %9 {
      linalg.fill ins(%c0_i32 : i32) outs(%alloc : memref<1024xi32>) loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    } loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview = memref.subview %reinterpret_cast[0] [%8] [1] : memref<1024xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview_0 = memref.subview %alloc[0] [%8] [1] : memref<1024xi32> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    memref.copy %subview, %subview_0 : memref<?xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %10 = bufferization.to_tensor %alloc restrict writable : memref<1024xi32> to tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %11 = arith.minsi %8, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %alloc_1 = memref.alloc() : memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %12 = arith.minsi %11, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    scf.for %arg11 = %c0 to %12 step %c1 {
      %extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %15 = arith.index_cast %extracted : i32 to index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %16 = arith.muli %15, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %reinterpret_cast_4 = memref.reinterpret_cast %arg0 to offset: [%16], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %cast = memref.cast %reinterpret_cast_4 : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %subview_5 = memref.subview %alloc_1[%arg11, 0] [1, 16] [%c1, %c1] : memref<1024x16xf32> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %cast_6 = memref.cast %subview_5 : memref<1x16xf32, strided<[?, ?], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      memref.copy %cast, %cast_6 : memref<1x16xf32, strided<[?, ?], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    } loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %13 = bufferization.to_tensor %alloc_1 restrict writable : memref<1024x16xf32> to tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %14 = arith.muli %3, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
    %reinterpret_cast_2 = memref.reinterpret_cast %arg2 to offset: [%14], sizes: [1024, 16], strides: [16, 1] : memref<*xf32> to memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
    %extracted_slice = tensor.extract_slice %13[0, 0] [%11, 16] [1, 1] : tensor<1024x16xf32> to tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
    %subview_3 = memref.subview %reinterpret_cast_2[0, 0] [%11, 16] [1, 1] : memref<1024x16xf32, strided<[16, 1], offset: ?>> to memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
    bufferization.materialize_in_destination %extracted_slice in writable %subview_3 : (tensor<?x16xf32>, memref<?x16xf32, strided<[16, 1], offset: ?>>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  } loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
  return loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)


} -> success : at least one pattern matched
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x575908721000) {
  %1 = "arith.constant"() <{value = 0 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.cast'(0x5759087176e0) {
  %37 = "memref.cast"(%36) : (memref<1x16xf32, strided<[?, ?], offset: ?>>) -> memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> success : operation was folded
//===-------------------------------------------===//
** Replace : 'memref.cast'(0x5759087176e0)
** Modified: 'memref.copy'(0x575908717060)
** Erase   : 'memref.cast'(0x5759087176e0)
// *** IR Dump After Successful Folding ***
scf.for %arg11 = %c0 to %12 step %c1 {
  %extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %15 = arith.index_cast %extracted : i32 to index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %16 = arith.muli %15, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
  %reinterpret_cast_4 = memref.reinterpret_cast %arg0 to offset: [%16], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
  %cast = memref.cast %reinterpret_cast_4 : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %subview_5 = memref.subview %alloc_1[%arg11, 0] [1, 16] [%c1, %c1] : memref<1024x16xf32> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  memref.copy %cast, %subview_5 : memref<1x16xf32, strided<[?, ?], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
} loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))



//===-------------------------------------------===//
Processing operation : 'func.func'(0x575908715540) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x57590869db90) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759087077f0) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.subview'(0x57590867ae70) {
  %36 = "memref.subview"(%24, %arg11, %0, %0) <{operandSegmentSizes = array<i32: 1, 1, 0, 2>, static_offsets = array<i64: -9223372036854775808, 0>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: -9223372036854775808, -9223372036854775808>}> : (memref<1024x16xf32>, index, index, index) -> memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))


  * Pattern mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer> : 'memref.subview -> ()' {
Trying to match "mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>"
    ** Insert  : 'memref.subview'(0x5759087132e0)
    ** Insert  : 'memref.cast'(0x5759087176e0)
    ** Replace : 'memref.subview'(0x57590867ae70)
    ** Modified: 'memref.copy'(0x575908717060)
    ** Erase   : 'memref.subview'(0x57590867ae70)
"mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>" result 1
  } -> success : pattern applied successfully
// *** IR Dump After Pattern Application ***
func.func @origin_index_select(%arg0: memref<*xf32> {tt.divisibility = 16 : i32} loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: memref<*xi32> {tt.divisibility = 16 : i32} loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: memref<*xf32> {tt.divisibility = 16 : i32} loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 {tt.divisibility = 16 : i32} loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg4: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg5: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg6: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg7: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg8: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg9: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)) {
  %c1 = arith.constant 1 : index loc(unknown)
  %c0 = arith.constant 0 : index loc(unknown)
  %c49299_i32 = arith.constant 49299 : i32 loc(unknown)
  %c1024_i32 = arith.constant 1024 : i32 loc(unknown)
  %c1024 = arith.constant 1024 : index loc(unknown)
  %c1971940 = arith.constant 1971940 : index loc(unknown)
  %c16 = arith.constant 16 : index loc(unknown)
  %c0_i32 = arith.constant 0 : i32 loc(unknown)
  %0 = arith.muli %arg7, %c49299_i32 : i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))
  %1 = arith.index_cast %0 : i32 to index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
  scf.for %arg10 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {
    %2 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %3 = arith.addi %1, %2 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
    %reinterpret_cast = memref.reinterpret_cast %arg1 to offset: [%3], sizes: [1024], strides: [1] : memref<*xi32> to memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
    %4 = arith.addi %1, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %5 = arith.addi %4, %2 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %6 = arith.minsi %5, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %7 = arith.maxsi %6, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %8 = arith.subi %7, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %alloc = memref.alloc() : memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %9 = arith.cmpi slt, %8, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    scf.if %9 {
      linalg.fill ins(%c0_i32 : i32) outs(%alloc : memref<1024xi32>) loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    } loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview = memref.subview %reinterpret_cast[0] [%8] [1] : memref<1024xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %subview_0 = memref.subview %alloc[0] [%8] [1] : memref<1024xi32> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    memref.copy %subview, %subview_0 : memref<?xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %10 = bufferization.to_tensor %alloc restrict writable : memref<1024xi32> to tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
    %11 = arith.minsi %8, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %alloc_1 = memref.alloc() : memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %12 = arith.minsi %11, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    scf.for %arg11 = %c0 to %12 step %c1 {
      %extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %15 = arith.index_cast %extracted : i32 to index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %16 = arith.muli %15, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %reinterpret_cast_4 = memref.reinterpret_cast %arg0 to offset: [%16], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
      %cast = memref.cast %reinterpret_cast_4 : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %subview_5 = memref.subview %alloc_1[%arg11, 0] [1, 16] [1, 1] : memref<1024x16xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      %cast_6 = memref.cast %subview_5 : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
      memref.copy %cast, %cast_6 : memref<1x16xf32, strided<[?, ?], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    } loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %13 = bufferization.to_tensor %alloc_1 restrict writable : memref<1024x16xf32> to tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %14 = arith.muli %3, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
    %reinterpret_cast_2 = memref.reinterpret_cast %arg2 to offset: [%14], sizes: [1024, 16], strides: [16, 1] : memref<*xf32> to memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
    %extracted_slice = tensor.extract_slice %13[0, 0] [%11, 16] [1, 1] : tensor<1024x16xf32> to tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
    %subview_3 = memref.subview %reinterpret_cast_2[0, 0] [%11, 16] [1, 1] : memref<1024x16xf32, strided<[16, 1], offset: ?>> to memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
    bufferization.materialize_in_destination %extracted_slice in writable %subview_3 : (tensor<?x16xf32>, memref<?x16xf32, strided<[16, 1], offset: ?>>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  } loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
  return loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)


} -> success : at least one pattern matched
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590871ba70) {
  %0 = "arith.constant"() <{value = 1 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.cast'(0x5759087176e0) {
  %37 = "memref.cast"(%36) : (memref<1x16xf32, strided<[16, 1], offset: ?>>) -> memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'func.func'(0x575908715540) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x57590869db90) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759087077f0) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.subview'(0x5759087132e0) {
  %36 = "memref.subview"(%24, %arg11) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808, 0>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: 1, 1>}> : (memref<1024x16xf32>, index) -> memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))


  * Pattern mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer> : 'memref.subview -> ()' {
Trying to match "mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>"
"mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubViewOpMemRefCastFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::SubViewOpMemRefCastFolder"
"(anonymous namespace)::SubViewOpMemRefCastFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::TrivialSubViewOpFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::TrivialSubViewOpFolder"
"(anonymous namespace)::TrivialSubViewOpFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.copy'(0x575908717060) {
  "memref.copy"(%35, %37) : (memref<1x16xf32, strided<[?, ?], offset: ?>>, memref<1x16xf32, strided<[?, ?], offset: ?>>) -> () loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> success : operation was folded
//===-------------------------------------------===//
** Modified: 'memref.copy'(0x575908717060)
// *** IR Dump After Successful Folding ***
scf.for %arg11 = %c0 to %12 step %c1 {
  %extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %15 = arith.index_cast %extracted : i32 to index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %16 = arith.muli %15, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
  %reinterpret_cast_4 = memref.reinterpret_cast %arg0 to offset: [%16], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
  %cast = memref.cast %reinterpret_cast_4 : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %subview_5 = memref.subview %alloc_1[%arg11, 0] [1, 16] [1, 1] : memref<1024x16xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %cast_6 = memref.cast %subview_5 : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[?, ?], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  memref.copy %reinterpret_cast_4, %subview_5 : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
} loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))



//===-------------------------------------------===//
Processing operation : 'func.func'(0x575908715540) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x57590869db90) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759087077f0) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.copy'(0x575908717060) {
  "memref.copy"(%34, %36) : (memref<1x16xf32, strided<[16, 1], offset: ?>>, memref<1x16xf32, strided<[16, 1], offset: ?>>) -> () loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))


  * Pattern (anonymous namespace)::FoldCopyOfCast : 'memref.copy -> ()' {
Trying to match "(anonymous namespace)::FoldCopyOfCast"
"(anonymous namespace)::FoldCopyOfCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::FoldEmptyCopy : 'memref.copy -> ()' {
Trying to match "(anonymous namespace)::FoldEmptyCopy"
"(anonymous namespace)::FoldEmptyCopy" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::FoldSelfCopy : 'memref.copy -> ()' {
Trying to match "(anonymous namespace)::FoldSelfCopy"
"(anonymous namespace)::FoldSelfCopy" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.yield'(0x575908684a80) {
  "scf.yield"() : () -> () loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'bufferization.to_tensor'(0x57590871ade0) {
  %26 = "bufferization.to_tensor"(%24) <{restrict, writable}> : (memref<1024x16xf32>) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x5759086a5190) {
  %27 = "arith.muli"(%11, %6) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)


  * Pattern (anonymous namespace)::MulIMulIConstant : 'arith.muli -> (arith.constant, arith.muli)' {
Trying to match "(anonymous namespace)::MulIMulIConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::MulIMulIConstant" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.reinterpret_cast'(0x575908715ea0) {
  %28 = "memref.reinterpret_cast"(%arg2, %27) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1024, 16>, static_strides = array<i64: 16, 1>}> : (memref<*xf32>, index) -> memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)


  * Pattern (anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder : 'memref.reinterpret_cast -> ()' {
Trying to match "(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder"
"(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tensor.extract_slice'(0x575908715f70) {
  %29 = "tensor.extract_slice"(%26, %23) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0, 0>, static_sizes = array<i64: -9223372036854775808, 16>, static_strides = array<i64: 1, 1>}> : (tensor<1024x16xf32>, index) -> tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)


  * Pattern mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::tensor::ExtractSliceOp, SliceReturnTypeCanonicalizer, SliceCanonicalizer> : 'tensor.extract_slice -> ()' {
Trying to match "mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::tensor::ExtractSliceOp, SliceReturnTypeCanonicalizer, SliceCanonicalizer>"
"mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::tensor::ExtractSliceOp, SliceReturnTypeCanonicalizer, SliceCanonicalizer>" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ExtractSliceOpCastFolder : 'tensor.extract_slice -> ()' {
Trying to match "(anonymous namespace)::ExtractSliceOpCastFolder"
"(anonymous namespace)::ExtractSliceOpCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.subview'(0x575908716040) {
  %30 = "memref.subview"(%28, %23) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0, 0>, static_sizes = array<i64: -9223372036854775808, 16>, static_strides = array<i64: 1, 1>}> : (memref<1024x16xf32, strided<[16, 1], offset: ?>>, index) -> memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)


  * Pattern mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer> : 'memref.subview -> ()' {
Trying to match "mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>"
"mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubViewOpMemRefCastFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::SubViewOpMemRefCastFolder"
"(anonymous namespace)::SubViewOpMemRefCastFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::TrivialSubViewOpFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::TrivialSubViewOpFolder"
"(anonymous namespace)::TrivialSubViewOpFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'bufferization.materialize_in_destination'(0x575908711c30) {
  "bufferization.materialize_in_destination"(%29, %30) <{writable}> : (tensor<?x16xf32>, memref<?x16xf32, strided<[16, 1], offset: ?>>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)


  * Pattern FoldTensorCastProducerOp : 'bufferization.materialize_in_destination -> ()' {
Trying to match "FoldTensorCastProducerOp"
"FoldTensorCastProducerOp" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.yield'(0x5759086ad740) {
  "scf.yield"() : () -> () loc("input.mlir":29:5)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'func.return'(0x5759086ab810) {
  "func.return"() : () -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)

} -> failure : all patterns failed to match
//===-------------------------------------------===//
** Erase   : 'memref.cast'(0x5759087176e0)
** Erase   : 'memref.cast'(0x575908673eb0)

//===-------------------------------------------===//
Processing operation : 'func.func'(0x575908715540) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590871ba70) {
  %0 = "arith.constant"() <{value = 1 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x575908721000) {
  %1 = "arith.constant"() <{value = 0 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759086a90a0) {
  %2 = "arith.constant"() <{value = 49299 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759086a4fb0) {
  %3 = "arith.constant"() <{value = 1024 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x575908707790) {
  %4 = "arith.constant"() <{value = 1024 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x575908710040) {
  %5 = "arith.constant"() <{value = 1971940 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869f3f0) {
  %6 = "arith.constant"() <{value = 16 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869c880) {
  %7 = "arith.constant"() <{value = 0 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x5759086a93b0) {
  %8 = "arith.muli"(%arg7, %2) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))


  * Pattern (anonymous namespace)::MulIMulIConstant : 'arith.muli -> (arith.constant, arith.muli)' {
Trying to match "(anonymous namespace)::MulIMulIConstant"
    ** Match Failure : There's no operation that defines operand 0 of castedOp0
"(anonymous namespace)::MulIMulIConstant" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x57590869b6d0) {
  %9 = "arith.index_cast"(%8) : (i32) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)


  * Pattern (anonymous namespace)::IndexCastOfIndexCast : 'arith.index_cast -> ()' {
Trying to match "(anonymous namespace)::IndexCastOfIndexCast"
    ** Match Failure : castedOp1 is not ::mlir::arith::IndexCastOp type
"(anonymous namespace)::IndexCastOfIndexCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::IndexCastOfExtSI : 'arith.index_cast -> (arith.index_cast)' {
Trying to match "(anonymous namespace)::IndexCastOfExtSI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtSIOp type
"(anonymous namespace)::IndexCastOfExtSI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x57590869db90) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x5759086a92c0) {
  %10 = "arith.index_cast"(%arg10) : (i32) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))


  * Pattern (anonymous namespace)::IndexCastOfIndexCast : 'arith.index_cast -> ()' {
Trying to match "(anonymous namespace)::IndexCastOfIndexCast"
    ** Match Failure : There's no operation that defines operand 0 of castedOp0
"(anonymous namespace)::IndexCastOfIndexCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::IndexCastOfExtSI : 'arith.index_cast -> (arith.index_cast)' {
Trying to match "(anonymous namespace)::IndexCastOfExtSI"
    ** Match Failure : There's no operation that defines operand 0 of castedOp0
"(anonymous namespace)::IndexCastOfExtSI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x5759086a7f50) {
  %11 = "arith.addi"(%9, %10) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))


  * Pattern (anonymous namespace)::AddIAddConstant : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddIAddConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::AddIOp type
"(anonymous namespace)::AddIAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantRHS : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddISubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantLHS : 'arith.addi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::AddISubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneRhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneRhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneRhs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneLhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneLhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneLhs" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.reinterpret_cast'(0x5759086a7d10) {
  %12 = "memref.reinterpret_cast"(%arg1, %11) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1024>, static_strides = array<i64: 1>}> : (memref<*xi32>, index) -> memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))


  * Pattern (anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder : 'memref.reinterpret_cast -> ()' {
Trying to match "(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder"
"(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x57590869e5a0) {
  %13 = "arith.addi"(%9, %4) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::AddIAddConstant : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddIAddConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::AddIOp type
"(anonymous namespace)::AddIAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantRHS : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddISubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantLHS : 'arith.addi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::AddISubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneRhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneRhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneRhs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneLhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneLhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneLhs" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x575908717a70) {
  %14 = "arith.addi"(%13, %10) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::AddIAddConstant : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddIAddConstant"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::AddIAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantRHS : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddISubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantLHS : 'arith.addi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::AddISubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneRhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneRhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneRhs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneLhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneLhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneLhs" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.minsi'(0x5759086a5280) {
  %15 = "arith.minsi"(%14, %5) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.maxsi'(0x57590869fe20) {
  %16 = "arith.maxsi"(%15, %11) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.subi'(0x57590871b390) {
  %17 = "arith.subi"(%16, %11) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::SubIRHSAddConstant : 'arith.subi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::SubIRHSAddConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::AddIOp type
"(anonymous namespace)::SubIRHSAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubILHSAddConstant : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubILHSAddConstant"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::SubILHSAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubIRHSSubConstantRHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubIRHSSubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::SubIRHSSubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubIRHSSubConstantLHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubIRHSSubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::SubIRHSSubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubILHSSubConstantRHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubILHSSubConstantRHS"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::SubILHSSubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubILHSSubConstantLHS : 'arith.subi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::SubILHSSubConstantLHS"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::SubILHSSubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubISubILHSRHSLHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubISubILHSRHSLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::SubISubILHSRHSLHS" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.alloc'(0x575908709470) {
  %18 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::SimplifyAllocConst<mlir::memref::AllocOp> : 'memref.alloc -> ()' {
Trying to match "(anonymous namespace)::SimplifyAllocConst<mlir::memref::AllocOp>"
"(anonymous namespace)::SimplifyAllocConst<mlir::memref::AllocOp>" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyDeadAlloc<mlir::memref::AllocOp> : 'memref.alloc -> ()' {
Trying to match "(anonymous namespace)::SimplifyDeadAlloc<mlir::memref::AllocOp>"
"(anonymous namespace)::SimplifyDeadAlloc<mlir::memref::AllocOp>" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.cmpi'(0x57590871b5f0) {
  %19 = "arith.cmpi"(%17, %4) <{predicate = 2 : i64}> : (index, index) -> i1 loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::CmpIExtSI : 'arith.cmpi -> (arith.cmpi)' {
Trying to match "(anonymous namespace)::CmpIExtSI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtSIOp type
"(anonymous namespace)::CmpIExtSI" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::CmpIExtUI : 'arith.cmpi -> (arith.cmpi)' {
Trying to match "(anonymous namespace)::CmpIExtUI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtUIOp type
"(anonymous namespace)::CmpIExtUI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.if'(0x57590871b3f0) {

  * Pattern (anonymous namespace)::CombineIfs : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::CombineIfs"
"(anonymous namespace)::CombineIfs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::CombineNestedIfs : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::CombineNestedIfs"
"(anonymous namespace)::CombineNestedIfs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ConditionPropagation : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::ConditionPropagation"
"(anonymous namespace)::ConditionPropagation" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ConvertTrivialIfToSelect : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::ConvertTrivialIfToSelect"
"(anonymous namespace)::ConvertTrivialIfToSelect" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::RemoveEmptyElseBranch : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::RemoveEmptyElseBranch"
"(anonymous namespace)::RemoveEmptyElseBranch" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::RemoveStaticCondition : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::RemoveStaticCondition"
"(anonymous namespace)::RemoveStaticCondition" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::RemoveUnusedResults : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::RemoveUnusedResults"
"(anonymous namespace)::RemoveUnusedResults" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ReplaceIfYieldWithConditionOrValue : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::ReplaceIfYieldWithConditionOrValue"
"(anonymous namespace)::ReplaceIfYieldWithConditionOrValue" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'linalg.fill'(0x57590870bb80) {

  * Pattern FoldTensorCastProducerOp : 'linalg.fill -> ()' {
Trying to match "FoldTensorCastProducerOp"
"FoldTensorCastProducerOp" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::EraseDeadLinalgOp : 'linalg.fill -> ()' {
Trying to match "(anonymous namespace)::EraseDeadLinalgOp"
"(anonymous namespace)::EraseDeadLinalgOp" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::InferStaticShapeOfOperands : 'linalg.fill -> ()' {
Trying to match "(anonymous namespace)::InferStaticShapeOfOperands"
"(anonymous namespace)::InferStaticShapeOfOperands" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'linalg.yield'(0x575908713b00) {
  "linalg.yield"(%arg12) : (i32) -> () loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.yield'(0x5759086839f0) {
  "scf.yield"() : () -> () loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.subview'(0x57590869f460) {
  %20 = "memref.subview"(%12, %17) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0>, static_sizes = array<i64: -9223372036854775808>, static_strides = array<i64: 1>}> : (memref<1024xi32, strided<[1], offset: ?>>, index) -> memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer> : 'memref.subview -> ()' {
Trying to match "mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>"
"mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubViewOpMemRefCastFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::SubViewOpMemRefCastFolder"
"(anonymous namespace)::SubViewOpMemRefCastFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::TrivialSubViewOpFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::TrivialSubViewOpFolder"
"(anonymous namespace)::TrivialSubViewOpFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.subview'(0x57590869b2c0) {
  %21 = "memref.subview"(%18, %17) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0>, static_sizes = array<i64: -9223372036854775808>, static_strides = array<i64: 1>}> : (memref<1024xi32>, index) -> memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer> : 'memref.subview -> ()' {
Trying to match "mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>"
"mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubViewOpMemRefCastFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::SubViewOpMemRefCastFolder"
"(anonymous namespace)::SubViewOpMemRefCastFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::TrivialSubViewOpFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::TrivialSubViewOpFolder"
"(anonymous namespace)::TrivialSubViewOpFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.copy'(0x57590870b840) {
  "memref.copy"(%20, %21) : (memref<?xi32, strided<[1], offset: ?>>, memref<?xi32, strided<[1]>>) -> () loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::FoldCopyOfCast : 'memref.copy -> ()' {
Trying to match "(anonymous namespace)::FoldCopyOfCast"
"(anonymous namespace)::FoldCopyOfCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::FoldEmptyCopy : 'memref.copy -> ()' {
Trying to match "(anonymous namespace)::FoldEmptyCopy"
"(anonymous namespace)::FoldEmptyCopy" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::FoldSelfCopy : 'memref.copy -> ()' {
Trying to match "(anonymous namespace)::FoldSelfCopy"
"(anonymous namespace)::FoldSelfCopy" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'bufferization.to_tensor'(0x5759087101c0) {
  %22 = "bufferization.to_tensor"(%18) <{restrict, writable}> : (memref<1024xi32>) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.minsi'(0x5759086a3ae0) {
  %23 = "arith.minsi"(%17, %4) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.alloc'(0x5759087212b0) {
  %24 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))


  * Pattern (anonymous namespace)::SimplifyAllocConst<mlir::memref::AllocOp> : 'memref.alloc -> ()' {
Trying to match "(anonymous namespace)::SimplifyAllocConst<mlir::memref::AllocOp>"
"(anonymous namespace)::SimplifyAllocConst<mlir::memref::AllocOp>" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyDeadAlloc<mlir::memref::AllocOp> : 'memref.alloc -> ()' {
Trying to match "(anonymous namespace)::SimplifyDeadAlloc<mlir::memref::AllocOp>"
"(anonymous namespace)::SimplifyDeadAlloc<mlir::memref::AllocOp>" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.minsi'(0x57590867c100) {
  %25 = "arith.minsi"(%23, %4) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759087077f0) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tensor.extract'(0x57590871b540) {
  %31 = "tensor.extract"(%22, %arg11) : (tensor<1024xi32>, index) -> i32 loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))


  * Pattern (anonymous namespace)::FoldFillWithTensorExtract : 'tensor.extract -> ()' {
Trying to match "(anonymous namespace)::FoldFillWithTensorExtract"
"(anonymous namespace)::FoldFillWithTensorExtract" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ExtractFromTensorGenerate : 'tensor.extract -> ()' {
Trying to match "(anonymous namespace)::ExtractFromTensorGenerate"
"(anonymous namespace)::ExtractFromTensorGenerate" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ExtractElementFromIndexCast : 'tensor.extract -> ()' {
Trying to match "(anonymous namespace)::ExtractElementFromIndexCast"
"(anonymous namespace)::ExtractElementFromIndexCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ExtractFromTensorCast : 'tensor.extract -> ()' {
Trying to match "(anonymous namespace)::ExtractFromTensorCast"
"(anonymous namespace)::ExtractFromTensorCast" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x5759087021d0) {
  %32 = "arith.index_cast"(%31) : (i32) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))


  * Pattern (anonymous namespace)::IndexCastOfIndexCast : 'arith.index_cast -> ()' {
Trying to match "(anonymous namespace)::IndexCastOfIndexCast"
    ** Match Failure : castedOp1 is not ::mlir::arith::IndexCastOp type
"(anonymous namespace)::IndexCastOfIndexCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::IndexCastOfExtSI : 'arith.index_cast -> (arith.index_cast)' {
Trying to match "(anonymous namespace)::IndexCastOfExtSI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtSIOp type
"(anonymous namespace)::IndexCastOfExtSI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x57590870fee0) {
  %33 = "arith.muli"(%32, %6) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))


  * Pattern (anonymous namespace)::MulIMulIConstant : 'arith.muli -> (arith.constant, arith.muli)' {
Trying to match "(anonymous namespace)::MulIMulIConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::MulIMulIConstant" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.reinterpret_cast'(0x57590870b3d0) {
  %34 = "memref.reinterpret_cast"(%arg0, %33) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: 16, 1>}> : (memref<*xf32>, index) -> memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))


  * Pattern (anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder : 'memref.reinterpret_cast -> ()' {
Trying to match "(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder"
"(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.subview'(0x5759087132e0) {
  %35 = "memref.subview"(%24, %arg11) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808, 0>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: 1, 1>}> : (memref<1024x16xf32>, index) -> memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))


  * Pattern mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer> : 'memref.subview -> ()' {
Trying to match "mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>"
"mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubViewOpMemRefCastFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::SubViewOpMemRefCastFolder"
"(anonymous namespace)::SubViewOpMemRefCastFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::TrivialSubViewOpFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::TrivialSubViewOpFolder"
"(anonymous namespace)::TrivialSubViewOpFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.copy'(0x575908717060) {
  "memref.copy"(%34, %35) : (memref<1x16xf32, strided<[16, 1], offset: ?>>, memref<1x16xf32, strided<[16, 1], offset: ?>>) -> () loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))


  * Pattern (anonymous namespace)::FoldCopyOfCast : 'memref.copy -> ()' {
Trying to match "(anonymous namespace)::FoldCopyOfCast"
"(anonymous namespace)::FoldCopyOfCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::FoldEmptyCopy : 'memref.copy -> ()' {
Trying to match "(anonymous namespace)::FoldEmptyCopy"
"(anonymous namespace)::FoldEmptyCopy" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::FoldSelfCopy : 'memref.copy -> ()' {
Trying to match "(anonymous namespace)::FoldSelfCopy"
"(anonymous namespace)::FoldSelfCopy" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.yield'(0x575908684a80) {
  "scf.yield"() : () -> () loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'bufferization.to_tensor'(0x57590871ade0) {
  %26 = "bufferization.to_tensor"(%24) <{restrict, writable}> : (memref<1024x16xf32>) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x5759086a5190) {
  %27 = "arith.muli"(%11, %6) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)


  * Pattern (anonymous namespace)::MulIMulIConstant : 'arith.muli -> (arith.constant, arith.muli)' {
Trying to match "(anonymous namespace)::MulIMulIConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::MulIMulIConstant" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.reinterpret_cast'(0x575908715ea0) {
  %28 = "memref.reinterpret_cast"(%arg2, %27) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1024, 16>, static_strides = array<i64: 16, 1>}> : (memref<*xf32>, index) -> memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)


  * Pattern (anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder : 'memref.reinterpret_cast -> ()' {
Trying to match "(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder"
"(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tensor.extract_slice'(0x575908715f70) {
  %29 = "tensor.extract_slice"(%26, %23) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0, 0>, static_sizes = array<i64: -9223372036854775808, 16>, static_strides = array<i64: 1, 1>}> : (tensor<1024x16xf32>, index) -> tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)


  * Pattern mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::tensor::ExtractSliceOp, SliceReturnTypeCanonicalizer, SliceCanonicalizer> : 'tensor.extract_slice -> ()' {
Trying to match "mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::tensor::ExtractSliceOp, SliceReturnTypeCanonicalizer, SliceCanonicalizer>"
"mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::tensor::ExtractSliceOp, SliceReturnTypeCanonicalizer, SliceCanonicalizer>" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ExtractSliceOpCastFolder : 'tensor.extract_slice -> ()' {
Trying to match "(anonymous namespace)::ExtractSliceOpCastFolder"
"(anonymous namespace)::ExtractSliceOpCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.subview'(0x575908716040) {
  %30 = "memref.subview"(%28, %23) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0, 0>, static_sizes = array<i64: -9223372036854775808, 16>, static_strides = array<i64: 1, 1>}> : (memref<1024x16xf32, strided<[16, 1], offset: ?>>, index) -> memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)


  * Pattern mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer> : 'memref.subview -> ()' {
Trying to match "mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>"
"mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubViewOpMemRefCastFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::SubViewOpMemRefCastFolder"
"(anonymous namespace)::SubViewOpMemRefCastFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::TrivialSubViewOpFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::TrivialSubViewOpFolder"
"(anonymous namespace)::TrivialSubViewOpFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'bufferization.materialize_in_destination'(0x575908711c30) {
  "bufferization.materialize_in_destination"(%29, %30) <{writable}> : (tensor<?x16xf32>, memref<?x16xf32, strided<[16, 1], offset: ?>>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)


  * Pattern FoldTensorCastProducerOp : 'bufferization.materialize_in_destination -> ()' {
Trying to match "FoldTensorCastProducerOp"
"FoldTensorCastProducerOp" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.yield'(0x5759086ad740) {
  "scf.yield"() : () -> () loc("input.mlir":29:5)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'func.return'(0x5759086ab810) {
  "func.return"() : () -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'builtin.module'(0x57590869a350) {
  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.func'(0x575908715540) {
  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590871ba70) {
  %0 = "arith.constant"() <{value = 1 : index}> : () -> index loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x575908721000) {
  %1 = "arith.constant"() <{value = 0 : index}> : () -> index loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5759086a90a0) {
  %2 = "arith.constant"() <{value = 49299 : i32}> : () -> i32 loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5759086a4fb0) {
  %3 = "arith.constant"() <{value = 1024 : i32}> : () -> i32 loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x575908707790) {
  %4 = "arith.constant"() <{value = 1024 : index}> : () -> index loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x575908710040) {
  %5 = "arith.constant"() <{value = 1971940 : index}> : () -> index loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590869f3f0) {
  %6 = "arith.constant"() <{value = 16 : index}> : () -> index loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x57590869c880) {
  %7 = "arith.constant"() <{value = 0 : i32}> : () -> i32 loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x5759086a93b0) {
  %8 = "arith.muli"(%arg7, %2) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x57590869b6d0) {
  %9 = "arith.index_cast"(%8) : (i32) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.for'(0x57590869db90) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x5759086a92c0) {
  %10 = "arith.index_cast"(%arg10) : (i32) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x5759086a7f50) {
  %11 = "arith.addi"(%9, %10) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.reinterpret_cast'(0x5759086a7d10) {
  %12 = "memref.reinterpret_cast"(%arg1, %11) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1024>, static_strides = array<i64: 1>}> : (memref<*xi32>, index) -> memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x57590869e5a0) {
  %13 = "arith.addi"(%9, %4) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x575908717a70) {
  %14 = "arith.addi"(%13, %10) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.minsi'(0x5759086a5280) {
  %15 = "arith.minsi"(%14, %5) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.maxsi'(0x57590869fe20) {
  %16 = "arith.maxsi"(%15, %11) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.subi'(0x57590871b390) {
  %17 = "arith.subi"(%16, %11) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.alloc'(0x575908709470) {
  %18 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x57590871b5f0) {
  %19 = "arith.cmpi"(%17, %4) <{predicate = 2 : i64}> : (index, index) -> i1 loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x57590871b3f0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'linalg.fill'(0x57590870bb80) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'linalg.yield'(0x575908713b00) {
  "linalg.yield"(%arg12) : (i32) -> () loc(unknown)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x5759086839f0) {
  "scf.yield"() : () -> () loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.subview'(0x57590869f460) {
  %20 = "memref.subview"(%12, %17) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0>, static_sizes = array<i64: -9223372036854775808>, static_strides = array<i64: 1>}> : (memref<1024xi32, strided<[1], offset: ?>>, index) -> memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.subview'(0x57590869b2c0) {
  %21 = "memref.subview"(%18, %17) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0>, static_sizes = array<i64: -9223372036854775808>, static_strides = array<i64: 1>}> : (memref<1024xi32>, index) -> memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.copy'(0x57590870b840) {
  "memref.copy"(%20, %21) : (memref<?xi32, strided<[1], offset: ?>>, memref<?xi32, strided<[1]>>) -> () loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'bufferization.to_tensor'(0x5759087101c0) {
  %22 = "bufferization.to_tensor"(%18) <{restrict, writable}> : (memref<1024xi32>) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.minsi'(0x5759086a3ae0) {
  %23 = "arith.minsi"(%17, %4) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.alloc'(0x5759087212b0) {
  %24 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.minsi'(0x57590867c100) {
  %25 = "arith.minsi"(%23, %4) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.for'(0x5759087077f0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tensor.extract'(0x57590871b540) {
  %31 = "tensor.extract"(%22, %arg11) : (tensor<1024xi32>, index) -> i32 loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x5759087021d0) {
  %32 = "arith.index_cast"(%31) : (i32) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x57590870fee0) {
  %33 = "arith.muli"(%32, %6) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.reinterpret_cast'(0x57590870b3d0) {
  %34 = "memref.reinterpret_cast"(%arg0, %33) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: 16, 1>}> : (memref<*xf32>, index) -> memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.subview'(0x5759087132e0) {
  %35 = "memref.subview"(%24, %arg11) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808, 0>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: 1, 1>}> : (memref<1024x16xf32>, index) -> memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.copy'(0x575908717060) {
  "memref.copy"(%34, %35) : (memref<1x16xf32, strided<[16, 1], offset: ?>>, memref<1x16xf32, strided<[16, 1], offset: ?>>) -> () loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x575908684a80) {
  "scf.yield"() : () -> () loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'bufferization.to_tensor'(0x57590871ade0) {
  %26 = "bufferization.to_tensor"(%24) <{restrict, writable}> : (memref<1024x16xf32>) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x5759086a5190) {
  %27 = "arith.muli"(%11, %6) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.reinterpret_cast'(0x575908715ea0) {
  %28 = "memref.reinterpret_cast"(%arg2, %27) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1024, 16>, static_strides = array<i64: 16, 1>}> : (memref<*xf32>, index) -> memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'tensor.extract_slice'(0x575908715f70) {
  %29 = "tensor.extract_slice"(%26, %23) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0, 0>, static_sizes = array<i64: -9223372036854775808, 16>, static_strides = array<i64: 1, 1>}> : (tensor<1024x16xf32>, index) -> tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'memref.subview'(0x575908716040) {
  %30 = "memref.subview"(%28, %23) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0, 0>, static_sizes = array<i64: -9223372036854775808, 16>, static_strides = array<i64: 1, 1>}> : (memref<1024x16xf32, strided<[16, 1], offset: ?>>, index) -> memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'bufferization.materialize_in_destination'(0x575908711c30) {
  "bufferization.materialize_in_destination"(%29, %30) <{writable}> : (tensor<?x16xf32>, memref<?x16xf32, strided<[16, 1], offset: ?>>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x5759086ad740) {
  "scf.yield"() : () -> () loc("input.mlir":29:5)

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.return'(0x5759086ab810) {
  "func.return"() : () -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)

  * Fold {
  } -> FAILURE : unable to fold
} -> FAILURE : no matched legalization pattern
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'func.return'(0x5759086ab810) {
  "func.return"() : () -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.yield'(0x5759086ad740) {
  "scf.yield"() : () -> () loc("input.mlir":29:5)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'bufferization.materialize_in_destination'(0x575908711c30) {
  "bufferization.materialize_in_destination"(%29, %30) <{writable}> : (tensor<?x16xf32>, memref<?x16xf32, strided<[16, 1], offset: ?>>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.subview'(0x575908716040) {
  %30 = "memref.subview"(%28, %23) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0, 0>, static_sizes = array<i64: -9223372036854775808, 16>, static_strides = array<i64: 1, 1>}> : (memref<1024x16xf32, strided<[16, 1], offset: ?>>, index) -> memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tensor.extract_slice'(0x575908715f70) {
  %29 = "tensor.extract_slice"(%26, %23) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0, 0>, static_sizes = array<i64: -9223372036854775808, 16>, static_strides = array<i64: 1, 1>}> : (tensor<1024x16xf32>, index) -> tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.reinterpret_cast'(0x575908715ea0) {
  %28 = "memref.reinterpret_cast"(%arg2, %27) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1024, 16>, static_strides = array<i64: 16, 1>}> : (memref<*xf32>, index) -> memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x5759086a5190) {
  %27 = "arith.muli"(%11, %6) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'bufferization.to_tensor'(0x57590871ade0) {
  %26 = "bufferization.to_tensor"(%24) <{restrict, writable}> : (memref<1024x16xf32>) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.yield'(0x575908684a80) {
  "scf.yield"() : () -> () loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.copy'(0x575908717060) {
  "memref.copy"(%34, %35) : (memref<1x16xf32, strided<[16, 1], offset: ?>>, memref<1x16xf32, strided<[16, 1], offset: ?>>) -> () loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.subview'(0x5759087132e0) {
  %35 = "memref.subview"(%24, %arg11) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808, 0>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: 1, 1>}> : (memref<1024x16xf32>, index) -> memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.reinterpret_cast'(0x57590870b3d0) {
  %34 = "memref.reinterpret_cast"(%arg0, %33) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: 16, 1>}> : (memref<*xf32>, index) -> memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x57590870fee0) {
  %33 = "arith.muli"(%32, %6) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x5759087021d0) {
  %32 = "arith.index_cast"(%31) : (i32) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x5759087077f0) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tensor.extract'(0x57590871b540) {
  %31 = "tensor.extract"(%22, %arg11) : (tensor<1024xi32>, index) -> i32 loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.minsi'(0x57590867c100) {
  %25 = "arith.minsi"(%23, %4) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.alloc'(0x5759087212b0) {
  %24 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.minsi'(0x5759086a3ae0) {
  %23 = "arith.minsi"(%17, %4) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'bufferization.to_tensor'(0x5759087101c0) {
  %22 = "bufferization.to_tensor"(%18) <{restrict, writable}> : (memref<1024xi32>) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.copy'(0x57590870b840) {
  "memref.copy"(%20, %21) : (memref<?xi32, strided<[1], offset: ?>>, memref<?xi32, strided<[1]>>) -> () loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.subview'(0x57590869b2c0) {
  %21 = "memref.subview"(%18, %17) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0>, static_sizes = array<i64: -9223372036854775808>, static_strides = array<i64: 1>}> : (memref<1024xi32>, index) -> memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.subview'(0x57590869f460) {
  %20 = "memref.subview"(%12, %17) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0>, static_sizes = array<i64: -9223372036854775808>, static_strides = array<i64: 1>}> : (memref<1024xi32, strided<[1], offset: ?>>, index) -> memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.yield'(0x5759086839f0) {
  "scf.yield"() : () -> () loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.if'(0x57590871b3f0) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'linalg.fill'(0x57590870bb80) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'linalg.yield'(0x575908713b00) {
  "linalg.yield"(%arg12) : (i32) -> () loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.cmpi'(0x57590871b5f0) {
  %19 = "arith.cmpi"(%17, %4) <{predicate = 2 : i64}> : (index, index) -> i1 loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.alloc'(0x575908709470) {
  %18 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.subi'(0x57590871b390) {
  %17 = "arith.subi"(%16, %11) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.maxsi'(0x57590869fe20) {
  %16 = "arith.maxsi"(%15, %11) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.minsi'(0x5759086a5280) {
  %15 = "arith.minsi"(%14, %5) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x575908717a70) {
  %14 = "arith.addi"(%13, %10) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x57590869e5a0) {
  %13 = "arith.addi"(%9, %4) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.reinterpret_cast'(0x5759086a7d10) {
  %12 = "memref.reinterpret_cast"(%arg1, %11) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1024>, static_strides = array<i64: 1>}> : (memref<*xi32>, index) -> memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x5759086a7f50) {
  %11 = "arith.addi"(%9, %10) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x57590869db90) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x5759086a92c0) {
  %10 = "arith.index_cast"(%arg10) : (i32) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x57590869b6d0) {
  %9 = "arith.index_cast"(%8) : (i32) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x5759086a93b0) {
  %8 = "arith.muli"(%arg7, %2) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869c880) {
  %7 = "arith.constant"() <{value = 0 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869f3f0) {
  %6 = "arith.constant"() <{value = 16 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x575908710040) {
  %5 = "arith.constant"() <{value = 1971940 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x575908707790) {
  %4 = "arith.constant"() <{value = 1024 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759086a4fb0) {
  %3 = "arith.constant"() <{value = 1024 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759086a90a0) {
  %2 = "arith.constant"() <{value = 49299 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x575908721000) {
  %1 = "arith.constant"() <{value = 0 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'func.func'(0x575908715540) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590871ba70) {
  %0 = "arith.constant"() <{value = 1 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//
ImplicitTypeIDRegistry::lookupOrInsert(mlir::ProgramPoint)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::dataflow::CFGEdge)
Priming analysis: mlir::dataflow::DeadCodeAnalysis
ImplicitTypeIDRegistry::lookupOrInsert(mlir::dataflow::Executable)
Propagating update to mlir::dataflow::Executable of <before operation>:func.func @origin_index_select(%arg0: memref<*xf32> {tt.divisibility = 16 : i32} loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: memref<*xi32> {tt.divisibility = 16 : i32} loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: memref<*xf32> {tt.divisibility = 16 : i32} loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 {tt.divisibility = 16 : i32} loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg4: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg5: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg6: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg7: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg8: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg9: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)) {...} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
Value: live
ImplicitTypeIDRegistry::lookupOrInsert(mlir::dataflow::PredecessorState)
Propagating update to mlir::dataflow::PredecessorState of <after operation>:func.func @origin_index_select(%arg0: memref<*xf32> {tt.divisibility = 16 : i32} loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: memref<*xi32> {tt.divisibility = 16 : i32} loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: memref<*xf32> {tt.divisibility = 16 : i32} loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 {tt.divisibility = 16 : i32} loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg4: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg5: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg6: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg7: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg8: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg9: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)) {...} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
Value: predecessors:

Creating dependency between mlir::dataflow::PredecessorState of <after operation>:func.func @origin_index_select(%arg0: memref<*xf32> {tt.divisibility = 16 : i32} loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: memref<*xi32> {tt.divisibility = 16 : i32} loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: memref<*xf32> {tt.divisibility = 16 : i32} loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 {tt.divisibility = 16 : i32} loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg4: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg5: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg6: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg7: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg8: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg9: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)) {...} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
and mlir::dataflow::PredecessorState on 0x575908729bb8
Propagating update to mlir::dataflow::Executable of <before operation>:%c1 = arith.constant 1 : index loc(unknown)
Value: live
ImplicitTypeIDRegistry::lookupOrInsert(mlir::dataflow::Lattice<mlir::dataflow::ConstantValue>)
Creating dependency between mlir::dataflow::PredecessorState of <after operation>:func.func @origin_index_select(%arg0: memref<*xf32> {tt.divisibility = 16 : i32} loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: memref<*xi32> {tt.divisibility = 16 : i32} loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: memref<*xf32> {tt.divisibility = 16 : i32} loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 {tt.divisibility = 16 : i32} loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg4: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg5: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg6: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg7: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg8: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg9: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)) {...} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
and mlir::dataflow::PredecessorState on 0x575908729cf0
Priming analysis: mlir::dataflow::SparseConstantPropagation
Creating dependency between mlir::dataflow::PredecessorState of <after operation>:func.func @origin_index_select(%arg0: memref<*xf32> {tt.divisibility = 16 : i32} loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: memref<*xi32> {tt.divisibility = 16 : i32} loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: memref<*xf32> {tt.divisibility = 16 : i32} loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 {tt.divisibility = 16 : i32} loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg4: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg5: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg6: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg7: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg8: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg9: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)) {...} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
and mlir::dataflow::PredecessorState on 0x575908729be8
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of <block argument> of type 'memref<*xf32>' at index: 0
Value: <UNKNOWN>
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of <block argument> of type 'memref<*xi32>' at index: 1
Value: <UNKNOWN>
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of <block argument> of type 'memref<*xf32>' at index: 2
Value: <UNKNOWN>
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of <block argument> of type 'i32' at index: 3
Value: <UNKNOWN>
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of <block argument> of type 'i32' at index: 4
Value: <UNKNOWN>
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of <block argument> of type 'i32' at index: 5
Value: <UNKNOWN>
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of <block argument> of type 'i32' at index: 6
Value: <UNKNOWN>
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of <block argument> of type 'i32' at index: 7
Value: <UNKNOWN>
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of <block argument> of type 'i32' at index: 8
Value: <UNKNOWN>
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of <block argument> of type 'i32' at index: 9
Value: <UNKNOWN>
SCP: Visiting operation: %c1 = arith.constant 1 : index loc(unknown)
Folded to constant: 1 : index
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %c1 = arith.constant 1 : index loc(unknown)
Value: 1 : index
SCP: Visiting operation: %c0 = arith.constant 0 : index loc(unknown)
Folded to constant: 0 : index
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %c0 = arith.constant 0 : index loc(unknown)
Value: 0 : index
SCP: Visiting operation: %c49299_i32 = arith.constant 49299 : i32 loc(unknown)
Folded to constant: 49299 : i32
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %c49299_i32 = arith.constant 49299 : i32 loc(unknown)
Value: 49299 : i32
SCP: Visiting operation: %c1024_i32 = arith.constant 1024 : i32 loc(unknown)
Folded to constant: 1024 : i32
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %c1024_i32 = arith.constant 1024 : i32 loc(unknown)
Value: 1024 : i32
SCP: Visiting operation: %c1024 = arith.constant 1024 : index loc(unknown)
Folded to constant: 1024 : index
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %c1024 = arith.constant 1024 : index loc(unknown)
Value: 1024 : index
SCP: Visiting operation: %c1971940 = arith.constant 1971940 : index loc(unknown)
Folded to constant: 1971940 : index
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %c1971940 = arith.constant 1971940 : index loc(unknown)
Value: 1971940 : index
SCP: Visiting operation: %c16 = arith.constant 16 : index loc(unknown)
Folded to constant: 16 : index
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %c16 = arith.constant 16 : index loc(unknown)
Value: 16 : index
SCP: Visiting operation: %c0_i32 = arith.constant 0 : i32 loc(unknown)
Folded to constant: 0 : i32
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %c0_i32 = arith.constant 0 : i32 loc(unknown)
Value: 0 : i32
SCP: Visiting operation: %0 = arith.muli %arg7, %c49299_i32 : i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %0 = arith.muli %arg7, %c49299_i32 : i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))
Value: <UNKNOWN>
SCP: Visiting operation: %1 = arith.index_cast %0 : i32 to index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %1 = arith.index_cast %0 : i32 to index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
Value: <UNKNOWN>
Priming analysis: mlir::dataflow::LivenessAnalysis
Creating dependency between mlir::dataflow::PredecessorState of <after operation>:func.func @origin_index_select(%arg0: memref<*xf32> {tt.divisibility = 16 : i32} loc("in_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg1: memref<*xi32> {tt.divisibility = 16 : i32} loc("indices_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg2: memref<*xf32> {tt.divisibility = 16 : i32} loc("out_ptr"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg3: i32 {tt.divisibility = 16 : i32} loc("dim"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)), %arg4: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg5: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg6: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg7: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg8: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0), %arg9: i32 loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)) {...} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)
and mlir::dataflow::PredecessorState on 0x575908729cf0
Propagating update to mlir::dataflow::Liveness of %c0_i32 = arith.constant 0 : i32 loc(unknown)
Value: live
Propagating update to mlir::dataflow::Liveness of %c49299_i32 = arith.constant 49299 : i32 loc(unknown)
Value: live
Propagating update to mlir::dataflow::Liveness of %c1024_i32 = arith.constant 1024 : i32 loc(unknown)
Value: live
Creating dependency between mlir::dataflow::Liveness of %1 = arith.index_cast %0 : i32 to index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
and mlir::dataflow::Liveness on 0x575908729d20
Creating dependency between mlir::dataflow::Liveness of %0 = arith.muli %arg7, %c49299_i32 : i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))
and mlir::dataflow::Liveness on 0x575908729d38
Creating dependency between mlir::dataflow::Liveness of %c0_i32 = arith.constant 0 : i32 loc(unknown)
and mlir::dataflow::Liveness on 0x575908729d50
Creating dependency between mlir::dataflow::Liveness of %c16 = arith.constant 16 : index loc(unknown)
and mlir::dataflow::Liveness on 0x575908729d68
Creating dependency between mlir::dataflow::Liveness of %c1971940 = arith.constant 1971940 : index loc(unknown)
and mlir::dataflow::Liveness on 0x575908729d80
Creating dependency between mlir::dataflow::Liveness of %c1024 = arith.constant 1024 : index loc(unknown)
and mlir::dataflow::Liveness on 0x575908729d98
Creating dependency between mlir::dataflow::Liveness of %c1024_i32 = arith.constant 1024 : i32 loc(unknown)
and mlir::dataflow::Liveness on 0x575908729db0
Creating dependency between mlir::dataflow::Liveness of %c49299_i32 = arith.constant 49299 : i32 loc(unknown)
and mlir::dataflow::Liveness on 0x575908729dc8
Creating dependency between mlir::dataflow::Liveness of %c0 = arith.constant 0 : index loc(unknown)
and mlir::dataflow::Liveness on 0x575908729de0
Creating dependency between mlir::dataflow::Liveness of %c1 = arith.constant 1 : index loc(unknown)
and mlir::dataflow::Liveness on 0x575908729df8
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729c60
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729c00
Propagating update to mlir::dataflow::Executable of <before operation>:%2 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
Value: live
Propagating update to mlir::dataflow::PredecessorState of <before operation>:%2 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
Value: (all) predecessors:
  scf.for %arg10 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {
  %2 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
  %3 = arith.addi %1, %2 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
  %reinterpret_cast = memref.reinterpret_cast %arg1 to offset: [%3], sizes: [1024], strides: [1] : memref<*xi32> to memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
  %4 = arith.addi %1, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %5 = arith.addi %4, %2 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %6 = arith.minsi %5, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %7 = arith.maxsi %6, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %8 = arith.subi %7, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %alloc = memref.alloc() : memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %9 = arith.cmpi slt, %8, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  scf.if %9 {
    linalg.fill ins(%c0_i32 : i32) outs(%alloc : memref<1024xi32>) loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  } loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %subview = memref.subview %reinterpret_cast[0] [%8] [1] : memref<1024xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %subview_0 = memref.subview %alloc[0] [%8] [1] : memref<1024xi32> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  memref.copy %subview, %subview_0 : memref<?xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %10 = bufferization.to_tensor %alloc restrict writable : memref<1024xi32> to tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %11 = arith.minsi %8, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %alloc_1 = memref.alloc() : memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %12 = arith.minsi %11, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  scf.for %arg11 = %c0 to %12 step %c1 {
    %extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %15 = arith.index_cast %extracted : i32 to index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %16 = arith.muli %15, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
    %reinterpret_cast_4 = memref.reinterpret_cast %arg0 to offset: [%16], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
    %subview_5 = memref.subview %alloc_1[%arg11, 0] [1, 16] [1, 1] : memref<1024x16xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    memref.copy %reinterpret_cast_4, %subview_5 : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  } loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %13 = bufferization.to_tensor %alloc_1 restrict writable : memref<1024x16xf32> to tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %14 = arith.muli %3, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
  %reinterpret_cast_2 = memref.reinterpret_cast %arg2 to offset: [%14], sizes: [1024, 16], strides: [16, 1] : memref<*xf32> to memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
  %extracted_slice = tensor.extract_slice %13[0, 0] [%11, 16] [1, 1] : tensor<1024x16xf32> to tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  %subview_3 = memref.subview %reinterpret_cast_2[0, 0] [%11, 16] [1, 1] : memref<1024x16xf32, strided<[16, 1], offset: ?>> to memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  bufferization.materialize_in_destination %extracted_slice in writable %subview_3 : (tensor<?x16xf32>, memref<?x16xf32, strided<[16, 1], offset: ?>>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)

Propagating update to mlir::dataflow::Executable of <after operation>:scf.for %arg10 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {...} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
Value: live
Propagating update to mlir::dataflow::PredecessorState of <after operation>:scf.for %arg10 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {...} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
Value: (all) predecessors:
  scf.for %arg10 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {
  %2 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
  %3 = arith.addi %1, %2 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
  %reinterpret_cast = memref.reinterpret_cast %arg1 to offset: [%3], sizes: [1024], strides: [1] : memref<*xi32> to memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
  %4 = arith.addi %1, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %5 = arith.addi %4, %2 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %6 = arith.minsi %5, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %7 = arith.maxsi %6, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %8 = arith.subi %7, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %alloc = memref.alloc() : memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %9 = arith.cmpi slt, %8, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  scf.if %9 {
    linalg.fill ins(%c0_i32 : i32) outs(%alloc : memref<1024xi32>) loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  } loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %subview = memref.subview %reinterpret_cast[0] [%8] [1] : memref<1024xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %subview_0 = memref.subview %alloc[0] [%8] [1] : memref<1024xi32> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  memref.copy %subview, %subview_0 : memref<?xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %10 = bufferization.to_tensor %alloc restrict writable : memref<1024xi32> to tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %11 = arith.minsi %8, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %alloc_1 = memref.alloc() : memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %12 = arith.minsi %11, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  scf.for %arg11 = %c0 to %12 step %c1 {
    %extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %15 = arith.index_cast %extracted : i32 to index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %16 = arith.muli %15, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
    %reinterpret_cast_4 = memref.reinterpret_cast %arg0 to offset: [%16], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
    %subview_5 = memref.subview %alloc_1[%arg11, 0] [1, 16] [1, 1] : memref<1024x16xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    memref.copy %reinterpret_cast_4, %subview_5 : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  } loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %13 = bufferization.to_tensor %alloc_1 restrict writable : memref<1024x16xf32> to tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %14 = arith.muli %3, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
  %reinterpret_cast_2 = memref.reinterpret_cast %arg2 to offset: [%14], sizes: [1024, 16], strides: [16, 1] : memref<*xf32> to memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
  %extracted_slice = tensor.extract_slice %13[0, 0] [%11, 16] [1, 1] : tensor<1024x16xf32> to tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  %subview_3 = memref.subview %reinterpret_cast_2[0, 0] [%11, 16] [1, 1] : memref<1024x16xf32, strided<[16, 1], offset: ?>> to memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  bufferization.materialize_in_destination %extracted_slice in writable %subview_3 : (tensor<?x16xf32>, memref<?x16xf32, strided<[16, 1], offset: ?>>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)

Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729c18
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729c18
Creating dependency between mlir::dataflow::PredecessorState of <before operation>:%2 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
and mlir::dataflow::PredecessorState on 0x575908729c18
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of <block argument> of type 'i32' at index: 0
Value: <UNKNOWN>
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729c18
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729e10
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729e28
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729e40
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729e58
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729e70
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729e88
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729ea0
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729eb8
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729ed0
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729ee8
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729c30
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729f00
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729f18
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729f30
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729f48
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729f60
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729f78
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729f90
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729c90
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729fa8
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729fc0
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729fd8
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729ff0
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x57590872a008
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x57590872a020
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729cd8
Propagating update to mlir::dataflow::PredecessorState of <before operation>:%2 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
Value: (all) predecessors:
  scf.for %arg10 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {
  %2 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
  %3 = arith.addi %1, %2 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
  %reinterpret_cast = memref.reinterpret_cast %arg1 to offset: [%3], sizes: [1024], strides: [1] : memref<*xi32> to memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
  %4 = arith.addi %1, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %5 = arith.addi %4, %2 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %6 = arith.minsi %5, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %7 = arith.maxsi %6, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %8 = arith.subi %7, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %alloc = memref.alloc() : memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %9 = arith.cmpi slt, %8, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  scf.if %9 {
    linalg.fill ins(%c0_i32 : i32) outs(%alloc : memref<1024xi32>) loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  } loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %subview = memref.subview %reinterpret_cast[0] [%8] [1] : memref<1024xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %subview_0 = memref.subview %alloc[0] [%8] [1] : memref<1024xi32> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  memref.copy %subview, %subview_0 : memref<?xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %10 = bufferization.to_tensor %alloc restrict writable : memref<1024xi32> to tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %11 = arith.minsi %8, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %alloc_1 = memref.alloc() : memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %12 = arith.minsi %11, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  scf.for %arg11 = %c0 to %12 step %c1 {
    %extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %15 = arith.index_cast %extracted : i32 to index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %16 = arith.muli %15, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
    %reinterpret_cast_4 = memref.reinterpret_cast %arg0 to offset: [%16], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
    %subview_5 = memref.subview %alloc_1[%arg11, 0] [1, 16] [1, 1] : memref<1024x16xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    memref.copy %reinterpret_cast_4, %subview_5 : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  } loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %13 = bufferization.to_tensor %alloc_1 restrict writable : memref<1024x16xf32> to tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %14 = arith.muli %3, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
  %reinterpret_cast_2 = memref.reinterpret_cast %arg2 to offset: [%14], sizes: [1024, 16], strides: [16, 1] : memref<*xf32> to memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
  %extracted_slice = tensor.extract_slice %13[0, 0] [%11, 16] [1, 1] : tensor<1024x16xf32> to tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  %subview_3 = memref.subview %reinterpret_cast_2[0, 0] [%11, 16] [1, 1] : memref<1024x16xf32, strided<[16, 1], offset: ?>> to memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  bufferization.materialize_in_destination %extracted_slice in writable %subview_3 : (tensor<?x16xf32>, memref<?x16xf32, strided<[16, 1], offset: ?>>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
  scf.yield loc("input.mlir":29:5)

Propagating update to mlir::dataflow::PredecessorState of <after operation>:scf.for %arg10 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {...} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
Value: (all) predecessors:
  scf.for %arg10 = %c0_i32 to %c49299_i32 step %c1024_i32  : i32 {
  %2 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
  %3 = arith.addi %1, %2 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
  %reinterpret_cast = memref.reinterpret_cast %arg1 to offset: [%3], sizes: [1024], strides: [1] : memref<*xi32> to memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
  %4 = arith.addi %1, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %5 = arith.addi %4, %2 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %6 = arith.minsi %5, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %7 = arith.maxsi %6, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %8 = arith.subi %7, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %alloc = memref.alloc() : memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %9 = arith.cmpi slt, %8, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  scf.if %9 {
    linalg.fill ins(%c0_i32 : i32) outs(%alloc : memref<1024xi32>) loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  } loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %subview = memref.subview %reinterpret_cast[0] [%8] [1] : memref<1024xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %subview_0 = memref.subview %alloc[0] [%8] [1] : memref<1024xi32> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  memref.copy %subview, %subview_0 : memref<?xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %10 = bufferization.to_tensor %alloc restrict writable : memref<1024xi32> to tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  %11 = arith.minsi %8, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %alloc_1 = memref.alloc() : memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %12 = arith.minsi %11, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  scf.for %arg11 = %c0 to %12 step %c1 {
    %extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %15 = arith.index_cast %extracted : i32 to index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    %16 = arith.muli %15, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
    %reinterpret_cast_4 = memref.reinterpret_cast %arg0 to offset: [%16], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
    %subview_5 = memref.subview %alloc_1[%arg11, 0] [1, 16] [1, 1] : memref<1024x16xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
    memref.copy %reinterpret_cast_4, %subview_5 : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  } loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %13 = bufferization.to_tensor %alloc_1 restrict writable : memref<1024x16xf32> to tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %14 = arith.muli %3, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
  %reinterpret_cast_2 = memref.reinterpret_cast %arg2 to offset: [%14], sizes: [1024, 16], strides: [16, 1] : memref<*xf32> to memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
  %extracted_slice = tensor.extract_slice %13[0, 0] [%11, 16] [1, 1] : tensor<1024x16xf32> to tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  %subview_3 = memref.subview %reinterpret_cast_2[0, 0] [%11, 16] [1, 1] : memref<1024x16xf32, strided<[16, 1], offset: ?>> to memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
  bufferization.materialize_in_destination %extracted_slice in writable %subview_3 : (tensor<?x16xf32>, memref<?x16xf32, strided<[16, 1], offset: ?>>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
} loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":33:35)
  scf.yield loc("input.mlir":29:5)

Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729e10
SCP: Visiting operation: %2 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %2 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729e28
SCP: Visiting operation: %3 = arith.addi %1, %2 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %3 = arith.addi %1, %2 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729e40
SCP: Visiting operation: %reinterpret_cast = memref.reinterpret_cast %arg1 to offset: [%3], sizes: [1024], strides: [1] : memref<*xi32> to memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %reinterpret_cast = memref.reinterpret_cast %arg1 to offset: [%3], sizes: [1024], strides: [1] : memref<*xi32> to memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729e58
SCP: Visiting operation: %4 = arith.addi %1, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %4 = arith.addi %1, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729e70
SCP: Visiting operation: %5 = arith.addi %4, %2 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %5 = arith.addi %4, %2 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729e88
SCP: Visiting operation: %6 = arith.minsi %5, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %6 = arith.minsi %5, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729ea0
SCP: Visiting operation: %7 = arith.maxsi %6, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %7 = arith.maxsi %6, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729eb8
SCP: Visiting operation: %8 = arith.subi %7, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %8 = arith.subi %7, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729ed0
SCP: Visiting operation: %alloc = memref.alloc() : memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %alloc = memref.alloc() : memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729ee8
SCP: Visiting operation: %9 = arith.cmpi slt, %8, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %9 = arith.cmpi slt, %8, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729c30
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729f00
SCP: Visiting operation: %subview = memref.subview %reinterpret_cast[0] [%8] [1] : memref<1024xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %subview = memref.subview %reinterpret_cast[0] [%8] [1] : memref<1024xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729f18
SCP: Visiting operation: %subview_0 = memref.subview %alloc[0] [%8] [1] : memref<1024xi32> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %subview_0 = memref.subview %alloc[0] [%8] [1] : memref<1024xi32> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729f30
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729f48
SCP: Visiting operation: %10 = bufferization.to_tensor %alloc restrict writable : memref<1024xi32> to tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %10 = bufferization.to_tensor %alloc restrict writable : memref<1024xi32> to tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729f60
SCP: Visiting operation: %11 = arith.minsi %8, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %11 = arith.minsi %8, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729f78
SCP: Visiting operation: %alloc_1 = memref.alloc() : memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %alloc_1 = memref.alloc() : memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729f90
SCP: Visiting operation: %12 = arith.minsi %11, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %12 = arith.minsi %11, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729c90
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729fa8
SCP: Visiting operation: %13 = bufferization.to_tensor %alloc_1 restrict writable : memref<1024x16xf32> to tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %13 = bufferization.to_tensor %alloc_1 restrict writable : memref<1024x16xf32> to tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729fc0
SCP: Visiting operation: %14 = arith.muli %3, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %14 = arith.muli %3, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729fd8
SCP: Visiting operation: %reinterpret_cast_2 = memref.reinterpret_cast %arg2 to offset: [%14], sizes: [1024, 16], strides: [16, 1] : memref<*xf32> to memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %reinterpret_cast_2 = memref.reinterpret_cast %arg2 to offset: [%14], sizes: [1024, 16], strides: [16, 1] : memref<*xf32> to memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729ff0
SCP: Visiting operation: %extracted_slice = tensor.extract_slice %13[0, 0] [%11, 16] [1, 1] : tensor<1024x16xf32> to tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %extracted_slice = tensor.extract_slice %13[0, 0] [%11, 16] [1, 1] : tensor<1024x16xf32> to tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x57590872a008
SCP: Visiting operation: %subview_3 = memref.subview %reinterpret_cast_2[0, 0] [%11, 16] [1, 1] : memref<1024x16xf32, strided<[16, 1], offset: ?>> to memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %subview_3 = memref.subview %reinterpret_cast_2[0, 0] [%11, 16] [1, 1] : memref<1024x16xf32, strided<[16, 1], offset: ?>> to memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x57590872a020
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729cd8
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729e10
Creating dependency between mlir::dataflow::Liveness of %2 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
and mlir::dataflow::Liveness on 0x575908729e10
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729e28
Creating dependency between mlir::dataflow::Liveness of %3 = arith.addi %1, %2 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
and mlir::dataflow::Liveness on 0x575908729e28
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729e40
Creating dependency between mlir::dataflow::Liveness of %reinterpret_cast = memref.reinterpret_cast %arg1 to offset: [%3], sizes: [1024], strides: [1] : memref<*xi32> to memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
and mlir::dataflow::Liveness on 0x575908729e40
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729e58
Creating dependency between mlir::dataflow::Liveness of %4 = arith.addi %1, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
and mlir::dataflow::Liveness on 0x575908729e58
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729e70
Creating dependency between mlir::dataflow::Liveness of %5 = arith.addi %4, %2 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
and mlir::dataflow::Liveness on 0x575908729e70
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729e88
Creating dependency between mlir::dataflow::Liveness of %6 = arith.minsi %5, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
and mlir::dataflow::Liveness on 0x575908729e88
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729ea0
Creating dependency between mlir::dataflow::Liveness of %7 = arith.maxsi %6, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
and mlir::dataflow::Liveness on 0x575908729ea0
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729eb8
Creating dependency between mlir::dataflow::Liveness of %8 = arith.subi %7, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
and mlir::dataflow::Liveness on 0x575908729eb8
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729ed0
Creating dependency between mlir::dataflow::Liveness of %alloc = memref.alloc() : memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
and mlir::dataflow::Liveness on 0x575908729ed0
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729ee8
Creating dependency between mlir::dataflow::Liveness of %9 = arith.cmpi slt, %8, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
and mlir::dataflow::Liveness on 0x575908729ee8
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729c30
Propagating update to mlir::dataflow::Liveness of %9 = arith.cmpi slt, %8, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729f00
Creating dependency between mlir::dataflow::Liveness of %subview = memref.subview %reinterpret_cast[0] [%8] [1] : memref<1024xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
and mlir::dataflow::Liveness on 0x575908729f00
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729f18
Creating dependency between mlir::dataflow::Liveness of %subview_0 = memref.subview %alloc[0] [%8] [1] : memref<1024xi32> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
and mlir::dataflow::Liveness on 0x575908729f18
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729f30
Propagating update to mlir::dataflow::Liveness of %subview = memref.subview %reinterpret_cast[0] [%8] [1] : memref<1024xi32, strided<[1], offset: ?>> to memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: live
Propagating update to mlir::dataflow::Liveness of %subview_0 = memref.subview %alloc[0] [%8] [1] : memref<1024xi32> to memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729f48
Creating dependency between mlir::dataflow::Liveness of %10 = bufferization.to_tensor %alloc restrict writable : memref<1024xi32> to tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
and mlir::dataflow::Liveness on 0x575908729f48
Propagating update to mlir::dataflow::Liveness of %alloc = memref.alloc() : memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729f60
Creating dependency between mlir::dataflow::Liveness of %11 = arith.minsi %8, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
and mlir::dataflow::Liveness on 0x575908729f60
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729f78
Creating dependency between mlir::dataflow::Liveness of %alloc_1 = memref.alloc() : memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
and mlir::dataflow::Liveness on 0x575908729f78
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729f90
Creating dependency between mlir::dataflow::Liveness of %12 = arith.minsi %11, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
and mlir::dataflow::Liveness on 0x575908729f90
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729c90
Propagating update to mlir::dataflow::Liveness of %c0 = arith.constant 0 : index loc(unknown)
Value: live
Propagating update to mlir::dataflow::Liveness of %12 = arith.minsi %11, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Value: live
Propagating update to mlir::dataflow::Liveness of %c1 = arith.constant 1 : index loc(unknown)
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729fa8
Creating dependency between mlir::dataflow::Liveness of %13 = bufferization.to_tensor %alloc_1 restrict writable : memref<1024x16xf32> to tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
and mlir::dataflow::Liveness on 0x575908729fa8
Propagating update to mlir::dataflow::Liveness of %alloc_1 = memref.alloc() : memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729fc0
Creating dependency between mlir::dataflow::Liveness of %14 = arith.muli %3, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
and mlir::dataflow::Liveness on 0x575908729fc0
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729fd8
Creating dependency between mlir::dataflow::Liveness of %reinterpret_cast_2 = memref.reinterpret_cast %arg2 to offset: [%14], sizes: [1024, 16], strides: [16, 1] : memref<*xf32> to memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
and mlir::dataflow::Liveness on 0x575908729fd8
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729ff0
Creating dependency between mlir::dataflow::Liveness of %extracted_slice = tensor.extract_slice %13[0, 0] [%11, 16] [1, 1] : tensor<1024x16xf32> to tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
and mlir::dataflow::Liveness on 0x575908729ff0
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x57590872a008
Creating dependency between mlir::dataflow::Liveness of %subview_3 = memref.subview %reinterpret_cast_2[0, 0] [%11, 16] [1, 1] : memref<1024x16xf32, strided<[16, 1], offset: ?>> to memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
and mlir::dataflow::Liveness on 0x57590872a008
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x57590872a020
Propagating update to mlir::dataflow::Liveness of %extracted_slice = tensor.extract_slice %13[0, 0] [%11, 16] [1, 1] : tensor<1024x16xf32> to tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
Value: live
Propagating update to mlir::dataflow::Liveness of %subview_3 = memref.subview %reinterpret_cast_2[0, 0] [%11, 16] [1, 1] : memref<1024x16xf32, strided<[16, 1], offset: ?>> to memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729cd8
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729c18
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729c30
Propagating update to mlir::dataflow::Executable of <before operation>:linalg.fill ins(%c0_i32 : i32) outs(%alloc : memref<1024xi32>) loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: live
Propagating update to mlir::dataflow::PredecessorState of <before operation>:linalg.fill ins(%c0_i32 : i32) outs(%alloc : memref<1024xi32>) loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: (all) predecessors:
  scf.if %9 {
  linalg.fill ins(%c0_i32 : i32) outs(%alloc : memref<1024xi32>) loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
} loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

Propagating update to mlir::dataflow::Executable of <after operation>:scf.if %9 {...} loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: live
Propagating update to mlir::dataflow::PredecessorState of <after operation>:scf.if %9 {...} loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: (all) predecessors:
  scf.if %9 {
  linalg.fill ins(%c0_i32 : i32) outs(%alloc : memref<1024xi32>) loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
} loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729c90
Propagating update to mlir::dataflow::Executable of <before operation>:%extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Value: live
Propagating update to mlir::dataflow::PredecessorState of <before operation>:%extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Value: (all) predecessors:
  scf.for %arg11 = %c0 to %12 step %c1 {
  %extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %15 = arith.index_cast %extracted : i32 to index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %16 = arith.muli %15, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
  %reinterpret_cast_4 = memref.reinterpret_cast %arg0 to offset: [%16], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
  %subview_5 = memref.subview %alloc_1[%arg11, 0] [1, 16] [1, 1] : memref<1024x16xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  memref.copy %reinterpret_cast_4, %subview_5 : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
} loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

Propagating update to mlir::dataflow::Executable of <after operation>:scf.for %arg11 = %c0 to %12 step %c1 {...} loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Value: live
Propagating update to mlir::dataflow::PredecessorState of <after operation>:scf.for %arg11 = %c0 to %12 step %c1 {...} loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Value: (all) predecessors:
  scf.for %arg11 = %c0 to %12 step %c1 {
  %extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %15 = arith.index_cast %extracted : i32 to index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %16 = arith.muli %15, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
  %reinterpret_cast_4 = memref.reinterpret_cast %arg0 to offset: [%16], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
  %subview_5 = memref.subview %alloc_1[%arg11, 0] [1, 16] [1, 1] : memref<1024x16xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  memref.copy %reinterpret_cast_4, %subview_5 : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
} loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729ee8
Propagating update to mlir::dataflow::Liveness of %8 = arith.subi %7, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: live
Propagating update to mlir::dataflow::Liveness of %c1024 = arith.constant 1024 : index loc(unknown)
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729f00
Propagating update to mlir::dataflow::Liveness of %reinterpret_cast = memref.reinterpret_cast %arg1 to offset: [%3], sizes: [1024], strides: [1] : memref<*xi32> to memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729f18
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729ed0
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729de0
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729f90
Propagating update to mlir::dataflow::Liveness of %11 = arith.minsi %8, %c1024 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729df8
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729f78
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729ff0
Propagating update to mlir::dataflow::Liveness of %13 = bufferization.to_tensor %alloc_1 restrict writable : memref<1024x16xf32> to tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x57590872a008
Propagating update to mlir::dataflow::Liveness of %reinterpret_cast_2 = memref.reinterpret_cast %arg2 to offset: [%14], sizes: [1024, 16], strides: [16, 1] : memref<*xf32> to memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)
Value: live
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729c48
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729c48
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729c48
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729c60
Propagating update to mlir::dataflow::Executable of <before operation>:linalg.yield %arg11 : i32 loc(unknown)
Value: live
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729c78
Propagating update to mlir::dataflow::PredecessorState of <after operation>:scf.if %9 {...} loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: (all) predecessors:
  scf.if %9 {
  linalg.fill ins(%c0_i32 : i32) outs(%alloc : memref<1024xi32>) loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
} loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
  scf.yield loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729c60
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729c78
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729c60
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729c78
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729ca8
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729ca8
Creating dependency between mlir::dataflow::PredecessorState of <before operation>:%extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
and mlir::dataflow::PredecessorState on 0x575908729ca8
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of <block argument> of type 'index' at index: 0
Value: <UNKNOWN>
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729ca8
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x57590872a038
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x57590872a050
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x57590872a068
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x57590872a080
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x57590872a098
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x57590872a0b0
Invoking 'mlir::dataflow::DeadCodeAnalysis' on: 0x575908729cc0
Propagating update to mlir::dataflow::PredecessorState of <before operation>:%extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Value: (all) predecessors:
  scf.for %arg11 = %c0 to %12 step %c1 {
  %extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %15 = arith.index_cast %extracted : i32 to index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %16 = arith.muli %15, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
  %reinterpret_cast_4 = memref.reinterpret_cast %arg0 to offset: [%16], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
  %subview_5 = memref.subview %alloc_1[%arg11, 0] [1, 16] [1, 1] : memref<1024x16xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  memref.copy %reinterpret_cast_4, %subview_5 : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
} loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  scf.yield loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

Propagating update to mlir::dataflow::PredecessorState of <after operation>:scf.for %arg11 = %c0 to %12 step %c1 {...} loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Value: (all) predecessors:
  scf.for %arg11 = %c0 to %12 step %c1 {
  %extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %15 = arith.index_cast %extracted : i32 to index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  %16 = arith.muli %15, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
  %reinterpret_cast_4 = memref.reinterpret_cast %arg0 to offset: [%16], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
  %subview_5 = memref.subview %alloc_1[%arg11, 0] [1, 16] [1, 1] : memref<1024x16xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  memref.copy %reinterpret_cast_4, %subview_5 : memref<1x16xf32, strided<[16, 1], offset: ?>> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
} loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
  scf.yield loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x57590872a038
SCP: Visiting operation: %extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x57590872a050
SCP: Visiting operation: %15 = arith.index_cast %extracted : i32 to index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %15 = arith.index_cast %extracted : i32 to index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x57590872a068
SCP: Visiting operation: %16 = arith.muli %15, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %16 = arith.muli %15, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x57590872a080
SCP: Visiting operation: %reinterpret_cast_4 = memref.reinterpret_cast %arg0 to offset: [%16], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %reinterpret_cast_4 = memref.reinterpret_cast %arg0 to offset: [%16], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x57590872a098
SCP: Visiting operation: %subview_5 = memref.subview %alloc_1[%arg11, 0] [1, 16] [1, 1] : memref<1024x16xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of %subview_5 = memref.subview %alloc_1[%arg11, 0] [1, 16] [1, 1] : memref<1024x16xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Value: <UNKNOWN>
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x57590872a0b0
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729cc0
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x57590872a038
Creating dependency between mlir::dataflow::Liveness of %extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
and mlir::dataflow::Liveness on 0x57590872a038
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x57590872a050
Creating dependency between mlir::dataflow::Liveness of %15 = arith.index_cast %extracted : i32 to index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
and mlir::dataflow::Liveness on 0x57590872a050
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x57590872a068
Creating dependency between mlir::dataflow::Liveness of %16 = arith.muli %15, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
and mlir::dataflow::Liveness on 0x57590872a068
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x57590872a080
Creating dependency between mlir::dataflow::Liveness of %reinterpret_cast_4 = memref.reinterpret_cast %arg0 to offset: [%16], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
and mlir::dataflow::Liveness on 0x57590872a080
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x57590872a098
Creating dependency between mlir::dataflow::Liveness of %subview_5 = memref.subview %alloc_1[%arg11, 0] [1, 16] [1, 1] : memref<1024x16xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
and mlir::dataflow::Liveness on 0x57590872a098
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x57590872a0b0
Propagating update to mlir::dataflow::Liveness of %reinterpret_cast_4 = memref.reinterpret_cast %arg0 to offset: [%16], sizes: [1, 16], strides: [16, 1] : memref<*xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
Value: live
Propagating update to mlir::dataflow::Liveness of %subview_5 = memref.subview %alloc_1[%arg11, 0] [1, 16] [1, 1] : memref<1024x16xf32> to memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729cc0
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729eb8
Propagating update to mlir::dataflow::Liveness of %7 = arith.maxsi %6, %3 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: live
Propagating update to mlir::dataflow::Liveness of %3 = arith.addi %1, %2 : index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729d98
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729e40
Propagating update to mlir::dataflow::Liveness of <block argument> of type 'memref<*xi32>' at index: 1
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729f60
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729fa8
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729fd8
Propagating update to mlir::dataflow::Liveness of <block argument> of type 'memref<*xf32>' at index: 2
Value: live
Propagating update to mlir::dataflow::Liveness of %14 = arith.muli %3, %c16 : index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)
Value: live
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729d08
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of <block argument> of type 'i32' at index: 0
Value: <UNKNOWN>
Propagating update to mlir::dataflow::Lattice<mlir::dataflow::ConstantValue> of <block argument> of type 'i32' at index: 1
Value: <UNKNOWN>
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729d08
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x57590872a0c8
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x57590872a0c8
Propagating update to mlir::dataflow::Liveness of <block argument> of type 'i32' at index: 0
Value: live
Invoking 'mlir::dataflow::SparseConstantPropagation' on: 0x575908729ca8
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x57590872a080
Propagating update to mlir::dataflow::Liveness of <block argument> of type 'memref<*xf32>' at index: 0
Value: live
Propagating update to mlir::dataflow::Liveness of %16 = arith.muli %15, %c16 : index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x57590872a098
Propagating update to mlir::dataflow::Liveness of <block argument> of type 'index' at index: 0
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729ea0
Propagating update to mlir::dataflow::Liveness of %6 = arith.minsi %5, %c1971940 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729e28
Propagating update to mlir::dataflow::Liveness of %1 = arith.index_cast %0 : i32 to index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)
Value: live
Propagating update to mlir::dataflow::Liveness of %2 = arith.index_cast %arg10 : i32 to index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729fc0
Propagating update to mlir::dataflow::Liveness of %c16 = arith.constant 16 : index loc(unknown)
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x57590872a068
Propagating update to mlir::dataflow::Liveness of %15 = arith.index_cast %extracted : i32 to index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729e88
Propagating update to mlir::dataflow::Liveness of %5 = arith.addi %4, %2 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: live
Propagating update to mlir::dataflow::Liveness of %c1971940 = arith.constant 1971940 : index loc(unknown)
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729d20
Propagating update to mlir::dataflow::Liveness of %0 = arith.muli %arg7, %c49299_i32 : i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729e10
Propagating update to mlir::dataflow::Liveness of <block argument> of type 'i32' at index: 0
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729d68
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x57590872a050
Propagating update to mlir::dataflow::Liveness of %extracted = tensor.extract %10[%arg11] : tensor<1024xi32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729e70
Propagating update to mlir::dataflow::Liveness of %4 = arith.addi %1, %c1024 : index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729d80
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729d38
Propagating update to mlir::dataflow::Liveness of <block argument> of type 'i32' at index: 7
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x57590872a038
Propagating update to mlir::dataflow::Liveness of %10 = bufferization.to_tensor %alloc restrict writable : memref<1024xi32> to tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))
Value: live
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729e58
Invoking 'mlir::dataflow::LivenessAnalysis' on: 0x575908729f48

//===-------------------------------------------===//
Processing operation : 'func.func'(0x575908715540) {
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590871ba70) {
  %0 = "arith.constant"() <{value = 1 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x575908721000) {
  %1 = "arith.constant"() <{value = 0 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759086a90a0) {
  %2 = "arith.constant"() <{value = 49299 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x5759086a4fb0) {
  %3 = "arith.constant"() <{value = 1024 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x575908707790) {
  %4 = "arith.constant"() <{value = 1024 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x575908710040) {
  %5 = "arith.constant"() <{value = 1971940 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869f3f0) {
  %6 = "arith.constant"() <{value = 16 : index}> : () -> index loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.constant'(0x57590869c880) {
  %7 = "arith.constant"() <{value = 0 : i32}> : () -> i32 loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x5759086a93b0) {
  %8 = "arith.muli"(%arg7, %2) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32 loc("g_begin"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":32:31))


  * Pattern (anonymous namespace)::MulIMulIConstant : 'arith.muli -> (arith.constant, arith.muli)' {
Trying to match "(anonymous namespace)::MulIMulIConstant"
    ** Match Failure : There's no operation that defines operand 0 of castedOp0
"(anonymous namespace)::MulIMulIConstant" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x57590869b6d0) {
  %9 = "arith.index_cast"(%8) : (i32) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:31)


  * Pattern (anonymous namespace)::IndexCastOfIndexCast : 'arith.index_cast -> ()' {
Trying to match "(anonymous namespace)::IndexCastOfIndexCast"
    ** Match Failure : castedOp1 is not ::mlir::arith::IndexCastOp type
"(anonymous namespace)::IndexCastOfIndexCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::IndexCastOfExtSI : 'arith.index_cast -> (arith.index_cast)' {
Trying to match "(anonymous namespace)::IndexCastOfExtSI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtSIOp type
"(anonymous namespace)::IndexCastOfExtSI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x575908745f80) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x5759086a92c0) {
  %10 = "arith.index_cast"(%arg10) : (i32) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))


  * Pattern (anonymous namespace)::IndexCastOfIndexCast : 'arith.index_cast -> ()' {
Trying to match "(anonymous namespace)::IndexCastOfIndexCast"
    ** Match Failure : There's no operation that defines operand 0 of castedOp0
"(anonymous namespace)::IndexCastOfIndexCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::IndexCastOfExtSI : 'arith.index_cast -> (arith.index_cast)' {
Trying to match "(anonymous namespace)::IndexCastOfExtSI"
    ** Match Failure : There's no operation that defines operand 0 of castedOp0
"(anonymous namespace)::IndexCastOfExtSI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x5759086a7f50) {
  %11 = "arith.addi"(%9, %10) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("g_idx"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":34:52))


  * Pattern (anonymous namespace)::AddIAddConstant : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddIAddConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::AddIOp type
"(anonymous namespace)::AddIAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantRHS : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddISubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantLHS : 'arith.addi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::AddISubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneRhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneRhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneRhs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneLhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneLhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneLhs" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.reinterpret_cast'(0x5759086a7d10) {
  %12 = "memref.reinterpret_cast"(%arg1, %11) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1024>, static_strides = array<i64: 1>}> : (memref<*xi32>, index) -> memref<1024xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:40))


  * Pattern (anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder : 'memref.reinterpret_cast -> ()' {
Trying to match "(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder"
"(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x57590869e5a0) {
  %13 = "arith.addi"(%9, %4) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::AddIAddConstant : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddIAddConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::AddIOp type
"(anonymous namespace)::AddIAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantRHS : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddISubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantLHS : 'arith.addi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::AddISubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneRhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneRhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneRhs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneLhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneLhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneLhs" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.addi'(0x575908717a70) {
  %14 = "arith.addi"(%13, %10) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::AddIAddConstant : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddIAddConstant"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::AddIAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantRHS : 'arith.addi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::AddISubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddISubConstantLHS : 'arith.addi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::AddISubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::AddISubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneRhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneRhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneRhs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::AddIMulNegativeOneLhs : 'arith.addi -> (arith.subi)' {
Trying to match "(anonymous namespace)::AddIMulNegativeOneLhs"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::AddIMulNegativeOneLhs" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.minsi'(0x5759086a5280) {
  %15 = "arith.minsi"(%14, %5) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.maxsi'(0x57590869fe20) {
  %16 = "arith.maxsi"(%15, %11) : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.subi'(0x57590871b390) {
  %17 = "arith.subi"(%16, %11) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::SubIRHSAddConstant : 'arith.subi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::SubIRHSAddConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::AddIOp type
"(anonymous namespace)::SubIRHSAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubILHSAddConstant : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubILHSAddConstant"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::SubILHSAddConstant" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubIRHSSubConstantRHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubIRHSSubConstantRHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::SubIRHSSubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubIRHSSubConstantLHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubIRHSSubConstantLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::SubIRHSSubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubILHSSubConstantRHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubILHSSubConstantRHS"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::SubILHSSubConstantRHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubILHSSubConstantLHS : 'arith.subi -> (arith.addi, arith.constant)' {
Trying to match "(anonymous namespace)::SubILHSSubConstantLHS"
    ** Match Failure : ::mlir::success(::mlir::matchPattern(op0->getResult(0), ::mlir::m_Constant(&arg1_0))) return ::mlir::failure
"(anonymous namespace)::SubILHSSubConstantLHS" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubISubILHSRHSLHS : 'arith.subi -> (arith.constant, arith.subi)' {
Trying to match "(anonymous namespace)::SubISubILHSRHSLHS"
    ** Match Failure : castedOp1 is not ::mlir::arith::SubIOp type
"(anonymous namespace)::SubISubILHSRHSLHS" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.alloc'(0x575908709470) {
  %18 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::SimplifyAllocConst<mlir::memref::AllocOp> : 'memref.alloc -> ()' {
Trying to match "(anonymous namespace)::SimplifyAllocConst<mlir::memref::AllocOp>"
"(anonymous namespace)::SimplifyAllocConst<mlir::memref::AllocOp>" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyDeadAlloc<mlir::memref::AllocOp> : 'memref.alloc -> ()' {
Trying to match "(anonymous namespace)::SimplifyDeadAlloc<mlir::memref::AllocOp>"
"(anonymous namespace)::SimplifyDeadAlloc<mlir::memref::AllocOp>" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.cmpi'(0x57590871b5f0) {
  %19 = "arith.cmpi"(%17, %4) <{predicate = 2 : i64}> : (index, index) -> i1 loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::CmpIExtSI : 'arith.cmpi -> (arith.cmpi)' {
Trying to match "(anonymous namespace)::CmpIExtSI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtSIOp type
"(anonymous namespace)::CmpIExtSI" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::CmpIExtUI : 'arith.cmpi -> (arith.cmpi)' {
Trying to match "(anonymous namespace)::CmpIExtUI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtUIOp type
"(anonymous namespace)::CmpIExtUI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.if'(0x5759086a7400) {

  * Pattern (anonymous namespace)::CombineIfs : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::CombineIfs"
"(anonymous namespace)::CombineIfs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::CombineNestedIfs : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::CombineNestedIfs"
"(anonymous namespace)::CombineNestedIfs" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ConditionPropagation : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::ConditionPropagation"
"(anonymous namespace)::ConditionPropagation" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ConvertTrivialIfToSelect : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::ConvertTrivialIfToSelect"
"(anonymous namespace)::ConvertTrivialIfToSelect" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::RemoveEmptyElseBranch : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::RemoveEmptyElseBranch"
"(anonymous namespace)::RemoveEmptyElseBranch" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::RemoveStaticCondition : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::RemoveStaticCondition"
"(anonymous namespace)::RemoveStaticCondition" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::RemoveUnusedResults : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::RemoveUnusedResults"
"(anonymous namespace)::RemoveUnusedResults" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ReplaceIfYieldWithConditionOrValue : 'scf.if -> ()' {
Trying to match "(anonymous namespace)::ReplaceIfYieldWithConditionOrValue"
"(anonymous namespace)::ReplaceIfYieldWithConditionOrValue" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'linalg.fill'(0x57590870bb80) {

  * Pattern FoldTensorCastProducerOp : 'linalg.fill -> ()' {
Trying to match "FoldTensorCastProducerOp"
"FoldTensorCastProducerOp" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::EraseDeadLinalgOp : 'linalg.fill -> ()' {
Trying to match "(anonymous namespace)::EraseDeadLinalgOp"
"(anonymous namespace)::EraseDeadLinalgOp" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::InferStaticShapeOfOperands : 'linalg.fill -> ()' {
Trying to match "(anonymous namespace)::InferStaticShapeOfOperands"
"(anonymous namespace)::InferStaticShapeOfOperands" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'linalg.yield'(0x575908713b00) {
  "linalg.yield"(%arg12) : (i32) -> () loc(unknown)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.yield'(0x5759086839f0) {
  "scf.yield"() : () -> () loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.subview'(0x57590869f460) {
  %20 = "memref.subview"(%12, %17) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0>, static_sizes = array<i64: -9223372036854775808>, static_strides = array<i64: 1>}> : (memref<1024xi32, strided<[1], offset: ?>>, index) -> memref<?xi32, strided<[1], offset: ?>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer> : 'memref.subview -> ()' {
Trying to match "mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>"
"mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubViewOpMemRefCastFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::SubViewOpMemRefCastFolder"
"(anonymous namespace)::SubViewOpMemRefCastFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::TrivialSubViewOpFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::TrivialSubViewOpFolder"
"(anonymous namespace)::TrivialSubViewOpFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.subview'(0x57590869b2c0) {
  %21 = "memref.subview"(%18, %17) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0>, static_sizes = array<i64: -9223372036854775808>, static_strides = array<i64: 1>}> : (memref<1024xi32>, index) -> memref<?xi32, strided<[1]>> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer> : 'memref.subview -> ()' {
Trying to match "mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>"
"mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubViewOpMemRefCastFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::SubViewOpMemRefCastFolder"
"(anonymous namespace)::SubViewOpMemRefCastFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::TrivialSubViewOpFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::TrivialSubViewOpFolder"
"(anonymous namespace)::TrivialSubViewOpFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.copy'(0x57590870b840) {
  "memref.copy"(%20, %21) : (memref<?xi32, strided<[1], offset: ?>>, memref<?xi32, strided<[1]>>) -> () loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))


  * Pattern (anonymous namespace)::FoldCopyOfCast : 'memref.copy -> ()' {
Trying to match "(anonymous namespace)::FoldCopyOfCast"
"(anonymous namespace)::FoldCopyOfCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::FoldEmptyCopy : 'memref.copy -> ()' {
Trying to match "(anonymous namespace)::FoldEmptyCopy"
"(anonymous namespace)::FoldEmptyCopy" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::FoldSelfCopy : 'memref.copy -> ()' {
Trying to match "(anonymous namespace)::FoldSelfCopy"
"(anonymous namespace)::FoldSelfCopy" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'bufferization.to_tensor'(0x5759087101c0) {
  %22 = "bufferization.to_tensor"(%18) <{restrict, writable}> : (memref<1024xi32>) -> tensor<1024xi32> loc("indices"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":36:47))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.minsi'(0x5759086a3ae0) {
  %23 = "arith.minsi"(%17, %4) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.alloc'(0x5759087212b0) {
  %24 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))


  * Pattern (anonymous namespace)::SimplifyAllocConst<mlir::memref::AllocOp> : 'memref.alloc -> ()' {
Trying to match "(anonymous namespace)::SimplifyAllocConst<mlir::memref::AllocOp>"
"(anonymous namespace)::SimplifyAllocConst<mlir::memref::AllocOp>" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyDeadAlloc<mlir::memref::AllocOp> : 'memref.alloc -> ()' {
Trying to match "(anonymous namespace)::SimplifyDeadAlloc<mlir::memref::AllocOp>"
"(anonymous namespace)::SimplifyDeadAlloc<mlir::memref::AllocOp>" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.minsi'(0x57590867c100) {
  %25 = "arith.minsi"(%23, %4) : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.for'(0x575908745eb0) {

  * Pattern (anonymous namespace)::ForOpIterArgsFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpIterArgsFolder"
"(anonymous namespace)::ForOpIterArgsFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SimplifyTrivialLoops : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::SimplifyTrivialLoops"
"(anonymous namespace)::SimplifyTrivialLoops" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ForOpTensorCastFolder : 'scf.for -> ()' {
Trying to match "(anonymous namespace)::ForOpTensorCastFolder"
"(anonymous namespace)::ForOpTensorCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tensor.extract'(0x57590871b540) {
  %31 = "tensor.extract"(%22, %arg11) : (tensor<1024xi32>, index) -> i32 loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))


  * Pattern (anonymous namespace)::FoldFillWithTensorExtract : 'tensor.extract -> ()' {
Trying to match "(anonymous namespace)::FoldFillWithTensorExtract"
"(anonymous namespace)::FoldFillWithTensorExtract" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ExtractFromTensorGenerate : 'tensor.extract -> ()' {
Trying to match "(anonymous namespace)::ExtractFromTensorGenerate"
"(anonymous namespace)::ExtractFromTensorGenerate" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ExtractElementFromIndexCast : 'tensor.extract -> ()' {
Trying to match "(anonymous namespace)::ExtractElementFromIndexCast"
"(anonymous namespace)::ExtractElementFromIndexCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ExtractFromTensorCast : 'tensor.extract -> ()' {
Trying to match "(anonymous namespace)::ExtractFromTensorCast"
"(anonymous namespace)::ExtractFromTensorCast" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.index_cast'(0x5759087021d0) {
  %32 = "arith.index_cast"(%31) : (i32) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))


  * Pattern (anonymous namespace)::IndexCastOfIndexCast : 'arith.index_cast -> ()' {
Trying to match "(anonymous namespace)::IndexCastOfIndexCast"
    ** Match Failure : castedOp1 is not ::mlir::arith::IndexCastOp type
"(anonymous namespace)::IndexCastOfIndexCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::IndexCastOfExtSI : 'arith.index_cast -> (arith.index_cast)' {
Trying to match "(anonymous namespace)::IndexCastOfExtSI"
    ** Match Failure : castedOp1 is not ::mlir::arith::ExtSIOp type
"(anonymous namespace)::IndexCastOfExtSI" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x57590870fee0) {
  %33 = "arith.muli"(%32, %6) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))


  * Pattern (anonymous namespace)::MulIMulIConstant : 'arith.muli -> (arith.constant, arith.muli)' {
Trying to match "(anonymous namespace)::MulIMulIConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::MulIMulIConstant" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.reinterpret_cast'(0x57590870b3d0) {
  %34 = "memref.reinterpret_cast"(%arg0, %33) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: 16, 1>}> : (memref<*xf32>, index) -> memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:68))


  * Pattern (anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder : 'memref.reinterpret_cast -> ()' {
Trying to match "(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder"
"(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.subview'(0x5759087132e0) {
  %35 = "memref.subview"(%24, %arg11) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808, 0>, static_sizes = array<i64: 1, 16>, static_strides = array<i64: 1, 1>}> : (memref<1024x16xf32>, index) -> memref<1x16xf32, strided<[16, 1], offset: ?>> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))


  * Pattern mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer> : 'memref.subview -> ()' {
Trying to match "mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>"
"mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubViewOpMemRefCastFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::SubViewOpMemRefCastFolder"
"(anonymous namespace)::SubViewOpMemRefCastFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::TrivialSubViewOpFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::TrivialSubViewOpFolder"
"(anonymous namespace)::TrivialSubViewOpFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.copy'(0x575908717060) {
  "memref.copy"(%34, %35) : (memref<1x16xf32, strided<[16, 1], offset: ?>>, memref<1x16xf32, strided<[16, 1], offset: ?>>) -> () loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))


  * Pattern (anonymous namespace)::FoldCopyOfCast : 'memref.copy -> ()' {
Trying to match "(anonymous namespace)::FoldCopyOfCast"
"(anonymous namespace)::FoldCopyOfCast" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::FoldEmptyCopy : 'memref.copy -> ()' {
Trying to match "(anonymous namespace)::FoldEmptyCopy"
"(anonymous namespace)::FoldEmptyCopy" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::FoldSelfCopy : 'memref.copy -> ()' {
Trying to match "(anonymous namespace)::FoldSelfCopy"
"(anonymous namespace)::FoldSelfCopy" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.yield'(0x575908684a80) {
  "scf.yield"() : () -> () loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'bufferization.to_tensor'(0x57590871ade0) {
  %26 = "bufferization.to_tensor"(%24) <{restrict, writable}> : (memref<1024x16xf32>) -> tensor<1024x16xf32> loc("tmp_buf"("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":40:87))

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'arith.muli'(0x5759086a5190) {
  %27 = "arith.muli"(%11, %6) <{overflowFlags = #arith.overflow<none>}> : (index, index) -> index loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:48)


  * Pattern (anonymous namespace)::MulIMulIConstant : 'arith.muli -> (arith.constant, arith.muli)' {
Trying to match "(anonymous namespace)::MulIMulIConstant"
    ** Match Failure : castedOp1 is not ::mlir::arith::MulIOp type
"(anonymous namespace)::MulIMulIConstant" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.reinterpret_cast'(0x575908715ea0) {
  %28 = "memref.reinterpret_cast"(%arg2, %27) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808>, static_sizes = array<i64: 1024, 16>, static_strides = array<i64: 16, 1>}> : (memref<*xf32>, index) -> memref<1024x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:59)


  * Pattern (anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder : 'memref.reinterpret_cast -> ()' {
Trying to match "(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder"
"(anonymous namespace)::ReinterpretCastOpExtractStridedMetadataFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'tensor.extract_slice'(0x575908715f70) {
  %29 = "tensor.extract_slice"(%26, %23) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0, 0>, static_sizes = array<i64: -9223372036854775808, 16>, static_strides = array<i64: 1, 1>}> : (tensor<1024x16xf32>, index) -> tensor<?x16xf32> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)


  * Pattern mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::tensor::ExtractSliceOp, SliceReturnTypeCanonicalizer, SliceCanonicalizer> : 'tensor.extract_slice -> ()' {
Trying to match "mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::tensor::ExtractSliceOp, SliceReturnTypeCanonicalizer, SliceCanonicalizer>"
"mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::tensor::ExtractSliceOp, SliceReturnTypeCanonicalizer, SliceCanonicalizer>" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::ExtractSliceOpCastFolder : 'tensor.extract_slice -> ()' {
Trying to match "(anonymous namespace)::ExtractSliceOpCastFolder"
"(anonymous namespace)::ExtractSliceOpCastFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'memref.subview'(0x575908716040) {
  %30 = "memref.subview"(%28, %23) <{operandSegmentSizes = array<i32: 1, 0, 1, 0>, static_offsets = array<i64: 0, 0>, static_sizes = array<i64: -9223372036854775808, 16>, static_strides = array<i64: 1, 1>}> : (memref<1024x16xf32, strided<[16, 1], offset: ?>>, index) -> memref<?x16xf32, strided<[16, 1], offset: ?>> loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)


  * Pattern mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer> : 'memref.subview -> ()' {
Trying to match "mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>"
"mlir::OpWithOffsetSizesAndStridesConstantArgumentFolder<mlir::memref::SubViewOp, SubViewReturnTypeCanonicalizer, SubViewCanonicalizer>" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::SubViewOpMemRefCastFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::SubViewOpMemRefCastFolder"
"(anonymous namespace)::SubViewOpMemRefCastFolder" result 0
  } -> failure : pattern failed to match

  * Pattern (anonymous namespace)::TrivialSubViewOpFolder : 'memref.subview -> ()' {
Trying to match "(anonymous namespace)::TrivialSubViewOpFolder"
"(anonymous namespace)::TrivialSubViewOpFolder" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'bufferization.materialize_in_destination'(0x575908711c30) {
  "bufferization.materialize_in_destination"(%29, %30) <{writable}> : (tensor<?x16xf32>, memref<?x16xf32, strided<[16, 1], offset: ?>>) -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":41:87)


  * Pattern FoldTensorCastProducerOp : 'bufferization.materialize_in_destination -> ()' {
Trying to match "FoldTensorCastProducerOp"
"FoldTensorCastProducerOp" result 0
  } -> failure : pattern failed to match
} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'scf.yield'(0x5759086ad740) {
  "scf.yield"() : () -> () loc("input.mlir":29:5)

} -> failure : all patterns failed to match
//===-------------------------------------------===//

//===-------------------------------------------===//
Processing operation : 'func.return'(0x5759086ab810) {
  "func.return"() : () -> () loc("/home/devro/workspace/ts_sandbox/test_loop_index_select.py":29:0)

} -> failure : all patterns failed to match
//===-------------------------------------------===//
ImplicitTypeIDRegistry::lookupOrInsert(mlir::TypedAttr::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::MemRefLayoutAttrInterface::Trait<Empty>)
ImplicitTypeIDRegistry::lookupOrInsert(mlir::detail::StorageUserTrait::IsMutable<Empty>)
